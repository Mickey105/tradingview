import {
  EMPTY_OBJ,
  NO,
  NOOP,
  PatchFlagNames,
  camelize,
  capitalize,
  extend,
  generateCodeFrame,
  hyphenate,
  init_runtime_dom_esm_bundler,
  init_shared_esm_bundler,
  isArray,
  isBuiltInDirective,
  isHTMLTag,
  isObject,
  isOn,
  isReservedProp,
  isSVGTag,
  isString,
  isSymbol,
  isVoidTag,
  makeMap,
  parseStringStyle,
  runtime_dom_esm_bundler_exports,
  shared_esm_bundler_exports,
  slotFlagsText,
  toHandlerKey
} from "./chunk-Y6WQN6DY.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-THBTSZW5.js";

// node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js
function defaultOnError(error) {
  throw error;
}
function defaultOnWarn(msg) {
  console.warn(`[Vue warn] ${msg.message}`);
}
function createCompilerError(code, loc, messages, additionalMessage) {
  const msg = true ? (messages || errorMessages)[code] + (additionalMessage || ``) : code;
  const error = new SyntaxError(String(msg));
  error.code = code;
  error.loc = loc;
  return error;
}
function registerRuntimeHelpers(helpers) {
  Object.getOwnPropertySymbols(helpers).forEach((s) => {
    helperNameMap[s] = helpers[s];
  });
}
function createRoot(children, loc = locStub) {
  return {
    type: 0,
    children,
    helpers: [],
    components: [],
    directives: [],
    hoists: [],
    imports: [],
    cached: 0,
    temps: 0,
    codegenNode: void 0,
    loc
  };
}
function createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent2 = false, loc = locStub) {
  if (context) {
    if (isBlock) {
      context.helper(OPEN_BLOCK);
      context.helper(getVNodeBlockHelper(context.inSSR, isComponent2));
    } else {
      context.helper(getVNodeHelper(context.inSSR, isComponent2));
    }
    if (directives) {
      context.helper(WITH_DIRECTIVES);
    }
  }
  return {
    type: 13,
    tag,
    props,
    children,
    patchFlag,
    dynamicProps,
    directives,
    isBlock,
    disableTracking,
    isComponent: isComponent2,
    loc
  };
}
function createArrayExpression(elements, loc = locStub) {
  return {
    type: 17,
    loc,
    elements
  };
}
function createObjectExpression(properties, loc = locStub) {
  return {
    type: 15,
    loc,
    properties
  };
}
function createObjectProperty(key, value) {
  return {
    type: 16,
    loc: locStub,
    key: isString(key) ? createSimpleExpression(key, true) : key,
    value
  };
}
function createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {
  return {
    type: 4,
    loc,
    content,
    isStatic,
    constType: isStatic ? 3 : constType
  };
}
function createInterpolation(content, loc) {
  return {
    type: 5,
    loc,
    content: isString(content) ? createSimpleExpression(content, false, loc) : content
  };
}
function createCompoundExpression(children, loc = locStub) {
  return {
    type: 8,
    loc,
    children
  };
}
function createCallExpression(callee, args = [], loc = locStub) {
  return {
    type: 14,
    loc,
    callee,
    arguments: args
  };
}
function createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {
  return {
    type: 18,
    params,
    returns,
    newline,
    isSlot,
    loc
  };
}
function createConditionalExpression(test, consequent, alternate, newline = true) {
  return {
    type: 19,
    test,
    consequent,
    alternate,
    newline,
    loc: locStub
  };
}
function createCacheExpression(index, value, isVNode = false) {
  return {
    type: 20,
    index,
    value,
    isVNode,
    loc: locStub
  };
}
function createBlockStatement(body) {
  return {
    type: 21,
    body,
    loc: locStub
  };
}
function createTemplateLiteral(elements) {
  return {
    type: 22,
    elements,
    loc: locStub
  };
}
function createIfStatement(test, consequent, alternate) {
  return {
    type: 23,
    test,
    consequent,
    alternate,
    loc: locStub
  };
}
function createAssignmentExpression(left, right) {
  return {
    type: 24,
    left,
    right,
    loc: locStub
  };
}
function createSequenceExpression(expressions) {
  return {
    type: 25,
    expressions,
    loc: locStub
  };
}
function createReturnStatement(returns) {
  return {
    type: 26,
    returns,
    loc: locStub
  };
}
function isCoreComponent(tag) {
  if (isBuiltInType(tag, "Teleport")) {
    return TELEPORT;
  } else if (isBuiltInType(tag, "Suspense")) {
    return SUSPENSE;
  } else if (isBuiltInType(tag, "KeepAlive")) {
    return KEEP_ALIVE;
  } else if (isBuiltInType(tag, "BaseTransition")) {
    return BASE_TRANSITION;
  }
}
function getInnerRange(loc, offset, length) {
  const source = loc.source.slice(offset, offset + length);
  const newLoc = {
    source,
    start: advancePositionWithClone(loc.start, loc.source, offset),
    end: loc.end
  };
  if (length != null) {
    newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);
  }
  return newLoc;
}
function advancePositionWithClone(pos, source, numberOfCharacters = source.length) {
  return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);
}
function advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {
  let linesCount = 0;
  let lastNewLinePos = -1;
  for (let i = 0; i < numberOfCharacters; i++) {
    if (source.charCodeAt(i) === 10) {
      linesCount++;
      lastNewLinePos = i;
    }
  }
  pos.offset += numberOfCharacters;
  pos.line += linesCount;
  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;
  return pos;
}
function assert(condition, msg) {
  if (!condition) {
    throw new Error(msg || `unexpected compiler condition`);
  }
}
function findDir(node, name, allowEmpty = false) {
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 7 && (allowEmpty || p.exp) && (isString(name) ? p.name === name : name.test(p.name))) {
      return p;
    }
  }
}
function findProp(node, name, dynamicOnly = false, allowEmpty = false) {
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 6) {
      if (dynamicOnly)
        continue;
      if (p.name === name && (p.value || allowEmpty)) {
        return p;
      }
    } else if (p.name === "bind" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {
      return p;
    }
  }
}
function isStaticArgOf(arg, name) {
  return !!(arg && isStaticExp(arg) && arg.content === name);
}
function hasDynamicKeyVBind(node) {
  return node.props.some(
    (p) => p.type === 7 && p.name === "bind" && (!p.arg || p.arg.type !== 4 || !p.arg.isStatic)
  );
}
function isText(node) {
  return node.type === 5 || node.type === 2;
}
function isVSlot(p) {
  return p.type === 7 && p.name === "slot";
}
function isTemplateNode(node) {
  return node.type === 1 && node.tagType === 3;
}
function isSlotOutlet(node) {
  return node.type === 1 && node.tagType === 2;
}
function getVNodeHelper(ssr, isComponent2) {
  return ssr || isComponent2 ? CREATE_VNODE : CREATE_ELEMENT_VNODE;
}
function getVNodeBlockHelper(ssr, isComponent2) {
  return ssr || isComponent2 ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;
}
function getUnnormalizedProps(props, callPath = []) {
  if (props && !isString(props) && props.type === 14) {
    const callee = props.callee;
    if (!isString(callee) && propsHelperSet.has(callee)) {
      return getUnnormalizedProps(props.arguments[0], callPath.concat(props));
    }
  }
  return [props, callPath];
}
function injectProp(node, prop, context) {
  let propsWithInjection;
  let props = node.type === 13 ? node.props : node.arguments[2];
  let callPath = [];
  let parentCall;
  if (props && !isString(props) && props.type === 14) {
    const ret = getUnnormalizedProps(props);
    props = ret[0];
    callPath = ret[1];
    parentCall = callPath[callPath.length - 1];
  }
  if (props == null || isString(props)) {
    propsWithInjection = createObjectExpression([prop]);
  } else if (props.type === 14) {
    const first = props.arguments[0];
    if (!isString(first) && first.type === 15) {
      first.properties.unshift(prop);
    } else {
      if (props.callee === TO_HANDLERS) {
        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [
          createObjectExpression([prop]),
          props
        ]);
      } else {
        props.arguments.unshift(createObjectExpression([prop]));
      }
    }
    !propsWithInjection && (propsWithInjection = props);
  } else if (props.type === 15) {
    let alreadyExists = false;
    if (prop.key.type === 4) {
      const propKeyName = prop.key.content;
      alreadyExists = props.properties.some((p) => p.key.type === 4 && p.key.content === propKeyName);
    }
    if (!alreadyExists) {
      props.properties.unshift(prop);
    }
    propsWithInjection = props;
  } else {
    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [
      createObjectExpression([prop]),
      props
    ]);
    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {
      parentCall = callPath[callPath.length - 2];
    }
  }
  if (node.type === 13) {
    if (parentCall) {
      parentCall.arguments[0] = propsWithInjection;
    } else {
      node.props = propsWithInjection;
    }
  } else {
    if (parentCall) {
      parentCall.arguments[0] = propsWithInjection;
    } else {
      node.arguments[2] = propsWithInjection;
    }
  }
}
function toValidAssetId(name, type) {
  return `_${type}_${name.replace(/[^\w]/g, (searchValue, replaceValue) => {
    return searchValue === "-" ? "_" : name.charCodeAt(replaceValue).toString();
  })}`;
}
function hasScopeRef(node, ids) {
  if (!node || Object.keys(ids).length === 0) {
    return false;
  }
  switch (node.type) {
    case 1:
      for (let i = 0; i < node.props.length; i++) {
        const p = node.props[i];
        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {
          return true;
        }
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 11:
      if (hasScopeRef(node.source, ids)) {
        return true;
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 9:
      return node.branches.some((b) => hasScopeRef(b, ids));
    case 10:
      if (hasScopeRef(node.condition, ids)) {
        return true;
      }
      return node.children.some((c) => hasScopeRef(c, ids));
    case 4:
      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];
    case 8:
      return node.children.some((c) => isObject(c) && hasScopeRef(c, ids));
    case 5:
    case 12:
      return hasScopeRef(node.content, ids);
    case 2:
    case 3:
      return false;
    default:
      if (true)
        ;
      return false;
  }
}
function getMemoedVNodeCall(node) {
  if (node.type === 14 && node.callee === WITH_MEMO) {
    return node.arguments[1].returns;
  } else {
    return node;
  }
}
function makeBlock(node, { helper, removeHelper, inSSR }) {
  if (!node.isBlock) {
    node.isBlock = true;
    removeHelper(getVNodeHelper(inSSR, node.isComponent));
    helper(OPEN_BLOCK);
    helper(getVNodeBlockHelper(inSSR, node.isComponent));
  }
}
function getCompatValue(key, context) {
  const config = context.options ? context.options.compatConfig : context.compatConfig;
  const value = config && config[key];
  if (key === "MODE") {
    return value || 3;
  } else {
    return value;
  }
}
function isCompatEnabled(key, context) {
  const mode = getCompatValue("MODE", context);
  const value = getCompatValue(key, context);
  return mode === 3 ? value === true : value !== false;
}
function checkCompatEnabled(key, context, loc, ...args) {
  const enabled = isCompatEnabled(key, context);
  if (enabled) {
    warnDeprecation(key, context, loc, ...args);
  }
  return enabled;
}
function warnDeprecation(key, context, loc, ...args) {
  const val = getCompatValue(key, context);
  if (val === "suppress-warning") {
    return;
  }
  const { message, link } = deprecationData[key];
  const msg = `(deprecation ${key}) ${typeof message === "function" ? message(...args) : message}${link ? `
  Details: ${link}` : ``}`;
  const err = new SyntaxError(msg);
  err.code = key;
  if (loc)
    err.loc = loc;
  context.onWarn(err);
}
function baseParse(content, options = {}) {
  const context = createParserContext(content, options);
  const start = getCursor(context);
  return createRoot(parseChildren(context, 0, []), getSelection(context, start));
}
function createParserContext(content, rawOptions) {
  const options = extend({}, defaultParserOptions);
  let key;
  for (key in rawOptions) {
    options[key] = rawOptions[key] === void 0 ? defaultParserOptions[key] : rawOptions[key];
  }
  return {
    options,
    column: 1,
    line: 1,
    offset: 0,
    originalSource: content,
    source: content,
    inPre: false,
    inVPre: false,
    onWarn: options.onWarn
  };
}
function parseChildren(context, mode, ancestors) {
  const parent = last(ancestors);
  const ns = parent ? parent.ns : 0;
  const nodes = [];
  while (!isEnd(context, mode, ancestors)) {
    const s = context.source;
    let node = void 0;
    if (mode === 0 || mode === 1) {
      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {
        node = parseInterpolation(context, mode);
      } else if (mode === 0 && s[0] === "<") {
        if (s.length === 1) {
          emitError(context, 5, 1);
        } else if (s[1] === "!") {
          if (startsWith(s, "<!--")) {
            node = parseComment(context);
          } else if (startsWith(s, "<!DOCTYPE")) {
            node = parseBogusComment(context);
          } else if (startsWith(s, "<![CDATA[")) {
            if (ns !== 0) {
              node = parseCDATA(context, ancestors);
            } else {
              emitError(context, 1);
              node = parseBogusComment(context);
            }
          } else {
            emitError(context, 11);
            node = parseBogusComment(context);
          }
        } else if (s[1] === "/") {
          if (s.length === 2) {
            emitError(context, 5, 2);
          } else if (s[2] === ">") {
            emitError(context, 14, 2);
            advanceBy(context, 3);
            continue;
          } else if (/[a-z]/i.test(s[2])) {
            emitError(context, 23);
            parseTag(context, 1, parent);
            continue;
          } else {
            emitError(context, 12, 2);
            node = parseBogusComment(context);
          }
        } else if (/[a-z]/i.test(s[1])) {
          node = parseElement(context, ancestors);
          if (isCompatEnabled("COMPILER_NATIVE_TEMPLATE", context) && node && node.tag === "template" && !node.props.some((p) => p.type === 7 && isSpecialTemplateDirective(p.name))) {
            warnDeprecation("COMPILER_NATIVE_TEMPLATE", context, node.loc);
            node = node.children;
          }
        } else if (s[1] === "?") {
          emitError(context, 21, 1);
          node = parseBogusComment(context);
        } else {
          emitError(context, 12, 1);
        }
      }
    }
    if (!node) {
      node = parseText(context, mode);
    }
    if (isArray(node)) {
      for (let i = 0; i < node.length; i++) {
        pushNode(nodes, node[i]);
      }
    } else {
      pushNode(nodes, node);
    }
  }
  let removedWhitespace = false;
  if (mode !== 2 && mode !== 1) {
    const shouldCondense = context.options.whitespace !== "preserve";
    for (let i = 0; i < nodes.length; i++) {
      const node = nodes[i];
      if (!context.inPre && node.type === 2) {
        if (!/[^\t\r\n\f ]/.test(node.content)) {
          const prev = nodes[i - 1];
          const next = nodes[i + 1];
          if (!prev || !next || shouldCondense && (prev.type === 3 || next.type === 3 || prev.type === 1 && next.type === 1 && /[\r\n]/.test(node.content))) {
            removedWhitespace = true;
            nodes[i] = null;
          } else {
            node.content = " ";
          }
        } else if (shouldCondense) {
          node.content = node.content.replace(/[\t\r\n\f ]+/g, " ");
        }
      } else if (node.type === 3 && !context.options.comments) {
        removedWhitespace = true;
        nodes[i] = null;
      }
    }
    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {
      const first = nodes[0];
      if (first && first.type === 2) {
        first.content = first.content.replace(/^\r?\n/, "");
      }
    }
  }
  return removedWhitespace ? nodes.filter(Boolean) : nodes;
}
function pushNode(nodes, node) {
  if (node.type === 2) {
    const prev = last(nodes);
    if (prev && prev.type === 2 && prev.loc.end.offset === node.loc.start.offset) {
      prev.content += node.content;
      prev.loc.end = node.loc.end;
      prev.loc.source += node.loc.source;
      return;
    }
  }
  nodes.push(node);
}
function parseCDATA(context, ancestors) {
  advanceBy(context, 9);
  const nodes = parseChildren(context, 3, ancestors);
  if (context.source.length === 0) {
    emitError(context, 6);
  } else {
    advanceBy(context, 3);
  }
  return nodes;
}
function parseComment(context) {
  const start = getCursor(context);
  let content;
  const match = /--(\!)?>/.exec(context.source);
  if (!match) {
    content = context.source.slice(4);
    advanceBy(context, context.source.length);
    emitError(context, 7);
  } else {
    if (match.index <= 3) {
      emitError(context, 0);
    }
    if (match[1]) {
      emitError(context, 10);
    }
    content = context.source.slice(4, match.index);
    const s = context.source.slice(0, match.index);
    let prevIndex = 1, nestedIndex = 0;
    while ((nestedIndex = s.indexOf("<!--", prevIndex)) !== -1) {
      advanceBy(context, nestedIndex - prevIndex + 1);
      if (nestedIndex + 4 < s.length) {
        emitError(context, 16);
      }
      prevIndex = nestedIndex + 1;
    }
    advanceBy(context, match.index + match[0].length - prevIndex + 1);
  }
  return {
    type: 3,
    content,
    loc: getSelection(context, start)
  };
}
function parseBogusComment(context) {
  const start = getCursor(context);
  const contentStart = context.source[1] === "?" ? 1 : 2;
  let content;
  const closeIndex = context.source.indexOf(">");
  if (closeIndex === -1) {
    content = context.source.slice(contentStart);
    advanceBy(context, context.source.length);
  } else {
    content = context.source.slice(contentStart, closeIndex);
    advanceBy(context, closeIndex + 1);
  }
  return {
    type: 3,
    content,
    loc: getSelection(context, start)
  };
}
function parseElement(context, ancestors) {
  const wasInPre = context.inPre;
  const wasInVPre = context.inVPre;
  const parent = last(ancestors);
  const element = parseTag(context, 0, parent);
  const isPreBoundary = context.inPre && !wasInPre;
  const isVPreBoundary = context.inVPre && !wasInVPre;
  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {
    if (isPreBoundary) {
      context.inPre = false;
    }
    if (isVPreBoundary) {
      context.inVPre = false;
    }
    return element;
  }
  ancestors.push(element);
  const mode = context.options.getTextMode(element, parent);
  const children = parseChildren(context, mode, ancestors);
  ancestors.pop();
  {
    const inlineTemplateProp = element.props.find((p) => p.type === 6 && p.name === "inline-template");
    if (inlineTemplateProp && checkCompatEnabled("COMPILER_INLINE_TEMPLATE", context, inlineTemplateProp.loc)) {
      const loc = getSelection(context, element.loc.end);
      inlineTemplateProp.value = {
        type: 2,
        content: loc.source,
        loc
      };
    }
  }
  element.children = children;
  if (startsWithEndTagOpen(context.source, element.tag)) {
    parseTag(context, 1, parent);
  } else {
    emitError(context, 24, 0, element.loc.start);
    if (context.source.length === 0 && element.tag.toLowerCase() === "script") {
      const first = children[0];
      if (first && startsWith(first.loc.source, "<!--")) {
        emitError(context, 8);
      }
    }
  }
  element.loc = getSelection(context, element.loc.start);
  if (isPreBoundary) {
    context.inPre = false;
  }
  if (isVPreBoundary) {
    context.inVPre = false;
  }
  return element;
}
function parseTag(context, type, parent) {
  const start = getCursor(context);
  const match = /^<\/?([a-z][^\t\r\n\f />]*)/i.exec(context.source);
  const tag = match[1];
  const ns = context.options.getNamespace(tag, parent);
  advanceBy(context, match[0].length);
  advanceSpaces(context);
  const cursor = getCursor(context);
  const currentSource = context.source;
  if (context.options.isPreTag(tag)) {
    context.inPre = true;
  }
  let props = parseAttributes(context, type);
  if (type === 0 && !context.inVPre && props.some((p) => p.type === 7 && p.name === "pre")) {
    context.inVPre = true;
    extend(context, cursor);
    context.source = currentSource;
    props = parseAttributes(context, type).filter((p) => p.name !== "v-pre");
  }
  let isSelfClosing = false;
  if (context.source.length === 0) {
    emitError(context, 9);
  } else {
    isSelfClosing = startsWith(context.source, "/>");
    if (type === 1 && isSelfClosing) {
      emitError(context, 4);
    }
    advanceBy(context, isSelfClosing ? 2 : 1);
  }
  if (type === 1) {
    return;
  }
  if (isCompatEnabled("COMPILER_V_IF_V_FOR_PRECEDENCE", context)) {
    let hasIf = false;
    let hasFor = false;
    for (let i = 0; i < props.length; i++) {
      const p = props[i];
      if (p.type === 7) {
        if (p.name === "if") {
          hasIf = true;
        } else if (p.name === "for") {
          hasFor = true;
        }
      }
      if (hasIf && hasFor) {
        warnDeprecation("COMPILER_V_IF_V_FOR_PRECEDENCE", context, getSelection(context, start));
        break;
      }
    }
  }
  let tagType = 0;
  if (!context.inVPre) {
    if (tag === "slot") {
      tagType = 2;
    } else if (tag === "template") {
      if (props.some((p) => p.type === 7 && isSpecialTemplateDirective(p.name))) {
        tagType = 3;
      }
    } else if (isComponent(tag, props, context)) {
      tagType = 1;
    }
  }
  return {
    type: 1,
    ns,
    tag,
    tagType,
    props,
    isSelfClosing,
    children: [],
    loc: getSelection(context, start),
    codegenNode: void 0
  };
}
function isComponent(tag, props, context) {
  const options = context.options;
  if (options.isCustomElement(tag)) {
    return false;
  }
  if (tag === "component" || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {
    return true;
  }
  for (let i = 0; i < props.length; i++) {
    const p = props[i];
    if (p.type === 6) {
      if (p.name === "is" && p.value) {
        if (p.value.content.startsWith("vue:")) {
          return true;
        } else if (checkCompatEnabled("COMPILER_IS_ON_ELEMENT", context, p.loc)) {
          return true;
        }
      }
    } else {
      if (p.name === "is") {
        return true;
      } else if (p.name === "bind" && isStaticArgOf(p.arg, "is") && true && checkCompatEnabled("COMPILER_IS_ON_ELEMENT", context, p.loc)) {
        return true;
      }
    }
  }
}
function parseAttributes(context, type) {
  const props = [];
  const attributeNames = /* @__PURE__ */ new Set();
  while (context.source.length > 0 && !startsWith(context.source, ">") && !startsWith(context.source, "/>")) {
    if (startsWith(context.source, "/")) {
      emitError(context, 22);
      advanceBy(context, 1);
      advanceSpaces(context);
      continue;
    }
    if (type === 1) {
      emitError(context, 3);
    }
    const attr = parseAttribute(context, attributeNames);
    if (attr.type === 6 && attr.value && attr.name === "class") {
      attr.value.content = attr.value.content.replace(/\s+/g, " ").trim();
    }
    if (type === 0) {
      props.push(attr);
    }
    if (/^[^\t\r\n\f />]/.test(context.source)) {
      emitError(context, 15);
    }
    advanceSpaces(context);
  }
  return props;
}
function parseAttribute(context, nameSet) {
  const start = getCursor(context);
  const match = /^[^\t\r\n\f />][^\t\r\n\f />=]*/.exec(context.source);
  const name = match[0];
  if (nameSet.has(name)) {
    emitError(context, 2);
  }
  nameSet.add(name);
  if (name[0] === "=") {
    emitError(context, 19);
  }
  {
    const pattern = /["'<]/g;
    let m;
    while (m = pattern.exec(name)) {
      emitError(context, 17, m.index);
    }
  }
  advanceBy(context, name.length);
  let value = void 0;
  if (/^[\t\r\n\f ]*=/.test(context.source)) {
    advanceSpaces(context);
    advanceBy(context, 1);
    advanceSpaces(context);
    value = parseAttributeValue(context);
    if (!value) {
      emitError(context, 13);
    }
  }
  const loc = getSelection(context, start);
  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\.|@|#)/.test(name)) {
    const match2 = /(?:^v-([a-z0-9-]+))?(?:(?::|^\.|^@|^#)(\[[^\]]+\]|[^\.]+))?(.+)?$/i.exec(name);
    let isPropShorthand = startsWith(name, ".");
    let dirName = match2[1] || (isPropShorthand || startsWith(name, ":") ? "bind" : startsWith(name, "@") ? "on" : "slot");
    let arg;
    if (match2[2]) {
      const isSlot = dirName === "slot";
      const startOffset = name.lastIndexOf(match2[2]);
      const loc2 = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match2[2].length + (isSlot && match2[3] || "").length));
      let content = match2[2];
      let isStatic = true;
      if (content.startsWith("[")) {
        isStatic = false;
        if (!content.endsWith("]")) {
          emitError(context, 27);
          content = content.slice(1);
        } else {
          content = content.slice(1, content.length - 1);
        }
      } else if (isSlot) {
        content += match2[3] || "";
      }
      arg = {
        type: 4,
        content,
        isStatic,
        constType: isStatic ? 3 : 0,
        loc: loc2
      };
    }
    if (value && value.isQuoted) {
      const valueLoc = value.loc;
      valueLoc.start.offset++;
      valueLoc.start.column++;
      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);
      valueLoc.source = valueLoc.source.slice(1, -1);
    }
    const modifiers = match2[3] ? match2[3].slice(1).split(".") : [];
    if (isPropShorthand)
      modifiers.push("prop");
    if (dirName === "bind" && arg) {
      if (modifiers.includes("sync") && checkCompatEnabled("COMPILER_V_BIND_SYNC", context, loc, arg.loc.source)) {
        dirName = "model";
        modifiers.splice(modifiers.indexOf("sync"), 1);
      }
      if (modifiers.includes("prop")) {
        checkCompatEnabled("COMPILER_V_BIND_PROP", context, loc);
      }
    }
    return {
      type: 7,
      name: dirName,
      exp: value && {
        type: 4,
        content: value.content,
        isStatic: false,
        constType: 0,
        loc: value.loc
      },
      arg,
      modifiers,
      loc
    };
  }
  if (!context.inVPre && startsWith(name, "v-")) {
    emitError(context, 26);
  }
  return {
    type: 6,
    name,
    value: value && {
      type: 2,
      content: value.content,
      loc: value.loc
    },
    loc
  };
}
function parseAttributeValue(context) {
  const start = getCursor(context);
  let content;
  const quote = context.source[0];
  const isQuoted = quote === `"` || quote === `'`;
  if (isQuoted) {
    advanceBy(context, 1);
    const endIndex = context.source.indexOf(quote);
    if (endIndex === -1) {
      content = parseTextData(context, context.source.length, 4);
    } else {
      content = parseTextData(context, endIndex, 4);
      advanceBy(context, 1);
    }
  } else {
    const match = /^[^\t\r\n\f >]+/.exec(context.source);
    if (!match) {
      return void 0;
    }
    const unexpectedChars = /["'<=`]/g;
    let m;
    while (m = unexpectedChars.exec(match[0])) {
      emitError(context, 18, m.index);
    }
    content = parseTextData(context, match[0].length, 4);
  }
  return { content, isQuoted, loc: getSelection(context, start) };
}
function parseInterpolation(context, mode) {
  const [open, close] = context.options.delimiters;
  const closeIndex = context.source.indexOf(close, open.length);
  if (closeIndex === -1) {
    emitError(context, 25);
    return void 0;
  }
  const start = getCursor(context);
  advanceBy(context, open.length);
  const innerStart = getCursor(context);
  const innerEnd = getCursor(context);
  const rawContentLength = closeIndex - open.length;
  const rawContent = context.source.slice(0, rawContentLength);
  const preTrimContent = parseTextData(context, rawContentLength, mode);
  const content = preTrimContent.trim();
  const startOffset = preTrimContent.indexOf(content);
  if (startOffset > 0) {
    advancePositionWithMutation(innerStart, rawContent, startOffset);
  }
  const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);
  advancePositionWithMutation(innerEnd, rawContent, endOffset);
  advanceBy(context, close.length);
  return {
    type: 5,
    content: {
      type: 4,
      isStatic: false,
      constType: 0,
      content,
      loc: getSelection(context, innerStart, innerEnd)
    },
    loc: getSelection(context, start)
  };
}
function parseText(context, mode) {
  const endTokens = mode === 3 ? ["]]>"] : ["<", context.options.delimiters[0]];
  let endIndex = context.source.length;
  for (let i = 0; i < endTokens.length; i++) {
    const index = context.source.indexOf(endTokens[i], 1);
    if (index !== -1 && endIndex > index) {
      endIndex = index;
    }
  }
  const start = getCursor(context);
  const content = parseTextData(context, endIndex, mode);
  return {
    type: 2,
    content,
    loc: getSelection(context, start)
  };
}
function parseTextData(context, length, mode) {
  const rawText = context.source.slice(0, length);
  advanceBy(context, length);
  if (mode === 2 || mode === 3 || !rawText.includes("&")) {
    return rawText;
  } else {
    return context.options.decodeEntities(rawText, mode === 4);
  }
}
function getCursor(context) {
  const { column, line, offset } = context;
  return { column, line, offset };
}
function getSelection(context, start, end) {
  end = end || getCursor(context);
  return {
    start,
    end,
    source: context.originalSource.slice(start.offset, end.offset)
  };
}
function last(xs) {
  return xs[xs.length - 1];
}
function startsWith(source, searchString) {
  return source.startsWith(searchString);
}
function advanceBy(context, numberOfCharacters) {
  const { source } = context;
  advancePositionWithMutation(context, source, numberOfCharacters);
  context.source = source.slice(numberOfCharacters);
}
function advanceSpaces(context) {
  const match = /^[\t\r\n\f ]+/.exec(context.source);
  if (match) {
    advanceBy(context, match[0].length);
  }
}
function getNewPosition(context, start, numberOfCharacters) {
  return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);
}
function emitError(context, code, offset, loc = getCursor(context)) {
  if (offset) {
    loc.offset += offset;
    loc.column += offset;
  }
  context.options.onError(createCompilerError(code, {
    start: loc,
    end: loc,
    source: ""
  }));
}
function isEnd(context, mode, ancestors) {
  const s = context.source;
  switch (mode) {
    case 0:
      if (startsWith(s, "</")) {
        for (let i = ancestors.length - 1; i >= 0; --i) {
          if (startsWithEndTagOpen(s, ancestors[i].tag)) {
            return true;
          }
        }
      }
      break;
    case 1:
    case 2: {
      const parent = last(ancestors);
      if (parent && startsWithEndTagOpen(s, parent.tag)) {
        return true;
      }
      break;
    }
    case 3:
      if (startsWith(s, "]]>")) {
        return true;
      }
      break;
  }
  return !s;
}
function startsWithEndTagOpen(source, tag) {
  return startsWith(source, "</") && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\t\r\n\f />]/.test(source[2 + tag.length] || ">");
}
function hoistStatic(root, context) {
  walk(
    root,
    context,
    isSingleElementRoot(root, root.children[0])
  );
}
function isSingleElementRoot(root, child) {
  const { children } = root;
  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);
}
function walk(node, context, doNotHoistNode = false) {
  const { children } = node;
  const originalCount = children.length;
  let hoistedCount = 0;
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    if (child.type === 1 && child.tagType === 0) {
      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);
      if (constantType > 0) {
        if (constantType >= 2) {
          child.codegenNode.patchFlag = -1 + (true ? ` /* HOISTED */` : ``);
          child.codegenNode = context.hoist(child.codegenNode);
          hoistedCount++;
          continue;
        }
      } else {
        const codegenNode = child.codegenNode;
        if (codegenNode.type === 13) {
          const flag = getPatchFlag(codegenNode);
          if ((!flag || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {
            const props = getNodeProps(child);
            if (props) {
              codegenNode.props = context.hoist(props);
            }
          }
          if (codegenNode.dynamicProps) {
            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);
          }
        }
      }
    } else if (child.type === 12 && getConstantType(child.content, context) >= 2) {
      child.codegenNode = context.hoist(child.codegenNode);
      hoistedCount++;
    }
    if (child.type === 1) {
      const isComponent2 = child.tagType === 1;
      if (isComponent2) {
        context.scopes.vSlot++;
      }
      walk(child, context);
      if (isComponent2) {
        context.scopes.vSlot--;
      }
    } else if (child.type === 11) {
      walk(child, context, child.children.length === 1);
    } else if (child.type === 9) {
      for (let i2 = 0; i2 < child.branches.length; i2++) {
        walk(child.branches[i2], context, child.branches[i2].children.length === 1);
      }
    }
  }
  if (hoistedCount && context.transformHoist) {
    context.transformHoist(children, context, node);
  }
  if (hoistedCount && hoistedCount === originalCount && node.type === 1 && node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && isArray(node.codegenNode.children)) {
    node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));
  }
}
function getConstantType(node, context) {
  const { constantCache } = context;
  switch (node.type) {
    case 1:
      if (node.tagType !== 0) {
        return 0;
      }
      const cached = constantCache.get(node);
      if (cached !== void 0) {
        return cached;
      }
      const codegenNode = node.codegenNode;
      if (codegenNode.type !== 13) {
        return 0;
      }
      if (codegenNode.isBlock && node.tag !== "svg" && node.tag !== "foreignObject") {
        return 0;
      }
      const flag = getPatchFlag(codegenNode);
      if (!flag) {
        let returnType2 = 3;
        const generatedPropsType = getGeneratedPropsConstantType(node, context);
        if (generatedPropsType === 0) {
          constantCache.set(node, 0);
          return 0;
        }
        if (generatedPropsType < returnType2) {
          returnType2 = generatedPropsType;
        }
        for (let i = 0; i < node.children.length; i++) {
          const childType = getConstantType(node.children[i], context);
          if (childType === 0) {
            constantCache.set(node, 0);
            return 0;
          }
          if (childType < returnType2) {
            returnType2 = childType;
          }
        }
        if (returnType2 > 1) {
          for (let i = 0; i < node.props.length; i++) {
            const p = node.props[i];
            if (p.type === 7 && p.name === "bind" && p.exp) {
              const expType = getConstantType(p.exp, context);
              if (expType === 0) {
                constantCache.set(node, 0);
                return 0;
              }
              if (expType < returnType2) {
                returnType2 = expType;
              }
            }
          }
        }
        if (codegenNode.isBlock) {
          for (let i = 0; i < node.props.length; i++) {
            const p = node.props[i];
            if (p.type === 7) {
              constantCache.set(node, 0);
              return 0;
            }
          }
          context.removeHelper(OPEN_BLOCK);
          context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));
          codegenNode.isBlock = false;
          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));
        }
        constantCache.set(node, returnType2);
        return returnType2;
      } else {
        constantCache.set(node, 0);
        return 0;
      }
    case 2:
    case 3:
      return 3;
    case 9:
    case 11:
    case 10:
      return 0;
    case 5:
    case 12:
      return getConstantType(node.content, context);
    case 4:
      return node.constType;
    case 8:
      let returnType = 3;
      for (let i = 0; i < node.children.length; i++) {
        const child = node.children[i];
        if (isString(child) || isSymbol(child)) {
          continue;
        }
        const childType = getConstantType(child, context);
        if (childType === 0) {
          return 0;
        } else if (childType < returnType) {
          returnType = childType;
        }
      }
      return returnType;
    default:
      if (true)
        ;
      return 0;
  }
}
function getConstantTypeOfHelperCall(value, context) {
  if (value.type === 14 && !isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {
    const arg = value.arguments[0];
    if (arg.type === 4) {
      return getConstantType(arg, context);
    } else if (arg.type === 14) {
      return getConstantTypeOfHelperCall(arg, context);
    }
  }
  return 0;
}
function getGeneratedPropsConstantType(node, context) {
  let returnType = 3;
  const props = getNodeProps(node);
  if (props && props.type === 15) {
    const { properties } = props;
    for (let i = 0; i < properties.length; i++) {
      const { key, value } = properties[i];
      const keyType = getConstantType(key, context);
      if (keyType === 0) {
        return keyType;
      }
      if (keyType < returnType) {
        returnType = keyType;
      }
      let valueType;
      if (value.type === 4) {
        valueType = getConstantType(value, context);
      } else if (value.type === 14) {
        valueType = getConstantTypeOfHelperCall(value, context);
      } else {
        valueType = 0;
      }
      if (valueType === 0) {
        return valueType;
      }
      if (valueType < returnType) {
        returnType = valueType;
      }
    }
  }
  return returnType;
}
function getNodeProps(node) {
  const codegenNode = node.codegenNode;
  if (codegenNode.type === 13) {
    return codegenNode.props;
  }
}
function getPatchFlag(node) {
  const flag = node.patchFlag;
  return flag ? parseInt(flag, 10) : void 0;
}
function createTransformContext(root, { filename = "", prefixIdentifiers = false, hoistStatic: hoistStatic2 = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {
  const nameMatch = filename.replace(/\?.*$/, "").match(/([^/\\]+)\.\w+$/);
  const context = {
    selfName: nameMatch && capitalize(camelize(nameMatch[1])),
    prefixIdentifiers,
    hoistStatic: hoistStatic2,
    cacheHandlers,
    nodeTransforms,
    directiveTransforms,
    transformHoist,
    isBuiltInComponent,
    isCustomElement,
    expressionPlugins,
    scopeId,
    slotted,
    ssr,
    inSSR,
    ssrCssVars,
    bindingMetadata,
    inline,
    isTS,
    onError,
    onWarn,
    compatConfig,
    root,
    helpers: /* @__PURE__ */ new Map(),
    components: /* @__PURE__ */ new Set(),
    directives: /* @__PURE__ */ new Set(),
    hoists: [],
    imports: [],
    constantCache: /* @__PURE__ */ new Map(),
    temps: 0,
    cached: 0,
    identifiers: /* @__PURE__ */ Object.create(null),
    scopes: {
      vFor: 0,
      vSlot: 0,
      vPre: 0,
      vOnce: 0
    },
    parent: null,
    currentNode: root,
    childIndex: 0,
    inVOnce: false,
    helper(name) {
      const count = context.helpers.get(name) || 0;
      context.helpers.set(name, count + 1);
      return name;
    },
    removeHelper(name) {
      const count = context.helpers.get(name);
      if (count) {
        const currentCount = count - 1;
        if (!currentCount) {
          context.helpers.delete(name);
        } else {
          context.helpers.set(name, currentCount);
        }
      }
    },
    helperString(name) {
      return `_${helperNameMap[context.helper(name)]}`;
    },
    replaceNode(node) {
      if (true) {
        if (!context.currentNode) {
          throw new Error(`Node being replaced is already removed.`);
        }
        if (!context.parent) {
          throw new Error(`Cannot replace root node.`);
        }
      }
      context.parent.children[context.childIndex] = context.currentNode = node;
    },
    removeNode(node) {
      if (!context.parent) {
        throw new Error(`Cannot remove root node.`);
      }
      const list = context.parent.children;
      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;
      if (removalIndex < 0) {
        throw new Error(`node being removed is not a child of current parent`);
      }
      if (!node || node === context.currentNode) {
        context.currentNode = null;
        context.onNodeRemoved();
      } else {
        if (context.childIndex > removalIndex) {
          context.childIndex--;
          context.onNodeRemoved();
        }
      }
      context.parent.children.splice(removalIndex, 1);
    },
    onNodeRemoved: () => {
    },
    addIdentifiers(exp) {
    },
    removeIdentifiers(exp) {
    },
    hoist(exp) {
      if (isString(exp))
        exp = createSimpleExpression(exp);
      context.hoists.push(exp);
      const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2);
      identifier.hoisted = exp;
      return identifier;
    },
    cache(exp, isVNode = false) {
      return createCacheExpression(context.cached++, exp, isVNode);
    }
  };
  {
    context.filters = /* @__PURE__ */ new Set();
  }
  return context;
}
function transform(root, options) {
  const context = createTransformContext(root, options);
  traverseNode(root, context);
  if (options.hoistStatic) {
    hoistStatic(root, context);
  }
  if (!options.ssr) {
    createRootCodegen(root, context);
  }
  root.helpers = [...context.helpers.keys()];
  root.components = [...context.components];
  root.directives = [...context.directives];
  root.imports = context.imports;
  root.hoists = context.hoists;
  root.temps = context.temps;
  root.cached = context.cached;
  {
    root.filters = [...context.filters];
  }
}
function createRootCodegen(root, context) {
  const { helper } = context;
  const { children } = root;
  if (children.length === 1) {
    const child = children[0];
    if (isSingleElementRoot(root, child) && child.codegenNode) {
      const codegenNode = child.codegenNode;
      if (codegenNode.type === 13) {
        makeBlock(codegenNode, context);
      }
      root.codegenNode = codegenNode;
    } else {
      root.codegenNode = child;
    }
  } else if (children.length > 1) {
    let patchFlag = 64;
    let patchFlagText = PatchFlagNames[64];
    if (children.filter((c) => c.type !== 3).length === 1) {
      patchFlag |= 2048;
      patchFlagText += `, ${PatchFlagNames[2048]}`;
    }
    root.codegenNode = createVNodeCall(context, helper(FRAGMENT), void 0, root.children, patchFlag + (true ? ` /* ${patchFlagText} */` : ``), void 0, void 0, true, void 0, false);
  } else
    ;
}
function traverseChildren(parent, context) {
  let i = 0;
  const nodeRemoved = () => {
    i--;
  };
  for (; i < parent.children.length; i++) {
    const child = parent.children[i];
    if (isString(child))
      continue;
    context.parent = parent;
    context.childIndex = i;
    context.onNodeRemoved = nodeRemoved;
    traverseNode(child, context);
  }
}
function traverseNode(node, context) {
  context.currentNode = node;
  const { nodeTransforms } = context;
  const exitFns = [];
  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {
    const onExit = nodeTransforms[i2](node, context);
    if (onExit) {
      if (isArray(onExit)) {
        exitFns.push(...onExit);
      } else {
        exitFns.push(onExit);
      }
    }
    if (!context.currentNode) {
      return;
    } else {
      node = context.currentNode;
    }
  }
  switch (node.type) {
    case 3:
      if (!context.ssr) {
        context.helper(CREATE_COMMENT);
      }
      break;
    case 5:
      if (!context.ssr) {
        context.helper(TO_DISPLAY_STRING);
      }
      break;
    case 9:
      for (let i2 = 0; i2 < node.branches.length; i2++) {
        traverseNode(node.branches[i2], context);
      }
      break;
    case 10:
    case 11:
    case 1:
    case 0:
      traverseChildren(node, context);
      break;
  }
  context.currentNode = node;
  let i = exitFns.length;
  while (i--) {
    exitFns[i]();
  }
}
function createStructuralDirectiveTransform(name, fn) {
  const matches = isString(name) ? (n) => n === name : (n) => name.test(n);
  return (node, context) => {
    if (node.type === 1) {
      const { props } = node;
      if (node.tagType === 3 && props.some(isVSlot)) {
        return;
      }
      const exitFns = [];
      for (let i = 0; i < props.length; i++) {
        const prop = props[i];
        if (prop.type === 7 && matches(prop.name)) {
          props.splice(i, 1);
          i--;
          const onExit = fn(node, prop, context);
          if (onExit)
            exitFns.push(onExit);
        }
      }
      return exitFns;
    }
  };
}
function createCodegenContext(ast, { mode = "function", prefixIdentifiers = mode === "module", sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = "vue/server-renderer", ssr = false, isTS = false, inSSR = false }) {
  const context = {
    mode,
    prefixIdentifiers,
    sourceMap,
    filename,
    scopeId,
    optimizeImports,
    runtimeGlobalName,
    runtimeModuleName,
    ssrRuntimeModuleName,
    ssr,
    isTS,
    inSSR,
    source: ast.loc.source,
    code: ``,
    column: 1,
    line: 1,
    offset: 0,
    indentLevel: 0,
    pure: false,
    map: void 0,
    helper(key) {
      return `_${helperNameMap[key]}`;
    },
    push(code, node) {
      context.code += code;
    },
    indent() {
      newline(++context.indentLevel);
    },
    deindent(withoutNewLine = false) {
      if (withoutNewLine) {
        --context.indentLevel;
      } else {
        newline(--context.indentLevel);
      }
    },
    newline() {
      newline(context.indentLevel);
    }
  };
  function newline(n) {
    context.push("\n" + `  `.repeat(n));
  }
  return context;
}
function generate(ast, options = {}) {
  const context = createCodegenContext(ast, options);
  if (options.onContextCreated)
    options.onContextCreated(context);
  const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;
  const hasHelpers = ast.helpers.length > 0;
  const useWithBlock = !prefixIdentifiers && mode !== "module";
  const preambleContext = context;
  {
    genFunctionPreamble(ast, preambleContext);
  }
  const functionName = ssr ? `ssrRender` : `render`;
  const args = ssr ? ["_ctx", "_push", "_parent", "_attrs"] : ["_ctx", "_cache"];
  const signature = args.join(", ");
  {
    push(`function ${functionName}(${signature}) {`);
  }
  indent();
  if (useWithBlock) {
    push(`with (_ctx) {`);
    indent();
    if (hasHelpers) {
      push(`const { ${ast.helpers.map(aliasHelper).join(", ")} } = _Vue`);
      push(`
`);
      newline();
    }
  }
  if (ast.components.length) {
    genAssets(ast.components, "component", context);
    if (ast.directives.length || ast.temps > 0) {
      newline();
    }
  }
  if (ast.directives.length) {
    genAssets(ast.directives, "directive", context);
    if (ast.temps > 0) {
      newline();
    }
  }
  if (ast.filters && ast.filters.length) {
    newline();
    genAssets(ast.filters, "filter", context);
    newline();
  }
  if (ast.temps > 0) {
    push(`let `);
    for (let i = 0; i < ast.temps; i++) {
      push(`${i > 0 ? `, ` : ``}_temp${i}`);
    }
  }
  if (ast.components.length || ast.directives.length || ast.temps) {
    push(`
`);
    newline();
  }
  if (!ssr) {
    push(`return `);
  }
  if (ast.codegenNode) {
    genNode(ast.codegenNode, context);
  } else {
    push(`null`);
  }
  if (useWithBlock) {
    deindent();
    push(`}`);
  }
  deindent();
  push(`}`);
  return {
    ast,
    code: context.code,
    preamble: ``,
    map: context.map ? context.map.toJSON() : void 0
  };
}
function genFunctionPreamble(ast, context) {
  const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;
  const VueBinding = runtimeGlobalName;
  if (ast.helpers.length > 0) {
    {
      push(`const _Vue = ${VueBinding}
`);
      if (ast.hoists.length) {
        const staticHelpers = [
          CREATE_VNODE,
          CREATE_ELEMENT_VNODE,
          CREATE_COMMENT,
          CREATE_TEXT,
          CREATE_STATIC
        ].filter((helper) => ast.helpers.includes(helper)).map(aliasHelper).join(", ");
        push(`const { ${staticHelpers} } = _Vue
`);
      }
    }
  }
  genHoists(ast.hoists, context);
  newline();
  push(`return `);
}
function genAssets(assets, type, { helper, push, newline, isTS }) {
  const resolver = helper(type === "filter" ? RESOLVE_FILTER : type === "component" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);
  for (let i = 0; i < assets.length; i++) {
    let id = assets[i];
    const maybeSelfReference = id.endsWith("__self");
    if (maybeSelfReference) {
      id = id.slice(0, -6);
    }
    push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);
    if (i < assets.length - 1) {
      newline();
    }
  }
}
function genHoists(hoists, context) {
  if (!hoists.length) {
    return;
  }
  context.pure = true;
  const { push, newline, helper, scopeId, mode } = context;
  newline();
  for (let i = 0; i < hoists.length; i++) {
    const exp = hoists[i];
    if (exp) {
      push(`const _hoisted_${i + 1} = ${``}`);
      genNode(exp, context);
      newline();
    }
  }
  context.pure = false;
}
function isText$1(n) {
  return isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;
}
function genNodeListAsArray(nodes, context) {
  const multilines = nodes.length > 3 || nodes.some((n) => isArray(n) || !isText$1(n));
  context.push(`[`);
  multilines && context.indent();
  genNodeList(nodes, context, multilines);
  multilines && context.deindent();
  context.push(`]`);
}
function genNodeList(nodes, context, multilines = false, comma = true) {
  const { push, newline } = context;
  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    if (isString(node)) {
      push(node);
    } else if (isArray(node)) {
      genNodeListAsArray(node, context);
    } else {
      genNode(node, context);
    }
    if (i < nodes.length - 1) {
      if (multilines) {
        comma && push(",");
        newline();
      } else {
        comma && push(", ");
      }
    }
  }
}
function genNode(node, context) {
  if (isString(node)) {
    context.push(node);
    return;
  }
  if (isSymbol(node)) {
    context.push(context.helper(node));
    return;
  }
  switch (node.type) {
    case 1:
    case 9:
    case 11:
      assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. Apply appropriate transforms first.`);
      genNode(node.codegenNode, context);
      break;
    case 2:
      genText(node, context);
      break;
    case 4:
      genExpression(node, context);
      break;
    case 5:
      genInterpolation(node, context);
      break;
    case 12:
      genNode(node.codegenNode, context);
      break;
    case 8:
      genCompoundExpression(node, context);
      break;
    case 3:
      genComment(node, context);
      break;
    case 13:
      genVNodeCall(node, context);
      break;
    case 14:
      genCallExpression(node, context);
      break;
    case 15:
      genObjectExpression(node, context);
      break;
    case 17:
      genArrayExpression(node, context);
      break;
    case 18:
      genFunctionExpression(node, context);
      break;
    case 19:
      genConditionalExpression(node, context);
      break;
    case 20:
      genCacheExpression(node, context);
      break;
    case 21:
      genNodeList(node.body, context, true, false);
      break;
    case 22:
      break;
    case 23:
      break;
    case 24:
      break;
    case 25:
      break;
    case 26:
      break;
    case 10:
      break;
    default:
      if (true) {
        assert(false, `unhandled codegen node type: ${node.type}`);
        const exhaustiveCheck = node;
        return exhaustiveCheck;
      }
  }
}
function genText(node, context) {
  context.push(JSON.stringify(node.content), node);
}
function genExpression(node, context) {
  const { content, isStatic } = node;
  context.push(isStatic ? JSON.stringify(content) : content, node);
}
function genInterpolation(node, context) {
  const { push, helper, pure } = context;
  if (pure)
    push(PURE_ANNOTATION);
  push(`${helper(TO_DISPLAY_STRING)}(`);
  genNode(node.content, context);
  push(`)`);
}
function genCompoundExpression(node, context) {
  for (let i = 0; i < node.children.length; i++) {
    const child = node.children[i];
    if (isString(child)) {
      context.push(child);
    } else {
      genNode(child, context);
    }
  }
}
function genExpressionAsPropertyKey(node, context) {
  const { push } = context;
  if (node.type === 8) {
    push(`[`);
    genCompoundExpression(node, context);
    push(`]`);
  } else if (node.isStatic) {
    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);
    push(text, node);
  } else {
    push(`[${node.content}]`, node);
  }
}
function genComment(node, context) {
  const { push, helper, pure } = context;
  if (pure) {
    push(PURE_ANNOTATION);
  }
  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);
}
function genVNodeCall(node, context) {
  const { push, helper, pure } = context;
  const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent: isComponent2 } = node;
  if (directives) {
    push(helper(WITH_DIRECTIVES) + `(`);
  }
  if (isBlock) {
    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);
  }
  if (pure) {
    push(PURE_ANNOTATION);
  }
  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent2) : getVNodeHelper(context.inSSR, isComponent2);
  push(helper(callHelper) + `(`, node);
  genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);
  push(`)`);
  if (isBlock) {
    push(`)`);
  }
  if (directives) {
    push(`, `);
    genNode(directives, context);
    push(`)`);
  }
}
function genNullableArgs(args) {
  let i = args.length;
  while (i--) {
    if (args[i] != null)
      break;
  }
  return args.slice(0, i + 1).map((arg) => arg || `null`);
}
function genCallExpression(node, context) {
  const { push, helper, pure } = context;
  const callee = isString(node.callee) ? node.callee : helper(node.callee);
  if (pure) {
    push(PURE_ANNOTATION);
  }
  push(callee + `(`, node);
  genNodeList(node.arguments, context);
  push(`)`);
}
function genObjectExpression(node, context) {
  const { push, indent, deindent, newline } = context;
  const { properties } = node;
  if (!properties.length) {
    push(`{}`, node);
    return;
  }
  const multilines = properties.length > 1 || properties.some((p) => p.value.type !== 4);
  push(multilines ? `{` : `{ `);
  multilines && indent();
  for (let i = 0; i < properties.length; i++) {
    const { key, value } = properties[i];
    genExpressionAsPropertyKey(key, context);
    push(`: `);
    genNode(value, context);
    if (i < properties.length - 1) {
      push(`,`);
      newline();
    }
  }
  multilines && deindent();
  push(multilines ? `}` : ` }`);
}
function genArrayExpression(node, context) {
  genNodeListAsArray(node.elements, context);
}
function genFunctionExpression(node, context) {
  const { push, indent, deindent } = context;
  const { params, returns, body, newline, isSlot } = node;
  if (isSlot) {
    push(`_${helperNameMap[WITH_CTX]}(`);
  }
  push(`(`, node);
  if (isArray(params)) {
    genNodeList(params, context);
  } else if (params) {
    genNode(params, context);
  }
  push(`) => `);
  if (newline || body) {
    push(`{`);
    indent();
  }
  if (returns) {
    if (newline) {
      push(`return `);
    }
    if (isArray(returns)) {
      genNodeListAsArray(returns, context);
    } else {
      genNode(returns, context);
    }
  } else if (body) {
    genNode(body, context);
  }
  if (newline || body) {
    deindent();
    push(`}`);
  }
  if (isSlot) {
    if (node.isNonScopedSlot) {
      push(`, undefined, true`);
    }
    push(`)`);
  }
}
function genConditionalExpression(node, context) {
  const { test, consequent, alternate, newline: needNewline } = node;
  const { push, indent, deindent, newline } = context;
  if (test.type === 4) {
    const needsParens = !isSimpleIdentifier(test.content);
    needsParens && push(`(`);
    genExpression(test, context);
    needsParens && push(`)`);
  } else {
    push(`(`);
    genNode(test, context);
    push(`)`);
  }
  needNewline && indent();
  context.indentLevel++;
  needNewline || push(` `);
  push(`? `);
  genNode(consequent, context);
  context.indentLevel--;
  needNewline && newline();
  needNewline || push(` `);
  push(`: `);
  const isNested = alternate.type === 19;
  if (!isNested) {
    context.indentLevel++;
  }
  genNode(alternate, context);
  if (!isNested) {
    context.indentLevel--;
  }
  needNewline && deindent(true);
}
function genCacheExpression(node, context) {
  const { push, helper, indent, deindent, newline } = context;
  push(`_cache[${node.index}] || (`);
  if (node.isVNode) {
    indent();
    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);
    newline();
  }
  push(`_cache[${node.index}] = `);
  genNode(node.value, context);
  if (node.isVNode) {
    push(`,`);
    newline();
    push(`${helper(SET_BLOCK_TRACKING)}(1),`);
    newline();
    push(`_cache[${node.index}]`);
    deindent();
  }
  push(`)`);
}
function walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {
  {
    return;
  }
}
function isReferencedIdentifier(id, parent, parentStack) {
  {
    return false;
  }
}
function isInDestructureAssignment(parent, parentStack) {
  if (parent && (parent.type === "ObjectProperty" || parent.type === "ArrayPattern")) {
    let i = parentStack.length;
    while (i--) {
      const p = parentStack[i];
      if (p.type === "AssignmentExpression") {
        return true;
      } else if (p.type !== "ObjectProperty" && !p.type.endsWith("Pattern")) {
        break;
      }
    }
  }
  return false;
}
function walkFunctionParams(node, onIdent) {
  for (const p of node.params) {
    for (const id of extractIdentifiers(p)) {
      onIdent(id);
    }
  }
}
function walkBlockDeclarations(block, onIdent) {
  for (const stmt of block.body) {
    if (stmt.type === "VariableDeclaration") {
      if (stmt.declare)
        continue;
      for (const decl of stmt.declarations) {
        for (const id of extractIdentifiers(decl.id)) {
          onIdent(id);
        }
      }
    } else if (stmt.type === "FunctionDeclaration" || stmt.type === "ClassDeclaration") {
      if (stmt.declare || !stmt.id)
        continue;
      onIdent(stmt.id);
    }
  }
}
function extractIdentifiers(param, nodes = []) {
  switch (param.type) {
    case "Identifier":
      nodes.push(param);
      break;
    case "MemberExpression":
      let object = param;
      while (object.type === "MemberExpression") {
        object = object.object;
      }
      nodes.push(object);
      break;
    case "ObjectPattern":
      for (const prop of param.properties) {
        if (prop.type === "RestElement") {
          extractIdentifiers(prop.argument, nodes);
        } else {
          extractIdentifiers(prop.value, nodes);
        }
      }
      break;
    case "ArrayPattern":
      param.elements.forEach((element) => {
        if (element)
          extractIdentifiers(element, nodes);
      });
      break;
    case "RestElement":
      extractIdentifiers(param.argument, nodes);
      break;
    case "AssignmentPattern":
      extractIdentifiers(param.left, nodes);
      break;
  }
  return nodes;
}
function validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {
  const exp = node.content;
  if (!exp.trim()) {
    return;
  }
  try {
    new Function(asRawStatements ? ` ${exp} ` : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);
  } catch (e) {
    let message = e.message;
    const keywordMatch = exp.replace(stripStringRE, "").match(prohibitedKeywordRE);
    if (keywordMatch) {
      message = `avoid using JavaScript keyword as property name: "${keywordMatch[0]}"`;
    }
    context.onError(createCompilerError(44, node.loc, void 0, message));
  }
}
function processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {
  {
    if (true) {
      validateBrowserExpression(node, context, asParams, asRawStatements);
    }
    return node;
  }
}
function processIf(node, dir, context, processCodegen) {
  if (dir.name !== "else" && (!dir.exp || !dir.exp.content.trim())) {
    const loc = dir.exp ? dir.exp.loc : node.loc;
    context.onError(createCompilerError(28, dir.loc));
    dir.exp = createSimpleExpression(`true`, false, loc);
  }
  if (dir.exp) {
    validateBrowserExpression(dir.exp, context);
  }
  if (dir.name === "if") {
    const branch = createIfBranch(node, dir);
    const ifNode = {
      type: 9,
      loc: node.loc,
      branches: [branch]
    };
    context.replaceNode(ifNode);
    if (processCodegen) {
      return processCodegen(ifNode, branch, true);
    }
  } else {
    const siblings = context.parent.children;
    const comments = [];
    let i = siblings.indexOf(node);
    while (i-- >= -1) {
      const sibling = siblings[i];
      if (sibling && sibling.type === 3) {
        context.removeNode(sibling);
        comments.unshift(sibling);
        continue;
      }
      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {
        context.removeNode(sibling);
        continue;
      }
      if (sibling && sibling.type === 9) {
        if (dir.name === "else-if" && sibling.branches[sibling.branches.length - 1].condition === void 0) {
          context.onError(createCompilerError(30, node.loc));
        }
        context.removeNode();
        const branch = createIfBranch(node, dir);
        if (comments.length && !(context.parent && context.parent.type === 1 && isBuiltInType(context.parent.tag, "transition"))) {
          branch.children = [...comments, ...branch.children];
        }
        if (true) {
          const key = branch.userKey;
          if (key) {
            sibling.branches.forEach(({ userKey }) => {
              if (isSameKey(userKey, key)) {
                context.onError(createCompilerError(29, branch.userKey.loc));
              }
            });
          }
        }
        sibling.branches.push(branch);
        const onExit = processCodegen && processCodegen(sibling, branch, false);
        traverseNode(branch, context);
        if (onExit)
          onExit();
        context.currentNode = null;
      } else {
        context.onError(createCompilerError(30, node.loc));
      }
      break;
    }
  }
}
function createIfBranch(node, dir) {
  const isTemplateIf = node.tagType === 3;
  return {
    type: 10,
    loc: node.loc,
    condition: dir.name === "else" ? void 0 : dir.exp,
    children: isTemplateIf && !findDir(node, "for") ? node.children : [node],
    userKey: findProp(node, `key`),
    isTemplateIf
  };
}
function createCodegenNodeForBranch(branch, keyIndex, context) {
  if (branch.condition) {
    return createConditionalExpression(
      branch.condition,
      createChildrenCodegenNode(branch, keyIndex, context),
      createCallExpression(context.helper(CREATE_COMMENT), [
        true ? '"v-if"' : '""',
        "true"
      ])
    );
  } else {
    return createChildrenCodegenNode(branch, keyIndex, context);
  }
}
function createChildrenCodegenNode(branch, keyIndex, context) {
  const { helper } = context;
  const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2));
  const { children } = branch;
  const firstChild = children[0];
  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;
  if (needFragmentWrapper) {
    if (children.length === 1 && firstChild.type === 11) {
      const vnodeCall = firstChild.codegenNode;
      injectProp(vnodeCall, keyProperty, context);
      return vnodeCall;
    } else {
      let patchFlag = 64;
      let patchFlagText = PatchFlagNames[64];
      if (!branch.isTemplateIf && children.filter((c) => c.type !== 3).length === 1) {
        patchFlag |= 2048;
        patchFlagText += `, ${PatchFlagNames[2048]}`;
      }
      return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (true ? ` /* ${patchFlagText} */` : ``), void 0, void 0, true, false, false, branch.loc);
    }
  } else {
    const ret = firstChild.codegenNode;
    const vnodeCall = getMemoedVNodeCall(ret);
    if (vnodeCall.type === 13) {
      makeBlock(vnodeCall, context);
    }
    injectProp(vnodeCall, keyProperty, context);
    return ret;
  }
}
function isSameKey(a, b) {
  if (!a || a.type !== b.type) {
    return false;
  }
  if (a.type === 6) {
    if (a.value.content !== b.value.content) {
      return false;
    }
  } else {
    const exp = a.exp;
    const branchExp = b.exp;
    if (exp.type !== branchExp.type) {
      return false;
    }
    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {
      return false;
    }
  }
  return true;
}
function getParentCondition(node) {
  while (true) {
    if (node.type === 19) {
      if (node.alternate.type === 19) {
        node = node.alternate;
      } else {
        return node;
      }
    } else if (node.type === 20) {
      node = node.value;
    }
  }
}
function processFor(node, dir, context, processCodegen) {
  if (!dir.exp) {
    context.onError(createCompilerError(31, dir.loc));
    return;
  }
  const parseResult = parseForExpression(
    dir.exp,
    context
  );
  if (!parseResult) {
    context.onError(createCompilerError(32, dir.loc));
    return;
  }
  const { addIdentifiers, removeIdentifiers, scopes } = context;
  const { source, value, key, index } = parseResult;
  const forNode = {
    type: 11,
    loc: dir.loc,
    source,
    valueAlias: value,
    keyAlias: key,
    objectIndexAlias: index,
    parseResult,
    children: isTemplateNode(node) ? node.children : [node]
  };
  context.replaceNode(forNode);
  scopes.vFor++;
  const onExit = processCodegen && processCodegen(forNode);
  return () => {
    scopes.vFor--;
    if (onExit)
      onExit();
  };
}
function parseForExpression(input, context) {
  const loc = input.loc;
  const exp = input.content;
  const inMatch = exp.match(forAliasRE);
  if (!inMatch)
    return;
  const [, LHS, RHS] = inMatch;
  const result = {
    source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),
    value: void 0,
    key: void 0,
    index: void 0
  };
  if (true) {
    validateBrowserExpression(result.source, context);
  }
  let valueContent = LHS.trim().replace(stripParensRE, "").trim();
  const trimmedOffset = LHS.indexOf(valueContent);
  const iteratorMatch = valueContent.match(forIteratorRE);
  if (iteratorMatch) {
    valueContent = valueContent.replace(forIteratorRE, "").trim();
    const keyContent = iteratorMatch[1].trim();
    let keyOffset;
    if (keyContent) {
      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);
      result.key = createAliasExpression(loc, keyContent, keyOffset);
      if (true) {
        validateBrowserExpression(result.key, context, true);
      }
    }
    if (iteratorMatch[2]) {
      const indexContent = iteratorMatch[2].trim();
      if (indexContent) {
        result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length));
        if (true) {
          validateBrowserExpression(result.index, context, true);
        }
      }
    }
  }
  if (valueContent) {
    result.value = createAliasExpression(loc, valueContent, trimmedOffset);
    if (true) {
      validateBrowserExpression(result.value, context, true);
    }
  }
  return result;
}
function createAliasExpression(range, content, offset) {
  return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));
}
function createForLoopParams({ value, key, index }, memoArgs = []) {
  return createParamsList([value, key, index, ...memoArgs]);
}
function createParamsList(args) {
  let i = args.length;
  while (i--) {
    if (args[i])
      break;
  }
  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));
}
function buildSlots(node, context, buildSlotFn = buildClientSlotFn) {
  context.helper(WITH_CTX);
  const { children, loc } = node;
  const slotsProperties = [];
  const dynamicSlots = [];
  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;
  const onComponentSlot = findDir(node, "slot", true);
  if (onComponentSlot) {
    const { arg, exp } = onComponentSlot;
    if (arg && !isStaticExp(arg)) {
      hasDynamicSlots = true;
    }
    slotsProperties.push(createObjectProperty(arg || createSimpleExpression("default", true), buildSlotFn(exp, children, loc)));
  }
  let hasTemplateSlots = false;
  let hasNamedDefaultSlot = false;
  const implicitDefaultChildren = [];
  const seenSlotNames = /* @__PURE__ */ new Set();
  let conditionalBranchIndex = 0;
  for (let i = 0; i < children.length; i++) {
    const slotElement = children[i];
    let slotDir;
    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, "slot", true))) {
      if (slotElement.type !== 3) {
        implicitDefaultChildren.push(slotElement);
      }
      continue;
    }
    if (onComponentSlot) {
      context.onError(createCompilerError(37, slotDir.loc));
      break;
    }
    hasTemplateSlots = true;
    const { children: slotChildren, loc: slotLoc } = slotElement;
    const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;
    let staticSlotName;
    if (isStaticExp(slotName)) {
      staticSlotName = slotName ? slotName.content : `default`;
    } else {
      hasDynamicSlots = true;
    }
    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);
    let vIf;
    let vElse;
    let vFor;
    if (vIf = findDir(slotElement, "if")) {
      hasDynamicSlots = true;
      dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback));
    } else if (vElse = findDir(slotElement, /^else(-if)?$/, true)) {
      let j = i;
      let prev;
      while (j--) {
        prev = children[j];
        if (prev.type !== 3) {
          break;
        }
      }
      if (prev && isTemplateNode(prev) && findDir(prev, "if")) {
        children.splice(i, 1);
        i--;
        let conditional = dynamicSlots[dynamicSlots.length - 1];
        while (conditional.alternate.type === 19) {
          conditional = conditional.alternate;
        }
        conditional.alternate = vElse.exp ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++), defaultFallback) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);
      } else {
        context.onError(createCompilerError(30, vElse.loc));
      }
    } else if (vFor = findDir(slotElement, "for")) {
      hasDynamicSlots = true;
      const parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);
      if (parseResult) {
        dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [
          parseResult.source,
          createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true)
        ]));
      } else {
        context.onError(createCompilerError(32, vFor.loc));
      }
    } else {
      if (staticSlotName) {
        if (seenSlotNames.has(staticSlotName)) {
          context.onError(createCompilerError(38, dirLoc));
          continue;
        }
        seenSlotNames.add(staticSlotName);
        if (staticSlotName === "default") {
          hasNamedDefaultSlot = true;
        }
      }
      slotsProperties.push(createObjectProperty(slotName, slotFunction));
    }
  }
  if (!onComponentSlot) {
    const buildDefaultSlotProperty = (props, children2) => {
      const fn = buildSlotFn(props, children2, loc);
      if (context.compatConfig) {
        fn.isNonScopedSlot = true;
      }
      return createObjectProperty(`default`, fn);
    };
    if (!hasTemplateSlots) {
      slotsProperties.push(buildDefaultSlotProperty(void 0, children));
    } else if (implicitDefaultChildren.length && implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {
      if (hasNamedDefaultSlot) {
        context.onError(createCompilerError(39, implicitDefaultChildren[0].loc));
      } else {
        slotsProperties.push(buildDefaultSlotProperty(void 0, implicitDefaultChildren));
      }
    }
  }
  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;
  let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(
    `_`,
    createSimpleExpression(slotFlag + (true ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false)
  )), loc);
  if (dynamicSlots.length) {
    slots = createCallExpression(context.helper(CREATE_SLOTS), [
      slots,
      createArrayExpression(dynamicSlots)
    ]);
  }
  return {
    slots,
    hasDynamicSlots
  };
}
function buildDynamicSlot(name, fn, index) {
  const props = [
    createObjectProperty(`name`, name),
    createObjectProperty(`fn`, fn)
  ];
  if (index != null) {
    props.push(createObjectProperty(`key`, createSimpleExpression(String(index), true)));
  }
  return createObjectExpression(props);
}
function hasForwardedSlots(children) {
  for (let i = 0; i < children.length; i++) {
    const child = children[i];
    switch (child.type) {
      case 1:
        if (child.tagType === 2 || hasForwardedSlots(child.children)) {
          return true;
        }
        break;
      case 9:
        if (hasForwardedSlots(child.branches))
          return true;
        break;
      case 10:
      case 11:
        if (hasForwardedSlots(child.children))
          return true;
        break;
    }
  }
  return false;
}
function isNonWhitespaceContent(node) {
  if (node.type !== 2 && node.type !== 12)
    return true;
  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);
}
function resolveComponentType(node, context, ssr = false) {
  let { tag } = node;
  const isExplicitDynamic = isComponentTag(tag);
  const isProp = findProp(node, "is");
  if (isProp) {
    if (isExplicitDynamic || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context)) {
      const exp = isProp.type === 6 ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;
      if (exp) {
        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [
          exp
        ]);
      }
    } else if (isProp.type === 6 && isProp.value.content.startsWith("vue:")) {
      tag = isProp.value.content.slice(4);
    }
  }
  const isDir = !isExplicitDynamic && findDir(node, "is");
  if (isDir && isDir.exp) {
    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [
      isDir.exp
    ]);
  }
  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);
  if (builtIn) {
    if (!ssr)
      context.helper(builtIn);
    return builtIn;
  }
  context.helper(RESOLVE_COMPONENT);
  context.components.add(tag);
  return toValidAssetId(tag, `component`);
}
function buildProps(node, context, props = node.props, isComponent2, isDynamicComponent, ssr = false) {
  const { tag, loc: elementLoc, children } = node;
  let properties = [];
  const mergeArgs = [];
  const runtimeDirectives = [];
  const hasChildren = children.length > 0;
  let shouldUseBlock = false;
  let patchFlag = 0;
  let hasRef = false;
  let hasClassBinding = false;
  let hasStyleBinding = false;
  let hasHydrationEventBinding = false;
  let hasDynamicKeys = false;
  let hasVnodeHook = false;
  const dynamicPropNames = [];
  const analyzePatchFlag = ({ key, value }) => {
    if (isStaticExp(key)) {
      const name = key.content;
      const isEventHandler = isOn(name);
      if (isEventHandler && (!isComponent2 || isDynamicComponent) && name.toLowerCase() !== "onclick" && name !== "onUpdate:modelValue" && !isReservedProp(name)) {
        hasHydrationEventBinding = true;
      }
      if (isEventHandler && isReservedProp(name)) {
        hasVnodeHook = true;
      }
      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {
        return;
      }
      if (name === "ref") {
        hasRef = true;
      } else if (name === "class") {
        hasClassBinding = true;
      } else if (name === "style") {
        hasStyleBinding = true;
      } else if (name !== "key" && !dynamicPropNames.includes(name)) {
        dynamicPropNames.push(name);
      }
      if (isComponent2 && (name === "class" || name === "style") && !dynamicPropNames.includes(name)) {
        dynamicPropNames.push(name);
      }
    } else {
      hasDynamicKeys = true;
    }
  };
  for (let i = 0; i < props.length; i++) {
    const prop = props[i];
    if (prop.type === 6) {
      const { loc, name, value } = prop;
      let isStatic = true;
      if (name === "ref") {
        hasRef = true;
        if (context.scopes.vFor > 0) {
          properties.push(createObjectProperty(createSimpleExpression("ref_for", true), createSimpleExpression("true")));
        }
      }
      if (name === "is" && (isComponentTag(tag) || value && value.content.startsWith("vue:") || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context))) {
        continue;
      }
      properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : "", isStatic, value ? value.loc : loc)));
    } else {
      const { name, arg, exp, loc } = prop;
      const isVBind = name === "bind";
      const isVOn = name === "on";
      if (name === "slot") {
        if (!isComponent2) {
          context.onError(createCompilerError(40, loc));
        }
        continue;
      }
      if (name === "once" || name === "memo") {
        continue;
      }
      if (name === "is" || isVBind && isStaticArgOf(arg, "is") && (isComponentTag(tag) || isCompatEnabled("COMPILER_IS_ON_ELEMENT", context))) {
        continue;
      }
      if (isVOn && ssr) {
        continue;
      }
      if (isVBind && isStaticArgOf(arg, "key") || isVOn && hasChildren && isStaticArgOf(arg, "vue:before-update")) {
        shouldUseBlock = true;
      }
      if (isVBind && isStaticArgOf(arg, "ref") && context.scopes.vFor > 0) {
        properties.push(createObjectProperty(createSimpleExpression("ref_for", true), createSimpleExpression("true")));
      }
      if (!arg && (isVBind || isVOn)) {
        hasDynamicKeys = true;
        if (exp) {
          if (properties.length) {
            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));
            properties = [];
          }
          if (isVBind) {
            {
              if (true) {
                const hasOverridableKeys = mergeArgs.some((arg2) => {
                  if (arg2.type === 15) {
                    return arg2.properties.some(({ key }) => {
                      if (key.type !== 4 || !key.isStatic) {
                        return true;
                      }
                      return key.content !== "class" && key.content !== "style" && !isOn(key.content);
                    });
                  } else {
                    return true;
                  }
                });
                if (hasOverridableKeys) {
                  checkCompatEnabled("COMPILER_V_BIND_OBJECT_ORDER", context, loc);
                }
              }
              if (isCompatEnabled("COMPILER_V_BIND_OBJECT_ORDER", context)) {
                mergeArgs.unshift(exp);
                continue;
              }
            }
            mergeArgs.push(exp);
          } else {
            mergeArgs.push({
              type: 14,
              loc,
              callee: context.helper(TO_HANDLERS),
              arguments: isComponent2 ? [exp] : [exp, `true`]
            });
          }
        } else {
          context.onError(createCompilerError(isVBind ? 34 : 35, loc));
        }
        continue;
      }
      const directiveTransform = context.directiveTransforms[name];
      if (directiveTransform) {
        const { props: props2, needRuntime } = directiveTransform(prop, node, context);
        !ssr && props2.forEach(analyzePatchFlag);
        properties.push(...props2);
        if (needRuntime) {
          runtimeDirectives.push(prop);
          if (isSymbol(needRuntime)) {
            directiveImportMap.set(prop, needRuntime);
          }
        }
      } else if (!isBuiltInDirective(name)) {
        runtimeDirectives.push(prop);
        if (hasChildren) {
          shouldUseBlock = true;
        }
      }
    }
  }
  let propsExpression = void 0;
  if (mergeArgs.length) {
    if (properties.length) {
      mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));
    }
    if (mergeArgs.length > 1) {
      propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);
    } else {
      propsExpression = mergeArgs[0];
    }
  } else if (properties.length) {
    propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);
  }
  if (hasDynamicKeys) {
    patchFlag |= 16;
  } else {
    if (hasClassBinding && !isComponent2) {
      patchFlag |= 2;
    }
    if (hasStyleBinding && !isComponent2) {
      patchFlag |= 4;
    }
    if (dynamicPropNames.length) {
      patchFlag |= 8;
    }
    if (hasHydrationEventBinding) {
      patchFlag |= 32;
    }
  }
  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {
    patchFlag |= 512;
  }
  if (!context.inSSR && propsExpression) {
    switch (propsExpression.type) {
      case 15:
        let classKeyIndex = -1;
        let styleKeyIndex = -1;
        let hasDynamicKey = false;
        for (let i = 0; i < propsExpression.properties.length; i++) {
          const key = propsExpression.properties[i].key;
          if (isStaticExp(key)) {
            if (key.content === "class") {
              classKeyIndex = i;
            } else if (key.content === "style") {
              styleKeyIndex = i;
            }
          } else if (!key.isHandlerKey) {
            hasDynamicKey = true;
          }
        }
        const classProp = propsExpression.properties[classKeyIndex];
        const styleProp = propsExpression.properties[styleKeyIndex];
        if (!hasDynamicKey) {
          if (classProp && !isStaticExp(classProp.value)) {
            classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);
          }
          if (styleProp && (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || styleProp.value.type === 17)) {
            styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);
          }
        } else {
          propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);
        }
        break;
      case 14:
        break;
      default:
        propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [
          createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [
            propsExpression
          ])
        ]);
        break;
    }
  }
  return {
    props: propsExpression,
    directives: runtimeDirectives,
    patchFlag,
    dynamicPropNames,
    shouldUseBlock
  };
}
function dedupeProperties(properties) {
  const knownProps = /* @__PURE__ */ new Map();
  const deduped = [];
  for (let i = 0; i < properties.length; i++) {
    const prop = properties[i];
    if (prop.key.type === 8 || !prop.key.isStatic) {
      deduped.push(prop);
      continue;
    }
    const name = prop.key.content;
    const existing = knownProps.get(name);
    if (existing) {
      if (name === "style" || name === "class" || isOn(name)) {
        mergeAsArray(existing, prop);
      }
    } else {
      knownProps.set(name, prop);
      deduped.push(prop);
    }
  }
  return deduped;
}
function mergeAsArray(existing, incoming) {
  if (existing.value.type === 17) {
    existing.value.elements.push(incoming.value);
  } else {
    existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);
  }
}
function buildDirectiveArgs(dir, context) {
  const dirArgs = [];
  const runtime = directiveImportMap.get(dir);
  if (runtime) {
    dirArgs.push(context.helperString(runtime));
  } else {
    {
      context.helper(RESOLVE_DIRECTIVE);
      context.directives.add(dir.name);
      dirArgs.push(toValidAssetId(dir.name, `directive`));
    }
  }
  const { loc } = dir;
  if (dir.exp)
    dirArgs.push(dir.exp);
  if (dir.arg) {
    if (!dir.exp) {
      dirArgs.push(`void 0`);
    }
    dirArgs.push(dir.arg);
  }
  if (Object.keys(dir.modifiers).length) {
    if (!dir.arg) {
      if (!dir.exp) {
        dirArgs.push(`void 0`);
      }
      dirArgs.push(`void 0`);
    }
    const trueExpression = createSimpleExpression(`true`, false, loc);
    dirArgs.push(createObjectExpression(dir.modifiers.map((modifier) => createObjectProperty(modifier, trueExpression)), loc));
  }
  return createArrayExpression(dirArgs, dir.loc);
}
function stringifyDynamicPropNames(props) {
  let propsNamesString = `[`;
  for (let i = 0, l = props.length; i < l; i++) {
    propsNamesString += JSON.stringify(props[i]);
    if (i < l - 1)
      propsNamesString += ", ";
  }
  return propsNamesString + `]`;
}
function isComponentTag(tag) {
  return tag === "component" || tag === "Component";
}
function processSlotOutlet(node, context) {
  let slotName = `"default"`;
  let slotProps = void 0;
  const nonNameProps = [];
  for (let i = 0; i < node.props.length; i++) {
    const p = node.props[i];
    if (p.type === 6) {
      if (p.value) {
        if (p.name === "name") {
          slotName = JSON.stringify(p.value.content);
        } else {
          p.name = camelize2(p.name);
          nonNameProps.push(p);
        }
      }
    } else {
      if (p.name === "bind" && isStaticArgOf(p.arg, "name")) {
        if (p.exp)
          slotName = p.exp;
      } else {
        if (p.name === "bind" && p.arg && isStaticExp(p.arg)) {
          p.arg.content = camelize2(p.arg.content);
        }
        nonNameProps.push(p);
      }
    }
  }
  if (nonNameProps.length > 0) {
    const { props, directives } = buildProps(node, context, nonNameProps, false, false);
    slotProps = props;
    if (directives.length) {
      context.onError(createCompilerError(36, directives[0].loc));
    }
  }
  return {
    slotName,
    slotProps
  };
}
function createTransformProps(props = []) {
  return { props };
}
function rewriteFilter(node, context) {
  if (node.type === 4) {
    parseFilter(node, context);
  } else {
    for (let i = 0; i < node.children.length; i++) {
      const child = node.children[i];
      if (typeof child !== "object")
        continue;
      if (child.type === 4) {
        parseFilter(child, context);
      } else if (child.type === 8) {
        rewriteFilter(node, context);
      } else if (child.type === 5) {
        rewriteFilter(child.content, context);
      }
    }
  }
}
function parseFilter(node, context) {
  const exp = node.content;
  let inSingle = false;
  let inDouble = false;
  let inTemplateString = false;
  let inRegex = false;
  let curly = 0;
  let square = 0;
  let paren = 0;
  let lastFilterIndex = 0;
  let c, prev, i, expression, filters = [];
  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 39 && prev !== 92)
        inSingle = false;
    } else if (inDouble) {
      if (c === 34 && prev !== 92)
        inDouble = false;
    } else if (inTemplateString) {
      if (c === 96 && prev !== 92)
        inTemplateString = false;
    } else if (inRegex) {
      if (c === 47 && prev !== 92)
        inRegex = false;
    } else if (c === 124 && exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {
      if (expression === void 0) {
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 34:
          inDouble = true;
          break;
        case 39:
          inSingle = true;
          break;
        case 96:
          inTemplateString = true;
          break;
        case 40:
          paren++;
          break;
        case 41:
          paren--;
          break;
        case 91:
          square++;
          break;
        case 93:
          square--;
          break;
        case 123:
          curly++;
          break;
        case 125:
          curly--;
          break;
      }
      if (c === 47) {
        let j = i - 1;
        let p;
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== " ")
            break;
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }
  if (expression === void 0) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }
  function pushFilter() {
    filters.push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }
  if (filters.length) {
    warnDeprecation("COMPILER_FILTER", context, node.loc);
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i], context);
    }
    node.content = expression;
  }
}
function wrapFilter(exp, filter, context) {
  context.helper(RESOLVE_FILTER);
  const i = filter.indexOf("(");
  if (i < 0) {
    context.filters.add(filter);
    return `${toValidAssetId(filter, "filter")}(${exp})`;
  } else {
    const name = filter.slice(0, i);
    const args = filter.slice(i + 1);
    context.filters.add(name);
    return `${toValidAssetId(name, "filter")}(${exp}${args !== ")" ? "," + args : args}`;
  }
}
function getBaseTransformPreset(prefixIdentifiers) {
  return [
    [
      transformOnce,
      transformIf,
      transformMemo,
      transformFor,
      ...[transformFilter],
      ...true ? [transformExpression] : [],
      transformSlotOutlet,
      transformElement,
      trackSlotScopes,
      transformText
    ],
    {
      on: transformOn,
      bind: transformBind,
      model: transformModel
    }
  ];
}
function baseCompile(template, options = {}) {
  const onError = options.onError || defaultOnError;
  const isModuleMode = options.mode === "module";
  {
    if (options.prefixIdentifiers === true) {
      onError(createCompilerError(46));
    } else if (isModuleMode) {
      onError(createCompilerError(47));
    }
  }
  const prefixIdentifiers = false;
  if (options.cacheHandlers) {
    onError(createCompilerError(48));
  }
  if (options.scopeId && !isModuleMode) {
    onError(createCompilerError(49));
  }
  const ast = isString(template) ? baseParse(template, options) : template;
  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();
  transform(ast, extend({}, options, {
    prefixIdentifiers,
    nodeTransforms: [
      ...nodeTransforms,
      ...options.nodeTransforms || []
    ],
    directiveTransforms: extend(
      {},
      directiveTransforms,
      options.directiveTransforms || {}
    )
  }));
  return generate(ast, extend({}, options, {
    prefixIdentifiers
  }));
}
var errorMessages, FRAGMENT, TELEPORT, SUSPENSE, KEEP_ALIVE, BASE_TRANSITION, OPEN_BLOCK, CREATE_BLOCK, CREATE_ELEMENT_BLOCK, CREATE_VNODE, CREATE_ELEMENT_VNODE, CREATE_COMMENT, CREATE_TEXT, CREATE_STATIC, RESOLVE_COMPONENT, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_FILTER, WITH_DIRECTIVES, RENDER_LIST, RENDER_SLOT, CREATE_SLOTS, TO_DISPLAY_STRING, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_STYLE, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS, TO_HANDLERS, CAMELIZE, CAPITALIZE, TO_HANDLER_KEY, SET_BLOCK_TRACKING, PUSH_SCOPE_ID, POP_SCOPE_ID, WITH_CTX, UNREF, IS_REF, WITH_MEMO, IS_MEMO_SAME, helperNameMap, locStub, isStaticExp, isBuiltInType, nonIdentifierRE, isSimpleIdentifier, validFirstIdentCharRE, validIdentCharRE, whitespaceRE, isMemberExpressionBrowser, isMemberExpressionNode, isMemberExpression, propsHelperSet, deprecationData, decodeRE, decodeMap, defaultParserOptions, isSpecialTemplateDirective, allowHoistedHelperSet, PURE_ANNOTATION, aliasHelper, isFunctionType, isStaticProperty, isStaticPropertyKey, prohibitedKeywordRE, stripStringRE, transformExpression, transformIf, transformFor, forAliasRE, forIteratorRE, stripParensRE, defaultFallback, trackSlotScopes, trackVForSlotScopes, buildClientSlotFn, directiveImportMap, transformElement, cacheStringFunction, camelizeRE, camelize2, transformSlotOutlet, fnExpRE, transformOn, transformBind, injectPrefix, transformText, seen, transformOnce, transformModel, validDivisionCharRE, transformFilter, seen$1, transformMemo, noopDirectiveTransform;
var init_compiler_core_esm_bundler = __esm({
  "node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js"() {
    init_shared_esm_bundler();
    init_shared_esm_bundler();
    errorMessages = {
      [0]: "Illegal comment.",
      [1]: "CDATA section is allowed only in XML context.",
      [2]: "Duplicate attribute.",
      [3]: "End tag cannot have attributes.",
      [4]: "Illegal '/' in tags.",
      [5]: "Unexpected EOF in tag.",
      [6]: "Unexpected EOF in CDATA section.",
      [7]: "Unexpected EOF in comment.",
      [8]: "Unexpected EOF in script.",
      [9]: "Unexpected EOF in tag.",
      [10]: "Incorrectly closed comment.",
      [11]: "Incorrectly opened comment.",
      [12]: "Illegal tag name. Use '&lt;' to print '<'.",
      [13]: "Attribute value was expected.",
      [14]: "End tag name was expected.",
      [15]: "Whitespace was expected.",
      [16]: "Unexpected '<!--' in comment.",
      [17]: `Attribute name cannot contain U+0022 ("), U+0027 ('), and U+003C (<).`,
      [18]: "Unquoted attribute value cannot contain U+0022 (\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).",
      [19]: "Attribute name cannot start with '='.",
      [21]: "'<?' is allowed only in XML context.",
      [20]: `Unexpected null character.`,
      [22]: "Illegal '/' in tags.",
      [23]: "Invalid end tag.",
      [24]: "Element is missing end tag.",
      [25]: "Interpolation end sign was not found.",
      [27]: "End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.",
      [26]: "Legal directive name was expected.",
      [28]: `v-if/v-else-if is missing expression.`,
      [29]: `v-if/else branches must use unique keys.`,
      [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,
      [31]: `v-for is missing expression.`,
      [32]: `v-for has invalid expression.`,
      [33]: `<template v-for> key should be placed on the <template> tag.`,
      [34]: `v-bind is missing expression.`,
      [35]: `v-on is missing expression.`,
      [36]: `Unexpected custom directive on <slot> outlet.`,
      [37]: `Mixed v-slot usage on both the component and nested <template>.When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,
      [38]: `Duplicate slot names found. `,
      [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,
      [40]: `v-slot can only be used on components or <template> tags.`,
      [41]: `v-model is missing expression.`,
      [42]: `v-model value must be a valid JavaScript member expression.`,
      [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,
      [44]: `Error parsing JavaScript expression: `,
      [45]: `<KeepAlive> expects exactly one child component.`,
      [46]: `"prefixIdentifiers" option is not supported in this build of compiler.`,
      [47]: `ES module mode is not supported in this build of compiler.`,
      [48]: `"cacheHandlers" option is only supported when the "prefixIdentifiers" option is enabled.`,
      [49]: `"scopeId" option is only supported in module mode.`,
      [50]: ``
    };
    FRAGMENT = Symbol(true ? `Fragment` : ``);
    TELEPORT = Symbol(true ? `Teleport` : ``);
    SUSPENSE = Symbol(true ? `Suspense` : ``);
    KEEP_ALIVE = Symbol(true ? `KeepAlive` : ``);
    BASE_TRANSITION = Symbol(true ? `BaseTransition` : ``);
    OPEN_BLOCK = Symbol(true ? `openBlock` : ``);
    CREATE_BLOCK = Symbol(true ? `createBlock` : ``);
    CREATE_ELEMENT_BLOCK = Symbol(true ? `createElementBlock` : ``);
    CREATE_VNODE = Symbol(true ? `createVNode` : ``);
    CREATE_ELEMENT_VNODE = Symbol(true ? `createElementVNode` : ``);
    CREATE_COMMENT = Symbol(true ? `createCommentVNode` : ``);
    CREATE_TEXT = Symbol(true ? `createTextVNode` : ``);
    CREATE_STATIC = Symbol(true ? `createStaticVNode` : ``);
    RESOLVE_COMPONENT = Symbol(true ? `resolveComponent` : ``);
    RESOLVE_DYNAMIC_COMPONENT = Symbol(true ? `resolveDynamicComponent` : ``);
    RESOLVE_DIRECTIVE = Symbol(true ? `resolveDirective` : ``);
    RESOLVE_FILTER = Symbol(true ? `resolveFilter` : ``);
    WITH_DIRECTIVES = Symbol(true ? `withDirectives` : ``);
    RENDER_LIST = Symbol(true ? `renderList` : ``);
    RENDER_SLOT = Symbol(true ? `renderSlot` : ``);
    CREATE_SLOTS = Symbol(true ? `createSlots` : ``);
    TO_DISPLAY_STRING = Symbol(true ? `toDisplayString` : ``);
    MERGE_PROPS = Symbol(true ? `mergeProps` : ``);
    NORMALIZE_CLASS = Symbol(true ? `normalizeClass` : ``);
    NORMALIZE_STYLE = Symbol(true ? `normalizeStyle` : ``);
    NORMALIZE_PROPS = Symbol(true ? `normalizeProps` : ``);
    GUARD_REACTIVE_PROPS = Symbol(true ? `guardReactiveProps` : ``);
    TO_HANDLERS = Symbol(true ? `toHandlers` : ``);
    CAMELIZE = Symbol(true ? `camelize` : ``);
    CAPITALIZE = Symbol(true ? `capitalize` : ``);
    TO_HANDLER_KEY = Symbol(true ? `toHandlerKey` : ``);
    SET_BLOCK_TRACKING = Symbol(true ? `setBlockTracking` : ``);
    PUSH_SCOPE_ID = Symbol(true ? `pushScopeId` : ``);
    POP_SCOPE_ID = Symbol(true ? `popScopeId` : ``);
    WITH_CTX = Symbol(true ? `withCtx` : ``);
    UNREF = Symbol(true ? `unref` : ``);
    IS_REF = Symbol(true ? `isRef` : ``);
    WITH_MEMO = Symbol(true ? `withMemo` : ``);
    IS_MEMO_SAME = Symbol(true ? `isMemoSame` : ``);
    helperNameMap = {
      [FRAGMENT]: `Fragment`,
      [TELEPORT]: `Teleport`,
      [SUSPENSE]: `Suspense`,
      [KEEP_ALIVE]: `KeepAlive`,
      [BASE_TRANSITION]: `BaseTransition`,
      [OPEN_BLOCK]: `openBlock`,
      [CREATE_BLOCK]: `createBlock`,
      [CREATE_ELEMENT_BLOCK]: `createElementBlock`,
      [CREATE_VNODE]: `createVNode`,
      [CREATE_ELEMENT_VNODE]: `createElementVNode`,
      [CREATE_COMMENT]: `createCommentVNode`,
      [CREATE_TEXT]: `createTextVNode`,
      [CREATE_STATIC]: `createStaticVNode`,
      [RESOLVE_COMPONENT]: `resolveComponent`,
      [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,
      [RESOLVE_DIRECTIVE]: `resolveDirective`,
      [RESOLVE_FILTER]: `resolveFilter`,
      [WITH_DIRECTIVES]: `withDirectives`,
      [RENDER_LIST]: `renderList`,
      [RENDER_SLOT]: `renderSlot`,
      [CREATE_SLOTS]: `createSlots`,
      [TO_DISPLAY_STRING]: `toDisplayString`,
      [MERGE_PROPS]: `mergeProps`,
      [NORMALIZE_CLASS]: `normalizeClass`,
      [NORMALIZE_STYLE]: `normalizeStyle`,
      [NORMALIZE_PROPS]: `normalizeProps`,
      [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,
      [TO_HANDLERS]: `toHandlers`,
      [CAMELIZE]: `camelize`,
      [CAPITALIZE]: `capitalize`,
      [TO_HANDLER_KEY]: `toHandlerKey`,
      [SET_BLOCK_TRACKING]: `setBlockTracking`,
      [PUSH_SCOPE_ID]: `pushScopeId`,
      [POP_SCOPE_ID]: `popScopeId`,
      [WITH_CTX]: `withCtx`,
      [UNREF]: `unref`,
      [IS_REF]: `isRef`,
      [WITH_MEMO]: `withMemo`,
      [IS_MEMO_SAME]: `isMemoSame`
    };
    locStub = {
      source: "",
      start: { line: 1, column: 1, offset: 0 },
      end: { line: 1, column: 1, offset: 0 }
    };
    isStaticExp = (p) => p.type === 4 && p.isStatic;
    isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);
    nonIdentifierRE = /^\d|[^\$\w]/;
    isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);
    validFirstIdentCharRE = /[A-Za-z_$\xA0-\uFFFF]/;
    validIdentCharRE = /[\.\?\w$\xA0-\uFFFF]/;
    whitespaceRE = /\s+[.[]\s*|\s*[.[]\s+/g;
    isMemberExpressionBrowser = (path) => {
      path = path.trim().replace(whitespaceRE, (s) => s.trim());
      let state = 0;
      let stateStack = [];
      let currentOpenBracketCount = 0;
      let currentOpenParensCount = 0;
      let currentStringType = null;
      for (let i = 0; i < path.length; i++) {
        const char = path.charAt(i);
        switch (state) {
          case 0:
            if (char === "[") {
              stateStack.push(state);
              state = 1;
              currentOpenBracketCount++;
            } else if (char === "(") {
              stateStack.push(state);
              state = 2;
              currentOpenParensCount++;
            } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {
              return false;
            }
            break;
          case 1:
            if (char === `'` || char === `"` || char === "`") {
              stateStack.push(state);
              state = 3;
              currentStringType = char;
            } else if (char === `[`) {
              currentOpenBracketCount++;
            } else if (char === `]`) {
              if (!--currentOpenBracketCount) {
                state = stateStack.pop();
              }
            }
            break;
          case 2:
            if (char === `'` || char === `"` || char === "`") {
              stateStack.push(state);
              state = 3;
              currentStringType = char;
            } else if (char === `(`) {
              currentOpenParensCount++;
            } else if (char === `)`) {
              if (i === path.length - 1) {
                return false;
              }
              if (!--currentOpenParensCount) {
                state = stateStack.pop();
              }
            }
            break;
          case 3:
            if (char === currentStringType) {
              state = stateStack.pop();
              currentStringType = null;
            }
            break;
        }
      }
      return !currentOpenBracketCount && !currentOpenParensCount;
    };
    isMemberExpressionNode = NOOP;
    isMemberExpression = isMemberExpressionBrowser;
    propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);
    deprecationData = {
      ["COMPILER_IS_ON_ELEMENT"]: {
        message: `Platform-native elements with "is" prop will no longer be treated as components in Vue 3 unless the "is" value is explicitly prefixed with "vue:".`,
        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`
      },
      ["COMPILER_V_BIND_SYNC"]: {
        message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \`v-bind:${key}.sync\` should be changed to \`v-model:${key}\`.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`
      },
      ["COMPILER_V_BIND_PROP"]: {
        message: `.prop modifier for v-bind has been removed and no longer necessary. Vue 3 will automatically set a binding as DOM property when appropriate.`
      },
      ["COMPILER_V_BIND_OBJECT_ORDER"]: {
        message: `v-bind="obj" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`
      },
      ["COMPILER_V_ON_NATIVE"]: {
        message: `.native modifier for v-on has been removed as is no longer necessary.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`
      },
      ["COMPILER_V_IF_V_FOR_PRECEDENCE"]: {
        message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`
      },
      ["COMPILER_NATIVE_TEMPLATE"]: {
        message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`
      },
      ["COMPILER_INLINE_TEMPLATE"]: {
        message: `"inline-template" has been removed in Vue 3.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`
      },
      ["COMPILER_FILTER"]: {
        message: `filters have been removed in Vue 3. The "|" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,
        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`
      }
    };
    decodeRE = /&(gt|lt|amp|apos|quot);/g;
    decodeMap = {
      gt: ">",
      lt: "<",
      amp: "&",
      apos: "'",
      quot: '"'
    };
    defaultParserOptions = {
      delimiters: [`{{`, `}}`],
      getNamespace: () => 0,
      getTextMode: () => 0,
      isVoidTag: NO,
      isPreTag: NO,
      isCustomElement: NO,
      decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),
      onError: defaultOnError,
      onWarn: defaultOnWarn,
      comments: true
    };
    isSpecialTemplateDirective = makeMap(`if,else,else-if,for,slot`);
    allowHoistedHelperSet = /* @__PURE__ */ new Set([
      NORMALIZE_CLASS,
      NORMALIZE_STYLE,
      NORMALIZE_PROPS,
      GUARD_REACTIVE_PROPS
    ]);
    PURE_ANNOTATION = `/*#__PURE__*/`;
    aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;
    isFunctionType = (node) => {
      return /Function(?:Expression|Declaration)$|Method$/.test(node.type);
    };
    isStaticProperty = (node) => node && (node.type === "ObjectProperty" || node.type === "ObjectMethod") && !node.computed;
    isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;
    prohibitedKeywordRE = new RegExp("\\b" + "do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments,typeof,void".split(",").join("\\b|\\b") + "\\b");
    stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;
    transformExpression = (node, context) => {
      if (node.type === 5) {
        node.content = processExpression(node.content, context);
      } else if (node.type === 1) {
        for (let i = 0; i < node.props.length; i++) {
          const dir = node.props[i];
          if (dir.type === 7 && dir.name !== "for") {
            const exp = dir.exp;
            const arg = dir.arg;
            if (exp && exp.type === 4 && !(dir.name === "on" && arg)) {
              dir.exp = processExpression(
                exp,
                context,
                dir.name === "slot"
              );
            }
            if (arg && arg.type === 4 && !arg.isStatic) {
              dir.arg = processExpression(arg, context);
            }
          }
        }
      }
    };
    transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {
      return processIf(node, dir, context, (ifNode, branch, isRoot) => {
        const siblings = context.parent.children;
        let i = siblings.indexOf(ifNode);
        let key = 0;
        while (i-- >= 0) {
          const sibling = siblings[i];
          if (sibling && sibling.type === 9) {
            key += sibling.branches.length;
          }
        }
        return () => {
          if (isRoot) {
            ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);
          } else {
            const parentCondition = getParentCondition(ifNode.codegenNode);
            parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);
          }
        };
      });
    });
    transformFor = createStructuralDirectiveTransform("for", (node, dir, context) => {
      const { helper, removeHelper } = context;
      return processFor(node, dir, context, (forNode) => {
        const renderExp = createCallExpression(helper(RENDER_LIST), [
          forNode.source
        ]);
        const isTemplate = isTemplateNode(node);
        const memo = findDir(node, "memo");
        const keyProp = findProp(node, `key`);
        const keyExp = keyProp && (keyProp.type === 6 ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);
        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;
        const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;
        const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;
        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), void 0, renderExp, fragmentFlag + (true ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), void 0, void 0, true, !isStableFragment, false, node.loc);
        return () => {
          let childBlock;
          const { children } = forNode;
          if (isTemplate) {
            node.children.some((c) => {
              if (c.type === 1) {
                const key = findProp(c, "key");
                if (key) {
                  context.onError(createCompilerError(33, key.loc));
                  return true;
                }
              }
            });
          }
          const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;
          const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;
          if (slotOutlet) {
            childBlock = slotOutlet.codegenNode;
            if (isTemplate && keyProperty) {
              injectProp(childBlock, keyProperty, context);
            }
          } else if (needFragmentWrapper) {
            childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : void 0, node.children, 64 + (true ? ` /* ${PatchFlagNames[64]} */` : ``), void 0, void 0, true, void 0, false);
          } else {
            childBlock = children[0].codegenNode;
            if (isTemplate && keyProperty) {
              injectProp(childBlock, keyProperty, context);
            }
            if (childBlock.isBlock !== !isStableFragment) {
              if (childBlock.isBlock) {
                removeHelper(OPEN_BLOCK);
                removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));
              } else {
                removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));
              }
            }
            childBlock.isBlock = !isStableFragment;
            if (childBlock.isBlock) {
              helper(OPEN_BLOCK);
              helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));
            } else {
              helper(getVNodeHelper(context.inSSR, childBlock.isComponent));
            }
          }
          if (memo) {
            const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [
              createSimpleExpression(`_cached`)
            ]));
            loop.body = createBlockStatement([
              createCompoundExpression([`const _memo = (`, memo.exp, `)`]),
              createCompoundExpression([
                `if (_cached`,
                ...keyExp ? [` && _cached.key === `, keyExp] : [],
                ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`
              ]),
              createCompoundExpression([`const _item = `, childBlock]),
              createSimpleExpression(`_item.memo = _memo`),
              createSimpleExpression(`return _item`)
            ]);
            renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));
          } else {
            renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true));
          }
        };
      });
    });
    forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/;
    forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
    stripParensRE = /^\(|\)$/g;
    defaultFallback = createSimpleExpression(`undefined`, false);
    trackSlotScopes = (node, context) => {
      if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {
        const vSlot = findDir(node, "slot");
        if (vSlot) {
          vSlot.exp;
          context.scopes.vSlot++;
          return () => {
            context.scopes.vSlot--;
          };
        }
      }
    };
    trackVForSlotScopes = (node, context) => {
      let vFor;
      if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, "for"))) {
        const result = vFor.parseResult = parseForExpression(vFor.exp, context);
        if (result) {
          const { value, key, index } = result;
          const { addIdentifiers, removeIdentifiers } = context;
          value && addIdentifiers(value);
          key && addIdentifiers(key);
          index && addIdentifiers(index);
          return () => {
            value && removeIdentifiers(value);
            key && removeIdentifiers(key);
            index && removeIdentifiers(index);
          };
        }
      }
    };
    buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false, true, children.length ? children[0].loc : loc);
    directiveImportMap = /* @__PURE__ */ new WeakMap();
    transformElement = (node, context) => {
      return function postTransformElement() {
        node = context.currentNode;
        if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {
          return;
        }
        const { tag, props } = node;
        const isComponent2 = node.tagType === 1;
        let vnodeTag = isComponent2 ? resolveComponentType(node, context) : `"${tag}"`;
        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;
        let vnodeProps;
        let vnodeChildren;
        let vnodePatchFlag;
        let patchFlag = 0;
        let vnodeDynamicProps;
        let dynamicPropNames;
        let vnodeDirectives;
        let shouldUseBlock = isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent2 && (tag === "svg" || tag === "foreignObject");
        if (props.length > 0) {
          const propsBuildResult = buildProps(node, context, void 0, isComponent2, isDynamicComponent);
          vnodeProps = propsBuildResult.props;
          patchFlag = propsBuildResult.patchFlag;
          dynamicPropNames = propsBuildResult.dynamicPropNames;
          const directives = propsBuildResult.directives;
          vnodeDirectives = directives && directives.length ? createArrayExpression(directives.map((dir) => buildDirectiveArgs(dir, context))) : void 0;
          if (propsBuildResult.shouldUseBlock) {
            shouldUseBlock = true;
          }
        }
        if (node.children.length > 0) {
          if (vnodeTag === KEEP_ALIVE) {
            shouldUseBlock = true;
            patchFlag |= 1024;
            if (node.children.length > 1) {
              context.onError(createCompilerError(45, {
                start: node.children[0].loc.start,
                end: node.children[node.children.length - 1].loc.end,
                source: ""
              }));
            }
          }
          const shouldBuildAsSlots = isComponent2 && vnodeTag !== TELEPORT && vnodeTag !== KEEP_ALIVE;
          if (shouldBuildAsSlots) {
            const { slots, hasDynamicSlots } = buildSlots(node, context);
            vnodeChildren = slots;
            if (hasDynamicSlots) {
              patchFlag |= 1024;
            }
          } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {
            const child = node.children[0];
            const type = child.type;
            const hasDynamicTextChild = type === 5 || type === 8;
            if (hasDynamicTextChild && getConstantType(child, context) === 0) {
              patchFlag |= 1;
            }
            if (hasDynamicTextChild || type === 2) {
              vnodeChildren = child;
            } else {
              vnodeChildren = node.children;
            }
          } else {
            vnodeChildren = node.children;
          }
        }
        if (patchFlag !== 0) {
          if (true) {
            if (patchFlag < 0) {
              vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;
            } else {
              const flagNames = Object.keys(PatchFlagNames).map(Number).filter((n) => n > 0 && patchFlag & n).map((n) => PatchFlagNames[n]).join(`, `);
              vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;
            }
          } else {
            vnodePatchFlag = String(patchFlag);
          }
          if (dynamicPropNames && dynamicPropNames.length) {
            vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);
          }
        }
        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false, isComponent2, node.loc);
      };
    };
    true ? Object.freeze({}) : {};
    true ? Object.freeze([]) : [];
    cacheStringFunction = (fn) => {
      const cache = /* @__PURE__ */ Object.create(null);
      return (str) => {
        const hit = cache[str];
        return hit || (cache[str] = fn(str));
      };
    };
    camelizeRE = /-(\w)/g;
    camelize2 = cacheStringFunction((str) => {
      return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : "");
    });
    transformSlotOutlet = (node, context) => {
      if (isSlotOutlet(node)) {
        const { children, loc } = node;
        const { slotName, slotProps } = processSlotOutlet(node, context);
        const slotArgs = [
          context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,
          slotName,
          "{}",
          "undefined",
          "true"
        ];
        let expectedLen = 2;
        if (slotProps) {
          slotArgs[2] = slotProps;
          expectedLen = 3;
        }
        if (children.length) {
          slotArgs[3] = createFunctionExpression([], children, false, false, loc);
          expectedLen = 4;
        }
        if (context.scopeId && !context.slotted) {
          expectedLen = 5;
        }
        slotArgs.splice(expectedLen);
        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);
      }
    };
    fnExpRE = /^\s*([\w$_]+|(async\s*)?\([^)]*?\))\s*=>|^\s*(async\s+)?function(?:\s+[\w$]+)?\s*\(/;
    transformOn = (dir, node, context, augmentor) => {
      const { loc, modifiers, arg } = dir;
      if (!dir.exp && !modifiers.length) {
        context.onError(createCompilerError(35, loc));
      }
      let eventName;
      if (arg.type === 4) {
        if (arg.isStatic) {
          let rawName = arg.content;
          if (rawName.startsWith("vue:")) {
            rawName = `vnode-${rawName.slice(4)}`;
          }
          const eventString = node.tagType === 1 || rawName.startsWith("vnode") || !/[A-Z]/.test(rawName) ? toHandlerKey(camelize(rawName)) : `on:${rawName}`;
          eventName = createSimpleExpression(eventString, true, arg.loc);
        } else {
          eventName = createCompoundExpression([
            `${context.helperString(TO_HANDLER_KEY)}(`,
            arg,
            `)`
          ]);
        }
      } else {
        eventName = arg;
        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);
        eventName.children.push(`)`);
      }
      let exp = dir.exp;
      if (exp && !exp.content.trim()) {
        exp = void 0;
      }
      let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;
      if (exp) {
        const isMemberExp = isMemberExpression(exp.content);
        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));
        const hasMultipleStatements = exp.content.includes(`;`);
        if (true) {
          validateBrowserExpression(exp, context, false, hasMultipleStatements);
        }
        if (isInlineStatement || shouldCache && isMemberExp) {
          exp = createCompoundExpression([
            `${isInlineStatement ? `$event` : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,
            exp,
            hasMultipleStatements ? `}` : `)`
          ]);
        }
      }
      let ret = {
        props: [
          createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))
        ]
      };
      if (augmentor) {
        ret = augmentor(ret);
      }
      if (shouldCache) {
        ret.props[0].value = context.cache(ret.props[0].value);
      }
      ret.props.forEach((p) => p.key.isHandlerKey = true);
      return ret;
    };
    transformBind = (dir, _node, context) => {
      const { exp, modifiers, loc } = dir;
      const arg = dir.arg;
      if (arg.type !== 4) {
        arg.children.unshift(`(`);
        arg.children.push(`) || ""`);
      } else if (!arg.isStatic) {
        arg.content = `${arg.content} || ""`;
      }
      if (modifiers.includes("camel")) {
        if (arg.type === 4) {
          if (arg.isStatic) {
            arg.content = camelize(arg.content);
          } else {
            arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;
          }
        } else {
          arg.children.unshift(`${context.helperString(CAMELIZE)}(`);
          arg.children.push(`)`);
        }
      }
      if (!context.inSSR) {
        if (modifiers.includes("prop")) {
          injectPrefix(arg, ".");
        }
        if (modifiers.includes("attr")) {
          injectPrefix(arg, "^");
        }
      }
      if (!exp || exp.type === 4 && !exp.content.trim()) {
        context.onError(createCompilerError(34, loc));
        return {
          props: [createObjectProperty(arg, createSimpleExpression("", true, loc))]
        };
      }
      return {
        props: [createObjectProperty(arg, exp)]
      };
    };
    injectPrefix = (arg, prefix) => {
      if (arg.type === 4) {
        if (arg.isStatic) {
          arg.content = prefix + arg.content;
        } else {
          arg.content = `\`${prefix}\${${arg.content}}\``;
        }
      } else {
        arg.children.unshift(`'${prefix}' + (`);
        arg.children.push(`)`);
      }
    };
    transformText = (node, context) => {
      if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {
        return () => {
          const children = node.children;
          let currentContainer = void 0;
          let hasText = false;
          for (let i = 0; i < children.length; i++) {
            const child = children[i];
            if (isText(child)) {
              hasText = true;
              for (let j = i + 1; j < children.length; j++) {
                const next = children[j];
                if (isText(next)) {
                  if (!currentContainer) {
                    currentContainer = children[i] = createCompoundExpression([child], child.loc);
                  }
                  currentContainer.children.push(` + `, next);
                  children.splice(j, 1);
                  j--;
                } else {
                  currentContainer = void 0;
                  break;
                }
              }
            }
          }
          if (!hasText || children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && !node.props.find((p) => p.type === 7 && !context.directiveTransforms[p.name]) && !(node.tag === "template"))) {
            return;
          }
          for (let i = 0; i < children.length; i++) {
            const child = children[i];
            if (isText(child) || child.type === 8) {
              const callArgs = [];
              if (child.type !== 2 || child.content !== " ") {
                callArgs.push(child);
              }
              if (!context.ssr && getConstantType(child, context) === 0) {
                callArgs.push(1 + (true ? ` /* ${PatchFlagNames[1]} */` : ``));
              }
              children[i] = {
                type: 12,
                content: child,
                loc: child.loc,
                codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)
              };
            }
          }
        };
      }
    };
    seen = /* @__PURE__ */ new WeakSet();
    transformOnce = (node, context) => {
      if (node.type === 1 && findDir(node, "once", true)) {
        if (seen.has(node) || context.inVOnce) {
          return;
        }
        seen.add(node);
        context.inVOnce = true;
        context.helper(SET_BLOCK_TRACKING);
        return () => {
          context.inVOnce = false;
          const cur = context.currentNode;
          if (cur.codegenNode) {
            cur.codegenNode = context.cache(cur.codegenNode, true);
          }
        };
      }
    };
    transformModel = (dir, node, context) => {
      const { exp, arg } = dir;
      if (!exp) {
        context.onError(createCompilerError(41, dir.loc));
        return createTransformProps();
      }
      const rawExp = exp.loc.source;
      const expString = exp.type === 4 ? exp.content : rawExp;
      context.bindingMetadata[rawExp];
      const maybeRef = false;
      if (!expString.trim() || !isMemberExpression(expString) && !maybeRef) {
        context.onError(createCompilerError(42, exp.loc));
        return createTransformProps();
      }
      const propName = arg ? arg : createSimpleExpression("modelValue", true);
      const eventName = arg ? isStaticExp(arg) ? `onUpdate:${arg.content}` : createCompoundExpression(['"onUpdate:" + ', arg]) : `onUpdate:modelValue`;
      let assignmentExp;
      const eventArg = context.isTS ? `($event: any)` : `$event`;
      {
        assignmentExp = createCompoundExpression([
          `${eventArg} => ((`,
          exp,
          `) = $event)`
        ]);
      }
      const props = [
        createObjectProperty(propName, dir.exp),
        createObjectProperty(eventName, assignmentExp)
      ];
      if (dir.modifiers.length && node.tagType === 1) {
        const modifiers = dir.modifiers.map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);
        const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + "Modifiers"']) : `modelModifiers`;
        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2)));
      }
      return createTransformProps(props);
    };
    validDivisionCharRE = /[\w).+\-_$\]]/;
    transformFilter = (node, context) => {
      if (!isCompatEnabled("COMPILER_FILTER", context)) {
        return;
      }
      if (node.type === 5) {
        rewriteFilter(node.content, context);
      }
      if (node.type === 1) {
        node.props.forEach((prop) => {
          if (prop.type === 7 && prop.name !== "for" && prop.exp) {
            rewriteFilter(prop.exp, context);
          }
        });
      }
    };
    seen$1 = /* @__PURE__ */ new WeakSet();
    transformMemo = (node, context) => {
      if (node.type === 1) {
        const dir = findDir(node, "memo");
        if (!dir || seen$1.has(node)) {
          return;
        }
        seen$1.add(node);
        return () => {
          const codegenNode = node.codegenNode || context.currentNode.codegenNode;
          if (codegenNode && codegenNode.type === 13) {
            if (node.tagType !== 1) {
              makeBlock(codegenNode, context);
            }
            node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [
              dir.exp,
              createFunctionExpression(void 0, codegenNode),
              `_cache`,
              String(context.cached++)
            ]);
          }
        };
      }
    };
    noopDirectiveTransform = () => ({ props: [] });
  }
});

// node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js
var compiler_dom_esm_bundler_exports = {};
__export(compiler_dom_esm_bundler_exports, {
  BASE_TRANSITION: () => BASE_TRANSITION,
  CAMELIZE: () => CAMELIZE,
  CAPITALIZE: () => CAPITALIZE,
  CREATE_BLOCK: () => CREATE_BLOCK,
  CREATE_COMMENT: () => CREATE_COMMENT,
  CREATE_ELEMENT_BLOCK: () => CREATE_ELEMENT_BLOCK,
  CREATE_ELEMENT_VNODE: () => CREATE_ELEMENT_VNODE,
  CREATE_SLOTS: () => CREATE_SLOTS,
  CREATE_STATIC: () => CREATE_STATIC,
  CREATE_TEXT: () => CREATE_TEXT,
  CREATE_VNODE: () => CREATE_VNODE,
  DOMDirectiveTransforms: () => DOMDirectiveTransforms,
  DOMNodeTransforms: () => DOMNodeTransforms,
  FRAGMENT: () => FRAGMENT,
  GUARD_REACTIVE_PROPS: () => GUARD_REACTIVE_PROPS,
  IS_MEMO_SAME: () => IS_MEMO_SAME,
  IS_REF: () => IS_REF,
  KEEP_ALIVE: () => KEEP_ALIVE,
  MERGE_PROPS: () => MERGE_PROPS,
  NORMALIZE_CLASS: () => NORMALIZE_CLASS,
  NORMALIZE_PROPS: () => NORMALIZE_PROPS,
  NORMALIZE_STYLE: () => NORMALIZE_STYLE,
  OPEN_BLOCK: () => OPEN_BLOCK,
  POP_SCOPE_ID: () => POP_SCOPE_ID,
  PUSH_SCOPE_ID: () => PUSH_SCOPE_ID,
  RENDER_LIST: () => RENDER_LIST,
  RENDER_SLOT: () => RENDER_SLOT,
  RESOLVE_COMPONENT: () => RESOLVE_COMPONENT,
  RESOLVE_DIRECTIVE: () => RESOLVE_DIRECTIVE,
  RESOLVE_DYNAMIC_COMPONENT: () => RESOLVE_DYNAMIC_COMPONENT,
  RESOLVE_FILTER: () => RESOLVE_FILTER,
  SET_BLOCK_TRACKING: () => SET_BLOCK_TRACKING,
  SUSPENSE: () => SUSPENSE,
  TELEPORT: () => TELEPORT,
  TO_DISPLAY_STRING: () => TO_DISPLAY_STRING,
  TO_HANDLERS: () => TO_HANDLERS,
  TO_HANDLER_KEY: () => TO_HANDLER_KEY,
  TRANSITION: () => TRANSITION,
  TRANSITION_GROUP: () => TRANSITION_GROUP,
  UNREF: () => UNREF,
  V_MODEL_CHECKBOX: () => V_MODEL_CHECKBOX,
  V_MODEL_DYNAMIC: () => V_MODEL_DYNAMIC,
  V_MODEL_RADIO: () => V_MODEL_RADIO,
  V_MODEL_SELECT: () => V_MODEL_SELECT,
  V_MODEL_TEXT: () => V_MODEL_TEXT,
  V_ON_WITH_KEYS: () => V_ON_WITH_KEYS,
  V_ON_WITH_MODIFIERS: () => V_ON_WITH_MODIFIERS,
  V_SHOW: () => V_SHOW,
  WITH_CTX: () => WITH_CTX,
  WITH_DIRECTIVES: () => WITH_DIRECTIVES,
  WITH_MEMO: () => WITH_MEMO,
  advancePositionWithClone: () => advancePositionWithClone,
  advancePositionWithMutation: () => advancePositionWithMutation,
  assert: () => assert,
  baseCompile: () => baseCompile,
  baseParse: () => baseParse,
  buildDirectiveArgs: () => buildDirectiveArgs,
  buildProps: () => buildProps,
  buildSlots: () => buildSlots,
  checkCompatEnabled: () => checkCompatEnabled,
  compile: () => compile,
  createArrayExpression: () => createArrayExpression,
  createAssignmentExpression: () => createAssignmentExpression,
  createBlockStatement: () => createBlockStatement,
  createCacheExpression: () => createCacheExpression,
  createCallExpression: () => createCallExpression,
  createCompilerError: () => createCompilerError,
  createCompoundExpression: () => createCompoundExpression,
  createConditionalExpression: () => createConditionalExpression,
  createDOMCompilerError: () => createDOMCompilerError,
  createForLoopParams: () => createForLoopParams,
  createFunctionExpression: () => createFunctionExpression,
  createIfStatement: () => createIfStatement,
  createInterpolation: () => createInterpolation,
  createObjectExpression: () => createObjectExpression,
  createObjectProperty: () => createObjectProperty,
  createReturnStatement: () => createReturnStatement,
  createRoot: () => createRoot,
  createSequenceExpression: () => createSequenceExpression,
  createSimpleExpression: () => createSimpleExpression,
  createStructuralDirectiveTransform: () => createStructuralDirectiveTransform,
  createTemplateLiteral: () => createTemplateLiteral,
  createTransformContext: () => createTransformContext,
  createVNodeCall: () => createVNodeCall,
  extractIdentifiers: () => extractIdentifiers,
  findDir: () => findDir,
  findProp: () => findProp,
  generate: () => generate,
  generateCodeFrame: () => generateCodeFrame,
  getBaseTransformPreset: () => getBaseTransformPreset,
  getConstantType: () => getConstantType,
  getInnerRange: () => getInnerRange,
  getMemoedVNodeCall: () => getMemoedVNodeCall,
  getVNodeBlockHelper: () => getVNodeBlockHelper,
  getVNodeHelper: () => getVNodeHelper,
  hasDynamicKeyVBind: () => hasDynamicKeyVBind,
  hasScopeRef: () => hasScopeRef,
  helperNameMap: () => helperNameMap,
  injectProp: () => injectProp,
  isBuiltInType: () => isBuiltInType,
  isCoreComponent: () => isCoreComponent,
  isFunctionType: () => isFunctionType,
  isInDestructureAssignment: () => isInDestructureAssignment,
  isMemberExpression: () => isMemberExpression,
  isMemberExpressionBrowser: () => isMemberExpressionBrowser,
  isMemberExpressionNode: () => isMemberExpressionNode,
  isReferencedIdentifier: () => isReferencedIdentifier,
  isSimpleIdentifier: () => isSimpleIdentifier,
  isSlotOutlet: () => isSlotOutlet,
  isStaticArgOf: () => isStaticArgOf,
  isStaticExp: () => isStaticExp,
  isStaticProperty: () => isStaticProperty,
  isStaticPropertyKey: () => isStaticPropertyKey,
  isTemplateNode: () => isTemplateNode,
  isText: () => isText,
  isVSlot: () => isVSlot,
  locStub: () => locStub,
  makeBlock: () => makeBlock,
  noopDirectiveTransform: () => noopDirectiveTransform,
  parse: () => parse,
  parserOptions: () => parserOptions,
  processExpression: () => processExpression,
  processFor: () => processFor,
  processIf: () => processIf,
  processSlotOutlet: () => processSlotOutlet,
  registerRuntimeHelpers: () => registerRuntimeHelpers,
  resolveComponentType: () => resolveComponentType,
  toValidAssetId: () => toValidAssetId,
  trackSlotScopes: () => trackSlotScopes,
  trackVForSlotScopes: () => trackVForSlotScopes,
  transform: () => transform,
  transformBind: () => transformBind,
  transformElement: () => transformElement,
  transformExpression: () => transformExpression,
  transformModel: () => transformModel,
  transformOn: () => transformOn,
  transformStyle: () => transformStyle,
  traverseNode: () => traverseNode,
  walkBlockDeclarations: () => walkBlockDeclarations,
  walkFunctionParams: () => walkFunctionParams,
  walkIdentifiers: () => walkIdentifiers,
  warnDeprecation: () => warnDeprecation
});
function decodeHtmlBrowser(raw, asAttr = false) {
  if (!decoder) {
    decoder = document.createElement("div");
  }
  if (asAttr) {
    decoder.innerHTML = `<div foo="${raw.replace(/"/g, "&quot;")}">`;
    return decoder.children[0].getAttribute("foo");
  } else {
    decoder.innerHTML = raw;
    return decoder.textContent;
  }
}
function createDOMCompilerError(code, loc) {
  return createCompilerError(code, loc, true ? DOMErrorMessages : void 0);
}
function hasMultipleChildren(node) {
  const children = node.children = node.children.filter((c) => c.type !== 3 && !(c.type === 2 && !c.content.trim()));
  const child = children[0];
  return children.length !== 1 || child.type === 11 || child.type === 9 && child.branches.some(hasMultipleChildren);
}
function compile(template, options = {}) {
  return baseCompile(template, extend({}, parserOptions, options, {
    nodeTransforms: [
      ignoreSideEffectTags,
      ...DOMNodeTransforms,
      ...options.nodeTransforms || []
    ],
    directiveTransforms: extend({}, DOMDirectiveTransforms, options.directiveTransforms || {}),
    transformHoist: null
  }));
}
function parse(template, options = {}) {
  return baseParse(template, extend({}, parserOptions, options));
}
var V_MODEL_RADIO, V_MODEL_CHECKBOX, V_MODEL_TEXT, V_MODEL_SELECT, V_MODEL_DYNAMIC, V_ON_WITH_MODIFIERS, V_ON_WITH_KEYS, V_SHOW, TRANSITION, TRANSITION_GROUP, decoder, isRawTextContainer, parserOptions, transformStyle, parseInlineCSS, DOMErrorMessages, transformVHtml, transformVText, transformModel2, isEventOptionModifier, isNonKeyModifier, maybeKeyModifier, isKeyboardEvent, resolveModifiers, transformClick, transformOn2, transformShow, transformTransition, ignoreSideEffectTags, DOMNodeTransforms, DOMDirectiveTransforms;
var init_compiler_dom_esm_bundler = __esm({
  "node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js"() {
    init_compiler_core_esm_bundler();
    init_compiler_core_esm_bundler();
    init_shared_esm_bundler();
    V_MODEL_RADIO = Symbol(true ? `vModelRadio` : ``);
    V_MODEL_CHECKBOX = Symbol(true ? `vModelCheckbox` : ``);
    V_MODEL_TEXT = Symbol(true ? `vModelText` : ``);
    V_MODEL_SELECT = Symbol(true ? `vModelSelect` : ``);
    V_MODEL_DYNAMIC = Symbol(true ? `vModelDynamic` : ``);
    V_ON_WITH_MODIFIERS = Symbol(true ? `vOnModifiersGuard` : ``);
    V_ON_WITH_KEYS = Symbol(true ? `vOnKeysGuard` : ``);
    V_SHOW = Symbol(true ? `vShow` : ``);
    TRANSITION = Symbol(true ? `Transition` : ``);
    TRANSITION_GROUP = Symbol(true ? `TransitionGroup` : ``);
    registerRuntimeHelpers({
      [V_MODEL_RADIO]: `vModelRadio`,
      [V_MODEL_CHECKBOX]: `vModelCheckbox`,
      [V_MODEL_TEXT]: `vModelText`,
      [V_MODEL_SELECT]: `vModelSelect`,
      [V_MODEL_DYNAMIC]: `vModelDynamic`,
      [V_ON_WITH_MODIFIERS]: `withModifiers`,
      [V_ON_WITH_KEYS]: `withKeys`,
      [V_SHOW]: `vShow`,
      [TRANSITION]: `Transition`,
      [TRANSITION_GROUP]: `TransitionGroup`
    });
    isRawTextContainer = makeMap("style,iframe,script,noscript", true);
    parserOptions = {
      isVoidTag,
      isNativeTag: (tag) => isHTMLTag(tag) || isSVGTag(tag),
      isPreTag: (tag) => tag === "pre",
      decodeEntities: decodeHtmlBrowser,
      isBuiltInComponent: (tag) => {
        if (isBuiltInType(tag, `Transition`)) {
          return TRANSITION;
        } else if (isBuiltInType(tag, `TransitionGroup`)) {
          return TRANSITION_GROUP;
        }
      },
      getNamespace(tag, parent) {
        let ns = parent ? parent.ns : 0;
        if (parent && ns === 2) {
          if (parent.tag === "annotation-xml") {
            if (tag === "svg") {
              return 1;
            }
            if (parent.props.some((a) => a.type === 6 && a.name === "encoding" && a.value != null && (a.value.content === "text/html" || a.value.content === "application/xhtml+xml"))) {
              ns = 0;
            }
          } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== "mglyph" && tag !== "malignmark") {
            ns = 0;
          }
        } else if (parent && ns === 1) {
          if (parent.tag === "foreignObject" || parent.tag === "desc" || parent.tag === "title") {
            ns = 0;
          }
        }
        if (ns === 0) {
          if (tag === "svg") {
            return 1;
          }
          if (tag === "math") {
            return 2;
          }
        }
        return ns;
      },
      getTextMode({ tag, ns }) {
        if (ns === 0) {
          if (tag === "textarea" || tag === "title") {
            return 1;
          }
          if (isRawTextContainer(tag)) {
            return 2;
          }
        }
        return 0;
      }
    };
    transformStyle = (node) => {
      if (node.type === 1) {
        node.props.forEach((p, i) => {
          if (p.type === 6 && p.name === "style" && p.value) {
            node.props[i] = {
              type: 7,
              name: `bind`,
              arg: createSimpleExpression(`style`, true, p.loc),
              exp: parseInlineCSS(p.value.content, p.loc),
              modifiers: [],
              loc: p.loc
            };
          }
        });
      }
    };
    parseInlineCSS = (cssText, loc) => {
      const normalized = parseStringStyle(cssText);
      return createSimpleExpression(JSON.stringify(normalized), false, loc, 3);
    };
    DOMErrorMessages = {
      [50]: `v-html is missing expression.`,
      [51]: `v-html will override element children.`,
      [52]: `v-text is missing expression.`,
      [53]: `v-text will override element children.`,
      [54]: `v-model can only be used on <input>, <textarea> and <select> elements.`,
      [55]: `v-model argument is not supported on plain elements.`,
      [56]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,
      [57]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,
      [58]: `v-show is missing expression.`,
      [59]: `<Transition> expects exactly one child element or component.`,
      [60]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`
    };
    transformVHtml = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(50, loc));
      }
      if (node.children.length) {
        context.onError(createDOMCompilerError(51, loc));
        node.children.length = 0;
      }
      return {
        props: [
          createObjectProperty(createSimpleExpression(`innerHTML`, true, loc), exp || createSimpleExpression("", true))
        ]
      };
    };
    transformVText = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(52, loc));
      }
      if (node.children.length) {
        context.onError(createDOMCompilerError(53, loc));
        node.children.length = 0;
      }
      return {
        props: [
          createObjectProperty(createSimpleExpression(`textContent`, true), exp ? getConstantType(exp, context) > 0 ? exp : createCallExpression(context.helperString(TO_DISPLAY_STRING), [exp], loc) : createSimpleExpression("", true))
        ]
      };
    };
    transformModel2 = (dir, node, context) => {
      const baseResult = transformModel(dir, node, context);
      if (!baseResult.props.length || node.tagType === 1) {
        return baseResult;
      }
      if (dir.arg) {
        context.onError(createDOMCompilerError(55, dir.arg.loc));
      }
      function checkDuplicatedValue() {
        const value = findProp(node, "value");
        if (value) {
          context.onError(createDOMCompilerError(57, value.loc));
        }
      }
      const { tag } = node;
      const isCustomElement = context.isCustomElement(tag);
      if (tag === "input" || tag === "textarea" || tag === "select" || isCustomElement) {
        let directiveToUse = V_MODEL_TEXT;
        let isInvalidType = false;
        if (tag === "input" || isCustomElement) {
          const type = findProp(node, `type`);
          if (type) {
            if (type.type === 7) {
              directiveToUse = V_MODEL_DYNAMIC;
            } else if (type.value) {
              switch (type.value.content) {
                case "radio":
                  directiveToUse = V_MODEL_RADIO;
                  break;
                case "checkbox":
                  directiveToUse = V_MODEL_CHECKBOX;
                  break;
                case "file":
                  isInvalidType = true;
                  context.onError(createDOMCompilerError(56, dir.loc));
                  break;
                default:
                  checkDuplicatedValue();
                  break;
              }
            }
          } else if (hasDynamicKeyVBind(node)) {
            directiveToUse = V_MODEL_DYNAMIC;
          } else {
            checkDuplicatedValue();
          }
        } else if (tag === "select") {
          directiveToUse = V_MODEL_SELECT;
        } else {
          checkDuplicatedValue();
        }
        if (!isInvalidType) {
          baseResult.needRuntime = context.helper(directiveToUse);
        }
      } else {
        context.onError(createDOMCompilerError(54, dir.loc));
      }
      baseResult.props = baseResult.props.filter((p) => !(p.key.type === 4 && p.key.content === "modelValue"));
      return baseResult;
    };
    isEventOptionModifier = makeMap(`passive,once,capture`);
    isNonKeyModifier = makeMap(
      `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`
    );
    maybeKeyModifier = makeMap("left,right");
    isKeyboardEvent = makeMap(`onkeyup,onkeydown,onkeypress`, true);
    resolveModifiers = (key, modifiers, context, loc) => {
      const keyModifiers = [];
      const nonKeyModifiers = [];
      const eventOptionModifiers = [];
      for (let i = 0; i < modifiers.length; i++) {
        const modifier = modifiers[i];
        if (modifier === "native" && checkCompatEnabled("COMPILER_V_ON_NATIVE", context, loc)) {
          eventOptionModifiers.push(modifier);
        } else if (isEventOptionModifier(modifier)) {
          eventOptionModifiers.push(modifier);
        } else {
          if (maybeKeyModifier(modifier)) {
            if (isStaticExp(key)) {
              if (isKeyboardEvent(key.content)) {
                keyModifiers.push(modifier);
              } else {
                nonKeyModifiers.push(modifier);
              }
            } else {
              keyModifiers.push(modifier);
              nonKeyModifiers.push(modifier);
            }
          } else {
            if (isNonKeyModifier(modifier)) {
              nonKeyModifiers.push(modifier);
            } else {
              keyModifiers.push(modifier);
            }
          }
        }
      }
      return {
        keyModifiers,
        nonKeyModifiers,
        eventOptionModifiers
      };
    };
    transformClick = (key, event) => {
      const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === "onclick";
      return isStaticClick ? createSimpleExpression(event, true) : key.type !== 4 ? createCompoundExpression([
        `(`,
        key,
        `) === "onClick" ? "${event}" : (`,
        key,
        `)`
      ]) : key;
    };
    transformOn2 = (dir, node, context) => {
      return transformOn(dir, node, context, (baseResult) => {
        const { modifiers } = dir;
        if (!modifiers.length)
          return baseResult;
        let { key, value: handlerExp } = baseResult.props[0];
        const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);
        if (nonKeyModifiers.includes("right")) {
          key = transformClick(key, `onContextmenu`);
        }
        if (nonKeyModifiers.includes("middle")) {
          key = transformClick(key, `onMouseup`);
        }
        if (nonKeyModifiers.length) {
          handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [
            handlerExp,
            JSON.stringify(nonKeyModifiers)
          ]);
        }
        if (keyModifiers.length && (!isStaticExp(key) || isKeyboardEvent(key.content))) {
          handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [
            handlerExp,
            JSON.stringify(keyModifiers)
          ]);
        }
        if (eventOptionModifiers.length) {
          const modifierPostfix = eventOptionModifiers.map(capitalize).join("");
          key = isStaticExp(key) ? createSimpleExpression(`${key.content}${modifierPostfix}`, true) : createCompoundExpression([`(`, key, `) + "${modifierPostfix}"`]);
        }
        return {
          props: [createObjectProperty(key, handlerExp)]
        };
      });
    };
    transformShow = (dir, node, context) => {
      const { exp, loc } = dir;
      if (!exp) {
        context.onError(createDOMCompilerError(58, loc));
      }
      return {
        props: [],
        needRuntime: context.helper(V_SHOW)
      };
    };
    transformTransition = (node, context) => {
      if (node.type === 1 && node.tagType === 1) {
        const component = context.isBuiltInComponent(node.tag);
        if (component === TRANSITION) {
          return () => {
            if (!node.children.length) {
              return;
            }
            if (hasMultipleChildren(node)) {
              context.onError(createDOMCompilerError(59, {
                start: node.children[0].loc.start,
                end: node.children[node.children.length - 1].loc.end,
                source: ""
              }));
            }
            const child = node.children[0];
            if (child.type === 1) {
              for (const p of child.props) {
                if (p.type === 7 && p.name === "show") {
                  node.props.push({
                    type: 6,
                    name: "persisted",
                    value: void 0,
                    loc: node.loc
                  });
                }
              }
            }
          };
        }
      }
    };
    ignoreSideEffectTags = (node, context) => {
      if (node.type === 1 && node.tagType === 0 && (node.tag === "script" || node.tag === "style")) {
        context.onError(createDOMCompilerError(60, node.loc));
        context.removeNode();
      }
    };
    DOMNodeTransforms = [
      transformStyle,
      ...true ? [transformTransition] : []
    ];
    DOMDirectiveTransforms = {
      cloak: noopDirectiveTransform,
      html: transformVHtml,
      text: transformVText,
      model: transformModel2,
      on: transformOn2,
      show: transformShow
    };
  }
});

// node_modules/vue/dist/vue.cjs.js
var require_vue_cjs = __commonJS({
  "node_modules/vue/dist/vue.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var compilerDom = (init_compiler_dom_esm_bundler(), __toCommonJS(compiler_dom_esm_bundler_exports));
    var runtimeDom = (init_runtime_dom_esm_bundler(), __toCommonJS(runtime_dom_esm_bundler_exports));
    var shared = (init_shared_esm_bundler(), __toCommonJS(shared_esm_bundler_exports));
    function _interopNamespace(e) {
      if (e && e.__esModule)
        return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          n[k] = e[k];
        });
      }
      n["default"] = e;
      return Object.freeze(n);
    }
    var runtimeDom__namespace = _interopNamespace(runtimeDom);
    var compileCache = /* @__PURE__ */ Object.create(null);
    function compileToFunction(template, options) {
      if (!shared.isString(template)) {
        if (template.nodeType) {
          template = template.innerHTML;
        } else {
          runtimeDom.warn(`invalid template option: `, template);
          return shared.NOOP;
        }
      }
      const key = template;
      const cached = compileCache[key];
      if (cached) {
        return cached;
      }
      if (template[0] === "#") {
        const el = document.querySelector(template);
        if (!el) {
          runtimeDom.warn(`Template element not found or is empty: ${template}`);
        }
        template = el ? el.innerHTML : ``;
      }
      const opts = shared.extend({
        hoistStatic: true,
        onError,
        onWarn: (e) => onError(e, true)
      }, options);
      if (!opts.isCustomElement && typeof customElements !== "undefined") {
        opts.isCustomElement = (tag) => !!customElements.get(tag);
      }
      const { code } = compilerDom.compile(template, opts);
      function onError(err, asWarning = false) {
        const message = asWarning ? err.message : `Template compilation error: ${err.message}`;
        const codeFrame = err.loc && shared.generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);
        runtimeDom.warn(codeFrame ? `${message}
${codeFrame}` : message);
      }
      const render = new Function("Vue", code)(runtimeDom__namespace);
      render._rc = true;
      return compileCache[key] = render;
    }
    runtimeDom.registerRuntimeCompiler(compileToFunction);
    Object.keys(runtimeDom).forEach(function(k) {
      if (k !== "default")
        exports[k] = runtimeDom[k];
    });
    exports.compile = compileToFunction;
  }
});

// node_modules/vue/index.js
var require_vue = __commonJS({
  "node_modules/vue/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_vue_cjs();
    }
  }
});

// node_modules/vue3-tel-input/dist/vue3-tel-input.umd.min.js
var require_vue3_tel_input_umd_min = __commonJS({
  "node_modules/vue3-tel-input/dist/vue3-tel-input.umd.min.js"(exports, module) {
    (function(t, e) {
      "object" === typeof exports && "object" === typeof module ? module.exports = e(require_vue()) : "function" === typeof define && define.amd ? define([], e) : "object" === typeof exports ? exports["vue3-tel-input"] = e(require_vue()) : t["vue3-tel-input"] = e(t["Vue"]);
    })("undefined" !== typeof self ? self : exports, function(t) {
      return function(t2) {
        var e = {};
        function n(r) {
          if (e[r])
            return e[r].exports;
          var d = e[r] = { i: r, l: false, exports: {} };
          return t2[r].call(d.exports, d, d.exports, n), d.l = true, d.exports;
        }
        return n.m = t2, n.c = e, n.d = function(t3, e2, r) {
          n.o(t3, e2) || Object.defineProperty(t3, e2, { enumerable: true, get: r });
        }, n.r = function(t3) {
          "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(t3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t3, "__esModule", { value: true });
        }, n.t = function(t3, e2) {
          if (1 & e2 && (t3 = n(t3)), 8 & e2)
            return t3;
          if (4 & e2 && "object" === typeof t3 && t3 && t3.__esModule)
            return t3;
          var r = /* @__PURE__ */ Object.create(null);
          if (n.r(r), Object.defineProperty(r, "default", { enumerable: true, value: t3 }), 2 & e2 && "string" != typeof t3)
            for (var d in t3)
              n.d(r, d, function(e3) {
                return t3[e3];
              }.bind(null, d));
          return r;
        }, n.n = function(t3) {
          var e2 = t3 && t3.__esModule ? function() {
            return t3["default"];
          } : function() {
            return t3;
          };
          return n.d(e2, "a", e2), e2;
        }, n.o = function(t3, e2) {
          return Object.prototype.hasOwnProperty.call(t3, e2);
        }, n.p = "", n(n.s = "fb15");
      }({ "00ee": function(t2, e, n) {
        var r = n("b622"), d = r("toStringTag"), i = {};
        i[d] = "z", t2.exports = "[object z]" === String(i);
      }, "025e": function(t2, e, n) {
        "use strict";
        n.d(e, "c", function() {
          return f;
        }), n.d(e, "d", function() {
          return l;
        }), n.d(e, "b", function() {
          return h;
        });
        n("99af"), n("caad"), n("13d5"), n("b0c0"), n("a9e3"), n("cca6"), n("d3b7"), n("e6cf"), n("4d63"), n("ac1f"), n("25f0"), n("2532"), n("1276");
        var r = n("5530"), d = n("ade3");
        function i(t3) {
          if (Array.isArray(t3))
            return t3;
        }
        n("a4d3"), n("e01a"), n("d28b"), n("e260"), n("3ca3"), n("ddb0");
        function o(t3, e2) {
          if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t3)) {
            var n2 = [], r2 = true, d2 = false, i2 = void 0;
            try {
              for (var o2, a2 = t3[Symbol.iterator](); !(r2 = (o2 = a2.next()).done); r2 = true)
                if (n2.push(o2.value), e2 && n2.length === e2)
                  break;
            } catch (u2) {
              d2 = true, i2 = u2;
            } finally {
              try {
                r2 || null == a2["return"] || a2["return"]();
              } finally {
                if (d2)
                  throw i2;
              }
            }
            return n2;
          }
        }
        var a = n("06c5");
        function u() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function c(t3, e2) {
          return i(t3) || o(t3, e2) || Object(a["a"])(t3, e2) || u();
        }
        n("d81d");
        var $ = [["Afghanistan (\u202B\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646\u202C\u200E)", "af", "93"], ["Albania (Shqip\xEBri)", "al", "355"], ["Algeria (\u202B\u0627\u0644\u062C\u0632\u0627\u0626\u0631\u202C\u200E)", "dz", "213"], ["American Samoa", "as", "1684"], ["Andorra", "ad", "376"], ["Angola", "ao", "244"], ["Anguilla", "ai", "1264"], ["Antigua and Barbuda", "ag", "1268"], ["Argentina", "ar", "54"], ["Armenia (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)", "am", "374"], ["Aruba", "aw", "297"], ["Australia", "au", "61", 0], ["Austria (\xD6sterreich)", "at", "43"], ["Azerbaijan (Az\u0259rbaycan)", "az", "994"], ["Bahamas", "bs", "1242"], ["Bahrain (\u202B\u0627\u0644\u0628\u062D\u0631\u064A\u0646\u202C\u200E)", "bh", "973"], ["Bangladesh (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)", "bd", "880"], ["Barbados", "bb", "1246"], ["Belarus (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)", "by", "375"], ["Belgium (Belgi\xEB)", "be", "32"], ["Belize", "bz", "501"], ["Benin (B\xE9nin)", "bj", "229"], ["Bermuda", "bm", "1441"], ["Bhutan (\u0F60\u0F56\u0FB2\u0F74\u0F42)", "bt", "975"], ["Bolivia", "bo", "591"], ["Bosnia and Herzegovina (\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)", "ba", "387"], ["Botswana", "bw", "267"], ["Brazil (Brasil)", "br", "55"], ["British Indian Ocean Territory", "io", "246"], ["British Virgin Islands", "vg", "1284"], ["Brunei", "bn", "673"], ["Bulgaria (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)", "bg", "359"], ["Burkina Faso", "bf", "226"], ["Burundi (Uburundi)", "bi", "257"], ["Cambodia (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)", "kh", "855"], ["Cameroon (Cameroun)", "cm", "237"], ["Canada", "ca", "1", 1, ["204", "226", "236", "249", "250", "289", "306", "343", "365", "387", "403", "416", "418", "431", "437", "438", "450", "506", "514", "519", "548", "579", "581", "587", "604", "613", "639", "647", "672", "705", "709", "742", "778", "780", "782", "807", "819", "825", "867", "873", "902", "905"]], ["Cape Verde (Kabu Verdi)", "cv", "238"], ["Caribbean Netherlands", "bq", "599", 1], ["Cayman Islands", "ky", "1345"], ["Central African Republic (R\xE9publique centrafricaine)", "cf", "236"], ["Chad (Tchad)", "td", "235"], ["Chile", "cl", "56"], ["China (\u4E2D\u56FD)", "cn", "86"], ["Christmas Island", "cx", "61", 2], ["Cocos (Keeling) Islands", "cc", "61", 1], ["Colombia", "co", "57"], ["Comoros (\u202B\u062C\u0632\u0631 \u0627\u0644\u0642\u0645\u0631\u202C\u200E)", "km", "269"], ["Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", "cd", "243"], ["Congo (Republic) (Congo-Brazzaville)", "cg", "242"], ["Cook Islands", "ck", "682"], ["Costa Rica", "cr", "506"], ["C\xF4te d\u2019Ivoire", "ci", "225"], ["Croatia (Hrvatska)", "hr", "385"], ["Cuba", "cu", "53"], ["Cura\xE7ao", "cw", "599", 0], ["Cyprus (\u039A\u03CD\u03C0\u03C1\u03BF\u03C2)", "cy", "357"], ["Czech Republic (\u010Cesk\xE1 republika)", "cz", "420"], ["Denmark (Danmark)", "dk", "45"], ["Djibouti", "dj", "253"], ["Dominica", "dm", "1767"], ["Dominican Republic (Rep\xFAblica Dominicana)", "do", "1", 2, ["809", "829", "849"]], ["Ecuador", "ec", "593"], ["Egypt (\u202B\u0645\u0635\u0631\u202C\u200E)", "eg", "20"], ["El Salvador", "sv", "503"], ["Equatorial Guinea (Guinea Ecuatorial)", "gq", "240"], ["Eritrea", "er", "291"], ["Estonia (Eesti)", "ee", "372"], ["Ethiopia", "et", "251"], ["Falkland Islands (Islas Malvinas)", "fk", "500"], ["Faroe Islands (F\xF8royar)", "fo", "298"], ["Fiji", "fj", "679"], ["Finland (Suomi)", "fi", "358", 0], ["France", "fr", "33"], ["French Guiana (Guyane fran\xE7aise)", "gf", "594"], ["French Polynesia (Polyn\xE9sie fran\xE7aise)", "pf", "689"], ["Gabon", "ga", "241"], ["Gambia", "gm", "220"], ["Georgia (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)", "ge", "995"], ["Germany (Deutschland)", "de", "49"], ["Ghana (Gaana)", "gh", "233"], ["Gibraltar", "gi", "350"], ["Greece (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)", "gr", "30"], ["Greenland (Kalaallit Nunaat)", "gl", "299"], ["Grenada", "gd", "1473"], ["Guadeloupe", "gp", "590", 0], ["Guam", "gu", "1671"], ["Guatemala", "gt", "502"], ["Guernsey", "gg", "44", 1], ["Guinea (Guin\xE9e)", "gn", "224"], ["Guinea-Bissau (Guin\xE9 Bissau)", "gw", "245"], ["Guyana", "gy", "592"], ["Haiti", "ht", "509"], ["Honduras", "hn", "504"], ["Hong Kong (\u9999\u6E2F)", "hk", "852"], ["Hungary (Magyarorsz\xE1g)", "hu", "36"], ["Iceland (\xCDsland)", "is", "354"], ["India (\u092D\u093E\u0930\u0924)", "in", "91"], ["Indonesia", "id", "62"], ["Iran (\u202B\u0627\u06CC\u0631\u0627\u0646\u202C\u200E)", "ir", "98"], ["Iraq (\u202B\u0627\u0644\u0639\u0631\u0627\u0642\u202C\u200E)", "iq", "964"], ["Ireland", "ie", "353"], ["Isle of Man", "im", "44", 2], ["Israel (\u202B\u05D9\u05E9\u05E8\u05D0\u05DC\u202C\u200E)", "il", "972"], ["Italy (Italia)", "it", "39", 0], ["Jamaica", "jm", "1876"], ["Japan (\u65E5\u672C)", "jp", "81"], ["Jersey", "je", "44", 3], ["Jordan (\u202B\u0627\u0644\u0623\u0631\u062F\u0646\u202C\u200E)", "jo", "962"], ["Kazakhstan (\u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D)", "kz", "7", 1], ["Kenya", "ke", "254"], ["Kiribati", "ki", "686"], ["Kosovo", "xk", "383"], ["Kuwait (\u202B\u0627\u0644\u0643\u0648\u064A\u062A\u202C\u200E)", "kw", "965"], ["Kyrgyzstan (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)", "kg", "996"], ["Laos (\u0EA5\u0EB2\u0EA7)", "la", "856"], ["Latvia (Latvija)", "lv", "371"], ["Lebanon (\u202B\u0644\u0628\u0646\u0627\u0646\u202C\u200E)", "lb", "961"], ["Lesotho", "ls", "266"], ["Liberia", "lr", "231"], ["Libya (\u202B\u0644\u064A\u0628\u064A\u0627\u202C\u200E)", "ly", "218"], ["Liechtenstein", "li", "423"], ["Lithuania (Lietuva)", "lt", "370"], ["Luxembourg", "lu", "352"], ["Macau (\u6FB3\u9580)", "mo", "853"], ["Macedonia (FYROM) (\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)", "mk", "389"], ["Madagascar (Madagasikara)", "mg", "261"], ["Malawi", "mw", "265"], ["Malaysia", "my", "60"], ["Maldives", "mv", "960"], ["Mali", "ml", "223"], ["Malta", "mt", "356"], ["Marshall Islands", "mh", "692"], ["Martinique", "mq", "596"], ["Mauritania (\u202B\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627\u202C\u200E)", "mr", "222"], ["Mauritius (Moris)", "mu", "230"], ["Mayotte", "yt", "262", 1], ["Mexico (M\xE9xico)", "mx", "52"], ["Micronesia", "fm", "691"], ["Moldova (Republica Moldova)", "md", "373"], ["Monaco", "mc", "377"], ["Mongolia (\u041C\u043E\u043D\u0433\u043E\u043B)", "mn", "976"], ["Montenegro (Crna Gora)", "me", "382"], ["Montserrat", "ms", "1664"], ["Morocco (\u202B\u0627\u0644\u0645\u063A\u0631\u0628\u202C\u200E)", "ma", "212", 0], ["Mozambique (Mo\xE7ambique)", "mz", "258"], ["Myanmar (Burma) (\u1019\u103C\u1014\u103A\u1019\u102C)", "mm", "95"], ["Namibia (Namibi\xEB)", "na", "264"], ["Nauru", "nr", "674"], ["Nepal (\u0928\u0947\u092A\u093E\u0932)", "np", "977"], ["Netherlands (Nederland)", "nl", "31"], ["New Caledonia (Nouvelle-Cal\xE9donie)", "nc", "687"], ["New Zealand", "nz", "64"], ["Nicaragua", "ni", "505"], ["Niger (Nijar)", "ne", "227"], ["Nigeria", "ng", "234"], ["Niue", "nu", "683"], ["Norfolk Island", "nf", "672"], ["North Korea (\uC870\uC120 \uBBFC\uC8FC\uC8FC\uC758 \uC778\uBBFC \uACF5\uD654\uAD6D)", "kp", "850"], ["Northern Mariana Islands", "mp", "1670"], ["Norway (Norge)", "no", "47", 0], ["Oman (\u202B\u0639\u064F\u0645\u0627\u0646\u202C\u200E)", "om", "968"], ["Pakistan (\u202B\u067E\u0627\u06A9\u0633\u062A\u0627\u0646\u202C\u200E)", "pk", "92"], ["Palau", "pw", "680"], ["Palestine (\u202B\u0641\u0644\u0633\u0637\u064A\u0646\u202C\u200E)", "ps", "970"], ["Panama (Panam\xE1)", "pa", "507"], ["Papua New Guinea", "pg", "675"], ["Paraguay", "py", "595"], ["Peru (Per\xFA)", "pe", "51"], ["Philippines", "ph", "63"], ["Poland (Polska)", "pl", "48"], ["Portugal", "pt", "351"], ["Puerto Rico", "pr", "1", 3, ["787", "939"]], ["Qatar (\u202B\u0642\u0637\u0631\u202C\u200E)", "qa", "974"], ["R\xE9union (La R\xE9union)", "re", "262", 0], ["Romania (Rom\xE2nia)", "ro", "40"], ["Russia (\u0420\u043E\u0441\u0441\u0438\u044F)", "ru", "7", 0], ["Rwanda", "rw", "250"], ["Saint Barth\xE9lemy", "bl", "590", 1], ["Saint Helena", "sh", "290"], ["Saint Kitts and Nevis", "kn", "1869"], ["Saint Lucia", "lc", "1758"], ["Saint Martin (Saint-Martin (partie fran\xE7aise))", "mf", "590", 2], ["Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)", "pm", "508"], ["Saint Vincent and the Grenadines", "vc", "1784"], ["Samoa", "ws", "685"], ["San Marino", "sm", "378"], ["S\xE3o Tom\xE9 and Pr\xEDncipe (S\xE3o Tom\xE9 e Pr\xEDncipe)", "st", "239"], ["Saudi Arabia (\u202B\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629\u202C\u200E)", "sa", "966"], ["Senegal (S\xE9n\xE9gal)", "sn", "221"], ["Serbia (\u0421\u0440\u0431\u0438\u0458\u0430)", "rs", "381"], ["Seychelles", "sc", "248"], ["Sierra Leone", "sl", "232"], ["Singapore", "sg", "65"], ["Sint Maarten", "sx", "1721"], ["Slovakia (Slovensko)", "sk", "421"], ["Slovenia (Slovenija)", "si", "386"], ["Solomon Islands", "sb", "677"], ["Somalia (Soomaaliya)", "so", "252"], ["South Africa", "za", "27"], ["South Korea (\uB300\uD55C\uBBFC\uAD6D)", "kr", "82"], ["South Sudan (\u202B\u062C\u0646\u0648\u0628 \u0627\u0644\u0633\u0648\u062F\u0627\u0646\u202C\u200E)", "ss", "211"], ["Spain (Espa\xF1a)", "es", "34"], ["Sri Lanka (\u0DC1\u0DCA\u200D\u0DBB\u0DD3 \u0DBD\u0D82\u0D9A\u0DCF\u0DC0)", "lk", "94"], ["Sudan (\u202B\u0627\u0644\u0633\u0648\u062F\u0627\u0646\u202C\u200E)", "sd", "249"], ["Suriname", "sr", "597"], ["Svalbard and Jan Mayen", "sj", "47", 1], ["Swaziland", "sz", "268"], ["Sweden (Sverige)", "se", "46"], ["Switzerland (Schweiz)", "ch", "41"], ["Syria (\u202B\u0633\u0648\u0631\u064A\u0627\u202C\u200E)", "sy", "963"], ["Taiwan (\u53F0\u7063)", "tw", "886"], ["Tajikistan", "tj", "992"], ["Tanzania", "tz", "255"], ["Thailand (\u0E44\u0E17\u0E22)", "th", "66"], ["Timor-Leste", "tl", "670"], ["Togo", "tg", "228"], ["Tokelau", "tk", "690"], ["Tonga", "to", "676"], ["Trinidad and Tobago", "tt", "1868"], ["Tunisia (\u202B\u062A\u0648\u0646\u0633\u202C\u200E)", "tn", "216"], ["Turkey (T\xFCrkiye)", "tr", "90"], ["Turkmenistan", "tm", "993"], ["Turks and Caicos Islands", "tc", "1649"], ["Tuvalu", "tv", "688"], ["U.S. Virgin Islands", "vi", "1340"], ["Uganda", "ug", "256"], ["Ukraine (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)", "ua", "380"], ["United Arab Emirates (\u202B\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629\u202C\u200E)", "ae", "971"], ["United Kingdom", "gb", "44", 0], ["United States", "us", "1", 0], ["Uruguay", "uy", "598"], ["Uzbekistan (O\u02BBzbekiston)", "uz", "998"], ["Vanuatu", "vu", "678"], ["Vatican City (Citt\xE0 del Vaticano)", "va", "39", 1], ["Venezuela", "ve", "58"], ["Vietnam (Vi\u1EC7t Nam)", "vn", "84"], ["Wallis and Futuna (Wallis-et-Futuna)", "wf", "681"], ["Western Sahara (\u202B\u0627\u0644\u0635\u062D\u0631\u0627\u0621 \u0627\u0644\u063A\u0631\u0628\u064A\u0629\u202C\u200E)", "eh", "212", 1], ["Yemen (\u202B\u0627\u0644\u064A\u0645\u0646\u202C\u200E)", "ye", "967"], ["Zambia", "zm", "260"], ["Zimbabwe", "zw", "263"], ["\xC5land Islands", "ax", "358", 1]], s = $.map(function(t3) {
          return { name: t3[0], iso2: t3[1].toUpperCase(), dialCode: t3[2], priority: t3[3] || 0, areaCodes: t3[4] || null };
        });
        function f() {
          return fetch("https://ip2c.org/s").then(function(t3) {
            return t3.text();
          }).then(function(t3) {
            var e2 = (t3 || "").toString();
            if (!e2 || "1" !== e2[0])
              throw new Error("unable to fetch the country");
            return e2.substr(2, 2);
          });
        }
        function l(t3, e2) {
          if (t3.setSelectionRange)
            t3.focus(), t3.setSelectionRange(e2, e2);
          else if (t3.createTextRange) {
            var n2 = t3.createTextRange();
            n2.collapse(true), n2.moveEnd("character", e2), n2.moveStart("character", e2), n2.select();
          }
        }
        var p = [{ name: "allCountries", type: Array, default: s, description: "All countries that are used in <code>libphonenumber-js</code>, can be overridden by this prop", inDemo: false }, { name: "autoFormat", type: Boolean, default: true, description: "Auto update the input to the formatted phone number when it's valid", inDemo: true }, { name: "customValidate", type: [Boolean, RegExp], default: false, description: "Custom validation RegExp for input", inDemo: false }, { name: "defaultCountry", default: "", type: String, description: "Default country, will override the country fetched from IP address of user", inDemo: false }, { name: "disabled", default: false, type: Boolean, description: "Disable <code>vue-tel-input</code>, including the input & flag dropdown", inDemo: false }, { name: "autoDefaultCountry", default: true, type: Boolean, description: "To fetch default country based on IP address of user", inDemo: false }, { name: "dropdownOptions", type: Object, description: "Options for dropdown, see below", inDemo: false }, { name: "dropdownOptions.showDialCodeInList", default: true, type: Boolean, description: "Show dial code in the dropdown list", inDemo: true }, { name: "dropdownOptions.showDialCodeInSelection", default: false, type: Boolean, description: "Show dial code in the dropdown selection", inDemo: true }, { name: "dropdownOptions.showFlags", default: true, type: Boolean, description: "Show flags in the dropdown selection and list", inDemo: true }, { name: "dropdownOptions.tabindex", default: 0, type: Number, description: "Native dropdown <code>tabindex</code> attribute", inDemo: false }, { name: "ignoredCountries", default: [], type: Array, description: "List of countries will NOT be shown on the dropdown", inDemo: false }, { name: "inputOptions", type: Object, description: "Options for input, see below", inDemo: false }, { name: "inputOptions.autocomplete", type: String, default: "on", description: "Native input <code>autocomplete</code> attribute", inDemo: false }, { name: "inputOptions.autofocus", type: Boolean, default: false, description: "Native input <code>autofocus</code> attribute", inDemo: false }, { name: "inputOptions.id", default: "", type: String, description: "Native input <code>id</code> attribute", inDemo: false }, { name: "inputOptions.maxlength", default: 25, type: Number, description: "Native input <code>maxlength</code> attribute", inDemo: false }, { name: "inputOptions.name", default: "telephone", type: String, description: "Native input <code>name</code> attribute", inDemo: false }, { name: "inputOptions.placeholder", default: "Enter a phone number", type: String, description: "Placeholder for the input", inDemo: false }, { name: "inputOptions.readonly", default: false, type: Boolean, description: "Native input <code>readonly</code> attribute", inDemo: false }, { name: "inputOptions.required", default: false, type: Boolean, description: "Native input <code>required</code> attribute", inDemo: false }, { name: "inputOptions.tabindex", default: 0, type: Number, description: "Native input <code>tabindex</code> attribute", inDemo: false }, { name: "inputOptions.type", default: "tel", type: String, description: "Native input <code>type</code> attribute", inDemo: false }, { name: "inputOptions.styleClasses", default: "", type: [String, Array, Object], description: "Custom classes for the <code>input</code>", inDemo: false }, { name: "invalidMsg", default: "", type: String, description: "", inDemo: false }, { name: "mode", default: "auto", type: String, description: "Allowed values: <code>'auto'</code> (Default set by phone),  <code>'international'</code> (Format number with the dial code i.e. + 61), <code>'national'</code> (Format number without dial code i.e. 0321232)", inDemo: true, options: ["auto", "national", "international"] }, { name: "onlyCountries", default: [], type: Array, description: "List of countries will be shown on the dropdown", inDemo: false }, { name: "preferredCountries", default: [], type: Array, description: "Preferred countries list, will be on top of the dropdown", inDemo: false }, { name: "styleClasses", default: "", type: [String, Array, Object], description: "Custom classes for the wrapper", inDemo: false }, { name: "validCharactersOnly", default: false, type: Boolean, description: "Only allow valid characters in a phone number (will also verify in <code>mounted</code>, so phone number with invalid characters will be shown as an empty string)", inDemo: false }], h = [].concat(p).reduce(function(t3, e2) {
          if (e2.name.includes(".")) {
            var n2 = e2.name.split("."), r2 = c(n2, 2), i2 = r2[0], o2 = r2[1];
            t3[i2] ? Object.assign(t3[i2], Object(d["a"])({}, o2, e2.default)) : Object.assign(t3, Object(d["a"])({}, i2, Object(d["a"])({}, o2, e2.default)));
          } else
            Object.assign(t3, Object(d["a"])({}, e2.name, e2.default));
          return t3;
        }, {});
        e["a"] = { options: Object(r["a"])({}, h) };
      }, "0366": function(t2, e, n) {
        var r = n("1c0b");
        t2.exports = function(t3, e2, n2) {
          if (r(t3), void 0 === e2)
            return t3;
          switch (n2) {
            case 0:
              return function() {
                return t3.call(e2);
              };
            case 1:
              return function(n3) {
                return t3.call(e2, n3);
              };
            case 2:
              return function(n3, r2) {
                return t3.call(e2, n3, r2);
              };
            case 3:
              return function(n3, r2, d) {
                return t3.call(e2, n3, r2, d);
              };
          }
          return function() {
            return t3.apply(e2, arguments);
          };
        };
      }, "057f": function(t2, e, n) {
        var r = n("fc6a"), d = n("241c").f, i = {}.toString, o = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], a = function(t3) {
          try {
            return d(t3);
          } catch (e2) {
            return o.slice();
          }
        };
        t2.exports.f = function(t3) {
          return o && "[object Window]" == i.call(t3) ? a(t3) : d(r(t3));
        };
      }, "06c5": function(t2, e, n) {
        "use strict";
        n.d(e, "a", function() {
          return d;
        });
        n("a630"), n("fb6a"), n("b0c0"), n("d3b7"), n("25f0"), n("3ca3");
        var r = n("6b75");
        function d(t3, e2) {
          if (t3) {
            if ("string" === typeof t3)
              return Object(r["a"])(t3, e2);
            var n2 = Object.prototype.toString.call(t3).slice(8, -1);
            return "Object" === n2 && t3.constructor && (n2 = t3.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(t3) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? Object(r["a"])(t3, e2) : void 0;
          }
        }
      }, "06cf": function(t2, e, n) {
        var r = n("83ab"), d = n("d1e7"), i = n("5c6c"), o = n("fc6a"), a = n("c04e"), u = n("5135"), c = n("0cfb"), $ = Object.getOwnPropertyDescriptor;
        e.f = r ? $ : function(t3, e2) {
          if (t3 = o(t3), e2 = a(e2, true), c)
            try {
              return $(t3, e2);
            } catch (n2) {
            }
          if (u(t3, e2))
            return i(!d.f.call(t3, e2), t3[e2]);
        };
      }, "0cfb": function(t2, e, n) {
        var r = n("83ab"), d = n("d039"), i = n("cc12");
        t2.exports = !r && !d(function() {
          return 7 != Object.defineProperty(i("div"), "a", { get: function() {
            return 7;
          } }).a;
        });
      }, 1276: function(t2, e, n) {
        "use strict";
        var r = n("d784"), d = n("44e7"), i = n("825a"), o = n("1d80"), a = n("4840"), u = n("8aa5"), c = n("50c4"), $ = n("14c3"), s = n("9263"), f = n("d039"), l = [].push, p = Math.min, h = 4294967295, v = !f(function() {
          return !RegExp(h, "y");
        });
        r("split", 2, function(t3, e2, n2) {
          var r2;
          return r2 = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function(t4, n3) {
            var r3 = String(o(this)), i2 = void 0 === n3 ? h : n3 >>> 0;
            if (0 === i2)
              return [];
            if (void 0 === t4)
              return [r3];
            if (!d(t4))
              return e2.call(r3, t4, i2);
            var a2, u2, c2, $2 = [], f2 = (t4.ignoreCase ? "i" : "") + (t4.multiline ? "m" : "") + (t4.unicode ? "u" : "") + (t4.sticky ? "y" : ""), p2 = 0, v2 = new RegExp(t4.source, f2 + "g");
            while (a2 = s.call(v2, r3)) {
              if (u2 = v2.lastIndex, u2 > p2 && ($2.push(r3.slice(p2, a2.index)), a2.length > 1 && a2.index < r3.length && l.apply($2, a2.slice(1)), c2 = a2[0].length, p2 = u2, $2.length >= i2))
                break;
              v2.lastIndex === a2.index && v2.lastIndex++;
            }
            return p2 === r3.length ? !c2 && v2.test("") || $2.push("") : $2.push(r3.slice(p2)), $2.length > i2 ? $2.slice(0, i2) : $2;
          } : "0".split(void 0, 0).length ? function(t4, n3) {
            return void 0 === t4 && 0 === n3 ? [] : e2.call(this, t4, n3);
          } : e2, [function(e3, n3) {
            var d2 = o(this), i2 = void 0 == e3 ? void 0 : e3[t3];
            return void 0 !== i2 ? i2.call(e3, d2, n3) : r2.call(String(d2), e3, n3);
          }, function(t4, d2) {
            var o2 = n2(r2, t4, this, d2, r2 !== e2);
            if (o2.done)
              return o2.value;
            var s2 = i(t4), f2 = String(this), l2 = a(s2, RegExp), y = s2.unicode, b = (s2.ignoreCase ? "i" : "") + (s2.multiline ? "m" : "") + (s2.unicode ? "u" : "") + (v ? "y" : "g"), g = new l2(v ? s2 : "^(?:" + s2.source + ")", b), m = void 0 === d2 ? h : d2 >>> 0;
            if (0 === m)
              return [];
            if (0 === f2.length)
              return null === $(g, f2) ? [f2] : [];
            var O = 0, C = 0, x = [];
            while (C < f2.length) {
              g.lastIndex = v ? C : 0;
              var w, S = $(g, v ? f2 : f2.slice(C));
              if (null === S || (w = p(c(g.lastIndex + (v ? 0 : C)), f2.length)) === O)
                C = u(f2, C, y);
              else {
                if (x.push(f2.slice(O, C)), x.length === m)
                  return x;
                for (var E = 1; E <= S.length - 1; E++)
                  if (x.push(S[E]), x.length === m)
                    return x;
                C = O = w;
              }
            }
            return x.push(f2.slice(O)), x;
          }];
        }, !v);
      }, "13d5": function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("d58f").left, i = n("a640"), o = n("ae40"), a = n("2d00"), u = n("605d"), c = i("reduce"), $ = o("reduce", { 1: 0 }), s = !u && a > 79 && a < 83;
        r({ target: "Array", proto: true, forced: !c || !$ || s }, { reduce: function(t3) {
          return d(this, t3, arguments.length, arguments.length > 1 ? arguments[1] : void 0);
        } });
      }, "14c3": function(t2, e, n) {
        var r = n("c6b6"), d = n("9263");
        t2.exports = function(t3, e2) {
          var n2 = t3.exec;
          if ("function" === typeof n2) {
            var i = n2.call(t3, e2);
            if ("object" !== typeof i)
              throw TypeError("RegExp exec method returned something other than an Object or null");
            return i;
          }
          if ("RegExp" !== r(t3))
            throw TypeError("RegExp#exec called on incompatible receiver");
          return d.call(t3, e2);
        };
      }, "159b": function(t2, e, n) {
        var r = n("da84"), d = n("fdbc"), i = n("17c2"), o = n("9112");
        for (var a in d) {
          var u = r[a], c = u && u.prototype;
          if (c && c.forEach !== i)
            try {
              o(c, "forEach", i);
            } catch ($) {
              c.forEach = i;
            }
        }
      }, "15fd": function(t2, e, n) {
        "use strict";
        n.d(e, "a", function() {
          return d;
        });
        n("a4d3"), n("c975"), n("b64b");
        function r(t3, e2) {
          if (null == t3)
            return {};
          var n2, r2, d2 = {}, i = Object.keys(t3);
          for (r2 = 0; r2 < i.length; r2++)
            n2 = i[r2], e2.indexOf(n2) >= 0 || (d2[n2] = t3[n2]);
          return d2;
        }
        function d(t3, e2) {
          if (null == t3)
            return {};
          var n2, d2, i = r(t3, e2);
          if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(t3);
            for (d2 = 0; d2 < o.length; d2++)
              n2 = o[d2], e2.indexOf(n2) >= 0 || Object.prototype.propertyIsEnumerable.call(t3, n2) && (i[n2] = t3[n2]);
          }
          return i;
        }
      }, "17c2": function(t2, e, n) {
        "use strict";
        var r = n("b727").forEach, d = n("a640"), i = n("ae40"), o = d("forEach"), a = i("forEach");
        t2.exports = o && a ? [].forEach : function(t3) {
          return r(this, t3, arguments.length > 1 ? arguments[1] : void 0);
        };
      }, "19aa": function(t2, e) {
        t2.exports = function(t3, e2, n) {
          if (!(t3 instanceof e2))
            throw TypeError("Incorrect " + (n ? n + " " : "") + "invocation");
          return t3;
        };
      }, "1be4": function(t2, e, n) {
        var r = n("d066");
        t2.exports = r("document", "documentElement");
      }, "1c0b": function(t2, e) {
        t2.exports = function(t3) {
          if ("function" != typeof t3)
            throw TypeError(String(t3) + " is not a function");
          return t3;
        };
      }, "1c7e": function(t2, e, n) {
        var r = n("b622"), d = r("iterator"), i = false;
        try {
          var o = 0, a = { next: function() {
            return { done: !!o++ };
          }, return: function() {
            i = true;
          } };
          a[d] = function() {
            return this;
          }, Array.from(a, function() {
            throw 2;
          });
        } catch (u) {
        }
        t2.exports = function(t3, e2) {
          if (!e2 && !i)
            return false;
          var n2 = false;
          try {
            var r2 = {};
            r2[d] = function() {
              return { next: function() {
                return { done: n2 = true };
              } };
            }, t3(r2);
          } catch (u) {
          }
          return n2;
        };
      }, "1cdc": function(t2, e, n) {
        var r = n("342f");
        t2.exports = /(iphone|ipod|ipad).*applewebkit/i.test(r);
      }, "1d80": function(t2, e) {
        t2.exports = function(t3) {
          if (void 0 == t3)
            throw TypeError("Can't call method on " + t3);
          return t3;
        };
      }, "1dde": function(t2, e, n) {
        var r = n("d039"), d = n("b622"), i = n("2d00"), o = d("species");
        t2.exports = function(t3) {
          return i >= 51 || !r(function() {
            var e2 = [], n2 = e2.constructor = {};
            return n2[o] = function() {
              return { foo: 1 };
            }, 1 !== e2[t3](Boolean).foo;
          });
        };
      }, 2266: function(t2, e, n) {
        var r = n("825a"), d = n("e95a"), i = n("50c4"), o = n("0366"), a = n("35a1"), u = n("2a62"), c = function(t3, e2) {
          this.stopped = t3, this.result = e2;
        };
        t2.exports = function(t3, e2, n2) {
          var $, s, f, l, p, h, v, y = n2 && n2.that, b = !(!n2 || !n2.AS_ENTRIES), g = !(!n2 || !n2.IS_ITERATOR), m = !(!n2 || !n2.INTERRUPTED), O = o(e2, y, 1 + b + m), C = function(t4) {
            return $ && u($), new c(true, t4);
          }, x = function(t4) {
            return b ? (r(t4), m ? O(t4[0], t4[1], C) : O(t4[0], t4[1])) : m ? O(t4, C) : O(t4);
          };
          if (g)
            $ = t3;
          else {
            if (s = a(t3), "function" != typeof s)
              throw TypeError("Target is not iterable");
            if (d(s)) {
              for (f = 0, l = i(t3.length); l > f; f++)
                if (p = x(t3[f]), p && p instanceof c)
                  return p;
              return new c(false);
            }
            $ = s.call(t3);
          }
          h = $.next;
          while (!(v = h.call($)).done) {
            try {
              p = x(v.value);
            } catch (w) {
              throw u($), w;
            }
            if ("object" == typeof p && p && p instanceof c)
              return p;
          }
          return new c(false);
        };
      }, "23cb": function(t2, e, n) {
        var r = n("a691"), d = Math.max, i = Math.min;
        t2.exports = function(t3, e2) {
          var n2 = r(t3);
          return n2 < 0 ? d(n2 + e2, 0) : i(n2, e2);
        };
      }, "23e7": function(t2, e, n) {
        var r = n("da84"), d = n("06cf").f, i = n("9112"), o = n("6eeb"), a = n("ce4e"), u = n("e893"), c = n("94ca");
        t2.exports = function(t3, e2) {
          var n2, $, s, f, l, p, h = t3.target, v = t3.global, y = t3.stat;
          if ($ = v ? r : y ? r[h] || a(h, {}) : (r[h] || {}).prototype, $)
            for (s in e2) {
              if (l = e2[s], t3.noTargetGet ? (p = d($, s), f = p && p.value) : f = $[s], n2 = c(v ? s : h + (y ? "." : "#") + s, t3.forced), !n2 && void 0 !== f) {
                if (typeof l === typeof f)
                  continue;
                u(l, f);
              }
              (t3.sham || f && f.sham) && i(l, "sham", true), o($, s, l, t3);
            }
        };
      }, "241c": function(t2, e, n) {
        var r = n("ca84"), d = n("7839"), i = d.concat("length", "prototype");
        e.f = Object.getOwnPropertyNames || function(t3) {
          return r(t3, i);
        };
      }, 2532: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("5a34"), i = n("1d80"), o = n("ab13");
        r({ target: "String", proto: true, forced: !o("includes") }, { includes: function(t3) {
          return !!~String(i(this)).indexOf(d(t3), arguments.length > 1 ? arguments[1] : void 0);
        } });
      }, "25f0": function(t2, e, n) {
        "use strict";
        var r = n("6eeb"), d = n("825a"), i = n("d039"), o = n("ad6d"), a = "toString", u = RegExp.prototype, c = u[a], $ = i(function() {
          return "/a/b" != c.call({ source: "a", flags: "b" });
        }), s = c.name != a;
        ($ || s) && r(RegExp.prototype, a, function() {
          var t3 = d(this), e2 = String(t3.source), n2 = t3.flags, r2 = String(void 0 === n2 && t3 instanceof RegExp && !("flags" in u) ? o.call(t3) : n2);
          return "/" + e2 + "/" + r2;
        }, { unsafe: true });
      }, 2626: function(t2, e, n) {
        "use strict";
        var r = n("d066"), d = n("9bf2"), i = n("b622"), o = n("83ab"), a = i("species");
        t2.exports = function(t3) {
          var e2 = r(t3), n2 = d.f;
          o && e2 && !e2[a] && n2(e2, a, { configurable: true, get: function() {
            return this;
          } });
        };
      }, "2a62": function(t2, e, n) {
        var r = n("825a");
        t2.exports = function(t3) {
          var e2 = t3["return"];
          if (void 0 !== e2)
            return r(e2.call(t3)).value;
        };
      }, "2ca0": function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("06cf").f, i = n("50c4"), o = n("5a34"), a = n("1d80"), u = n("ab13"), c = n("c430"), $ = "".startsWith, s = Math.min, f = u("startsWith"), l = !c && !f && !!function() {
          var t3 = d(String.prototype, "startsWith");
          return t3 && !t3.writable;
        }();
        r({ target: "String", proto: true, forced: !l && !f }, { startsWith: function(t3) {
          var e2 = String(a(this));
          o(t3);
          var n2 = i(s(arguments.length > 1 ? arguments[1] : void 0, e2.length)), r2 = String(t3);
          return $ ? $.call(e2, r2, n2) : e2.slice(n2, n2 + r2.length) === r2;
        } });
      }, "2cf4": function(t2, e, n) {
        var r, d, i, o = n("da84"), a = n("d039"), u = n("0366"), c = n("1be4"), $ = n("cc12"), s = n("1cdc"), f = n("605d"), l = o.location, p = o.setImmediate, h = o.clearImmediate, v = o.process, y = o.MessageChannel, b = o.Dispatch, g = 0, m = {}, O = "onreadystatechange", C = function(t3) {
          if (m.hasOwnProperty(t3)) {
            var e2 = m[t3];
            delete m[t3], e2();
          }
        }, x = function(t3) {
          return function() {
            C(t3);
          };
        }, w = function(t3) {
          C(t3.data);
        }, S = function(t3) {
          o.postMessage(t3 + "", l.protocol + "//" + l.host);
        };
        p && h || (p = function(t3) {
          var e2 = [], n2 = 1;
          while (arguments.length > n2)
            e2.push(arguments[n2++]);
          return m[++g] = function() {
            ("function" == typeof t3 ? t3 : Function(t3)).apply(void 0, e2);
          }, r(g), g;
        }, h = function(t3) {
          delete m[t3];
        }, f ? r = function(t3) {
          v.nextTick(x(t3));
        } : b && b.now ? r = function(t3) {
          b.now(x(t3));
        } : y && !s ? (d = new y(), i = d.port2, d.port1.onmessage = w, r = u(i.postMessage, i, 1)) : o.addEventListener && "function" == typeof postMessage && !o.importScripts && l && "file:" !== l.protocol && !a(S) ? (r = S, o.addEventListener("message", w, false)) : r = O in $("script") ? function(t3) {
          c.appendChild($("script"))[O] = function() {
            c.removeChild(this), C(t3);
          };
        } : function(t3) {
          setTimeout(x(t3), 0);
        }), t2.exports = { set: p, clear: h };
      }, "2d00": function(t2, e, n) {
        var r, d, i = n("da84"), o = n("342f"), a = i.process, u = a && a.versions, c = u && u.v8;
        c ? (r = c.split("."), d = r[0] + r[1]) : o && (r = o.match(/Edge\/(\d+)/), (!r || r[1] >= 74) && (r = o.match(/Chrome\/(\d+)/), r && (d = r[1]))), t2.exports = d && +d;
      }, "342f": function(t2, e, n) {
        var r = n("d066");
        t2.exports = r("navigator", "userAgent") || "";
      }, "35a1": function(t2, e, n) {
        var r = n("f5df"), d = n("3f8c"), i = n("b622"), o = i("iterator");
        t2.exports = function(t3) {
          if (void 0 != t3)
            return t3[o] || t3["@@iterator"] || d[r(t3)];
        };
      }, "37e8": function(t2, e, n) {
        var r = n("83ab"), d = n("9bf2"), i = n("825a"), o = n("df75");
        t2.exports = r ? Object.defineProperties : function(t3, e2) {
          i(t3);
          var n2, r2 = o(e2), a = r2.length, u = 0;
          while (a > u)
            d.f(t3, n2 = r2[u++], e2[n2]);
          return t3;
        };
      }, "3bbe": function(t2, e, n) {
        var r = n("861d");
        t2.exports = function(t3) {
          if (!r(t3) && null !== t3)
            throw TypeError("Can't set " + String(t3) + " as a prototype");
          return t3;
        };
      }, "3ca3": function(t2, e, n) {
        "use strict";
        var r = n("6547").charAt, d = n("69f3"), i = n("7dd0"), o = "String Iterator", a = d.set, u = d.getterFor(o);
        i(String, "String", function(t3) {
          a(this, { type: o, string: String(t3), index: 0 });
        }, function() {
          var t3, e2 = u(this), n2 = e2.string, d2 = e2.index;
          return d2 >= n2.length ? { value: void 0, done: true } : (t3 = r(n2, d2), e2.index += t3.length, { value: t3, done: false });
        });
      }, "3f8c": function(t2, e) {
        t2.exports = {};
      }, 4160: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("17c2");
        r({ target: "Array", proto: true, forced: [].forEach != d }, { forEach: d });
      }, "428f": function(t2, e, n) {
        var r = n("da84");
        t2.exports = r;
      }, "44ad": function(t2, e, n) {
        var r = n("d039"), d = n("c6b6"), i = "".split;
        t2.exports = r(function() {
          return !Object("z").propertyIsEnumerable(0);
        }) ? function(t3) {
          return "String" == d(t3) ? i.call(t3, "") : Object(t3);
        } : Object;
      }, "44d2": function(t2, e, n) {
        var r = n("b622"), d = n("7c73"), i = n("9bf2"), o = r("unscopables"), a = Array.prototype;
        void 0 == a[o] && i.f(a, o, { configurable: true, value: d(null) }), t2.exports = function(t3) {
          a[o][t3] = true;
        };
      }, "44de": function(t2, e, n) {
        var r = n("da84");
        t2.exports = function(t3, e2) {
          var n2 = r.console;
          n2 && n2.error && (1 === arguments.length ? n2.error(t3) : n2.error(t3, e2));
        };
      }, "44e7": function(t2, e, n) {
        var r = n("861d"), d = n("c6b6"), i = n("b622"), o = i("match");
        t2.exports = function(t3) {
          var e2;
          return r(t3) && (void 0 !== (e2 = t3[o]) ? !!e2 : "RegExp" == d(t3));
        };
      }, "45fc": function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("b727").some, i = n("a640"), o = n("ae40"), a = i("some"), u = o("some");
        r({ target: "Array", proto: true, forced: !a || !u }, { some: function(t3) {
          return d(this, t3, arguments.length > 1 ? arguments[1] : void 0);
        } });
      }, "466d": function(t2, e, n) {
        "use strict";
        var r = n("d784"), d = n("825a"), i = n("50c4"), o = n("1d80"), a = n("8aa5"), u = n("14c3");
        r("match", 1, function(t3, e2, n2) {
          return [function(e3) {
            var n3 = o(this), r2 = void 0 == e3 ? void 0 : e3[t3];
            return void 0 !== r2 ? r2.call(e3, n3) : new RegExp(e3)[t3](String(n3));
          }, function(t4) {
            var r2 = n2(e2, t4, this);
            if (r2.done)
              return r2.value;
            var o2 = d(t4), c = String(this);
            if (!o2.global)
              return u(o2, c);
            var $ = o2.unicode;
            o2.lastIndex = 0;
            var s, f = [], l = 0;
            while (null !== (s = u(o2, c))) {
              var p = String(s[0]);
              f[l] = p, "" === p && (o2.lastIndex = a(c, i(o2.lastIndex), $)), l++;
            }
            return 0 === l ? null : f;
          }];
        });
      }, 4840: function(t2, e, n) {
        var r = n("825a"), d = n("1c0b"), i = n("b622"), o = i("species");
        t2.exports = function(t3, e2) {
          var n2, i2 = r(t3).constructor;
          return void 0 === i2 || void 0 == (n2 = r(i2)[o]) ? e2 : d(n2);
        };
      }, 4930: function(t2, e, n) {
        var r = n("d039");
        t2.exports = !!Object.getOwnPropertySymbols && !r(function() {
          return !String(Symbol());
        });
      }, "498a": function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("58a8").trim, i = n("c8d2");
        r({ target: "String", proto: true, forced: i("trim") }, { trim: function() {
          return d(this);
        } });
      }, "4d63": function(t2, e, n) {
        var r = n("83ab"), d = n("da84"), i = n("94ca"), o = n("7156"), a = n("9bf2").f, u = n("241c").f, c = n("44e7"), $ = n("ad6d"), s = n("9f7f"), f = n("6eeb"), l = n("d039"), p = n("69f3").set, h = n("2626"), v = n("b622"), y = v("match"), b = d.RegExp, g = b.prototype, m = /a/g, O = /a/g, C = new b(m) !== m, x = s.UNSUPPORTED_Y, w = r && i("RegExp", !C || x || l(function() {
          return O[y] = false, b(m) != m || b(O) == O || "/a/i" != b(m, "i");
        }));
        if (w) {
          var S = function(t3, e2) {
            var n2, r2 = this instanceof S, d2 = c(t3), i2 = void 0 === e2;
            if (!r2 && d2 && t3.constructor === S && i2)
              return t3;
            C ? d2 && !i2 && (t3 = t3.source) : t3 instanceof S && (i2 && (e2 = $.call(t3)), t3 = t3.source), x && (n2 = !!e2 && e2.indexOf("y") > -1, n2 && (e2 = e2.replace(/y/g, "")));
            var a2 = o(C ? new b(t3, e2) : b(t3, e2), r2 ? this : g, S);
            return x && n2 && p(a2, { sticky: n2 }), a2;
          }, E = function(t3) {
            t3 in S || a(S, t3, { configurable: true, get: function() {
              return b[t3];
            }, set: function(e2) {
              b[t3] = e2;
            } });
          }, P = u(b), I = 0;
          while (P.length > I)
            E(P[I++]);
          g.constructor = S, S.prototype = g, f(d, "RegExp", S);
        }
        h("RegExp");
      }, "4d64": function(t2, e, n) {
        var r = n("fc6a"), d = n("50c4"), i = n("23cb"), o = function(t3) {
          return function(e2, n2, o2) {
            var a, u = r(e2), c = d(u.length), $ = i(o2, c);
            if (t3 && n2 != n2) {
              while (c > $)
                if (a = u[$++], a != a)
                  return true;
            } else
              for (; c > $; $++)
                if ((t3 || $ in u) && u[$] === n2)
                  return t3 || $ || 0;
            return !t3 && -1;
          };
        };
        t2.exports = { includes: o(true), indexOf: o(false) };
      }, "4de4": function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("b727").filter, i = n("1dde"), o = n("ae40"), a = i("filter"), u = o("filter");
        r({ target: "Array", proto: true, forced: !a || !u }, { filter: function(t3) {
          return d(this, t3, arguments.length > 1 ? arguments[1] : void 0);
        } });
      }, "4df4": function(t2, e, n) {
        "use strict";
        var r = n("0366"), d = n("7b0b"), i = n("9bdd"), o = n("e95a"), a = n("50c4"), u = n("8418"), c = n("35a1");
        t2.exports = function(t3) {
          var e2, n2, $, s, f, l, p = d(t3), h = "function" == typeof this ? this : Array, v = arguments.length, y = v > 1 ? arguments[1] : void 0, b = void 0 !== y, g = c(p), m = 0;
          if (b && (y = r(y, v > 2 ? arguments[2] : void 0, 2)), void 0 == g || h == Array && o(g))
            for (e2 = a(p.length), n2 = new h(e2); e2 > m; m++)
              l = b ? y(p[m], m) : p[m], u(n2, m, l);
          else
            for (s = g.call(p), f = s.next, n2 = new h(); !($ = f.call(s)).done; m++)
              l = b ? i(s, y, [$.value, m], true) : $.value, u(n2, m, l);
          return n2.length = m, n2;
        };
      }, "50c4": function(t2, e, n) {
        var r = n("a691"), d = Math.min;
        t2.exports = function(t3) {
          return t3 > 0 ? d(r(t3), 9007199254740991) : 0;
        };
      }, 5135: function(t2, e) {
        var n = {}.hasOwnProperty;
        t2.exports = function(t3, e2) {
          return n.call(t3, e2);
        };
      }, 5530: function(t2, e, n) {
        "use strict";
        n.d(e, "a", function() {
          return i;
        });
        n("a4d3"), n("4de4"), n("4160"), n("e439"), n("dbb4"), n("b64b"), n("159b");
        var r = n("ade3");
        function d(t3, e2) {
          var n2 = Object.keys(t3);
          if (Object.getOwnPropertySymbols) {
            var r2 = Object.getOwnPropertySymbols(t3);
            e2 && (r2 = r2.filter(function(e3) {
              return Object.getOwnPropertyDescriptor(t3, e3).enumerable;
            })), n2.push.apply(n2, r2);
          }
          return n2;
        }
        function i(t3) {
          for (var e2 = 1; e2 < arguments.length; e2++) {
            var n2 = null != arguments[e2] ? arguments[e2] : {};
            e2 % 2 ? d(Object(n2), true).forEach(function(e3) {
              Object(r["a"])(t3, e3, n2[e3]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n2)) : d(Object(n2)).forEach(function(e3) {
              Object.defineProperty(t3, e3, Object.getOwnPropertyDescriptor(n2, e3));
            });
          }
          return t3;
        }
      }, 5692: function(t2, e, n) {
        var r = n("c430"), d = n("c6cd");
        (t2.exports = function(t3, e2) {
          return d[t3] || (d[t3] = void 0 !== e2 ? e2 : {});
        })("versions", []).push({ version: "3.8.1", mode: r ? "pure" : "global", copyright: "\xA9 2020 Denis Pushkarev (zloirock.ru)" });
      }, "56ef": function(t2, e, n) {
        var r = n("d066"), d = n("241c"), i = n("7418"), o = n("825a");
        t2.exports = r("Reflect", "ownKeys") || function(t3) {
          var e2 = d.f(o(t3)), n2 = i.f;
          return n2 ? e2.concat(n2(t3)) : e2;
        };
      }, 5899: function(t2, e) {
        t2.exports = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
      }, "58a8": function(t2, e, n) {
        var r = n("1d80"), d = n("5899"), i = "[" + d + "]", o = RegExp("^" + i + i + "*"), a = RegExp(i + i + "*$"), u = function(t3) {
          return function(e2) {
            var n2 = String(r(e2));
            return 1 & t3 && (n2 = n2.replace(o, "")), 2 & t3 && (n2 = n2.replace(a, "")), n2;
          };
        };
        t2.exports = { start: u(1), end: u(2), trim: u(3) };
      }, "5a34": function(t2, e, n) {
        var r = n("44e7");
        t2.exports = function(t3) {
          if (r(t3))
            throw TypeError("The method doesn't accept regular expressions");
          return t3;
        };
      }, "5c6c": function(t2, e) {
        t2.exports = function(t3, e2) {
          return { enumerable: !(1 & t3), configurable: !(2 & t3), writable: !(4 & t3), value: e2 };
        };
      }, "605d": function(t2, e, n) {
        var r = n("c6b6"), d = n("da84");
        t2.exports = "process" == r(d.process);
      }, "60da": function(t2, e, n) {
        "use strict";
        var r = n("83ab"), d = n("d039"), i = n("df75"), o = n("7418"), a = n("d1e7"), u = n("7b0b"), c = n("44ad"), $ = Object.assign, s = Object.defineProperty;
        t2.exports = !$ || d(function() {
          if (r && 1 !== $({ b: 1 }, $(s({}, "a", { enumerable: true, get: function() {
            s(this, "b", { value: 3, enumerable: false });
          } }), { b: 2 })).b)
            return true;
          var t3 = {}, e2 = {}, n2 = Symbol(), d2 = "abcdefghijklmnopqrst";
          return t3[n2] = 7, d2.split("").forEach(function(t4) {
            e2[t4] = t4;
          }), 7 != $({}, t3)[n2] || i($({}, e2)).join("") != d2;
        }) ? function(t3, e2) {
          var n2 = u(t3), d2 = arguments.length, $2 = 1, s2 = o.f, f = a.f;
          while (d2 > $2) {
            var l, p = c(arguments[$2++]), h = s2 ? i(p).concat(s2(p)) : i(p), v = h.length, y = 0;
            while (v > y)
              l = h[y++], r && !f.call(p, l) || (n2[l] = p[l]);
          }
          return n2;
        } : $;
      }, 6547: function(t2, e, n) {
        var r = n("a691"), d = n("1d80"), i = function(t3) {
          return function(e2, n2) {
            var i2, o, a = String(d(e2)), u = r(n2), c = a.length;
            return u < 0 || u >= c ? t3 ? "" : void 0 : (i2 = a.charCodeAt(u), i2 < 55296 || i2 > 56319 || u + 1 === c || (o = a.charCodeAt(u + 1)) < 56320 || o > 57343 ? t3 ? a.charAt(u) : i2 : t3 ? a.slice(u, u + 2) : o - 56320 + (i2 - 55296 << 10) + 65536);
          };
        };
        t2.exports = { codeAt: i(false), charAt: i(true) };
      }, "65f0": function(t2, e, n) {
        var r = n("861d"), d = n("e8b5"), i = n("b622"), o = i("species");
        t2.exports = function(t3, e2) {
          var n2;
          return d(t3) && (n2 = t3.constructor, "function" != typeof n2 || n2 !== Array && !d(n2.prototype) ? r(n2) && (n2 = n2[o], null === n2 && (n2 = void 0)) : n2 = void 0), new (void 0 === n2 ? Array : n2)(0 === e2 ? 0 : e2);
        };
      }, "69f3": function(t2, e, n) {
        var r, d, i, o = n("7f9a"), a = n("da84"), u = n("861d"), c = n("9112"), $ = n("5135"), s = n("c6cd"), f = n("f772"), l = n("d012"), p = a.WeakMap, h = function(t3) {
          return i(t3) ? d(t3) : r(t3, {});
        }, v = function(t3) {
          return function(e2) {
            var n2;
            if (!u(e2) || (n2 = d(e2)).type !== t3)
              throw TypeError("Incompatible receiver, " + t3 + " required");
            return n2;
          };
        };
        if (o) {
          var y = s.state || (s.state = new p()), b = y.get, g = y.has, m = y.set;
          r = function(t3, e2) {
            return e2.facade = t3, m.call(y, t3, e2), e2;
          }, d = function(t3) {
            return b.call(y, t3) || {};
          }, i = function(t3) {
            return g.call(y, t3);
          };
        } else {
          var O = f("state");
          l[O] = true, r = function(t3, e2) {
            return e2.facade = t3, c(t3, O, e2), e2;
          }, d = function(t3) {
            return $(t3, O) ? t3[O] : {};
          }, i = function(t3) {
            return $(t3, O);
          };
        }
        t2.exports = { set: r, get: d, has: i, enforce: h, getterFor: v };
      }, "6b75": function(t2, e, n) {
        "use strict";
        function r(t3, e2) {
          (null == e2 || e2 > t3.length) && (e2 = t3.length);
          for (var n2 = 0, r2 = new Array(e2); n2 < e2; n2++)
            r2[n2] = t3[n2];
          return r2;
        }
        n.d(e, "a", function() {
          return r;
        });
      }, "6eeb": function(t2, e, n) {
        var r = n("da84"), d = n("9112"), i = n("5135"), o = n("ce4e"), a = n("8925"), u = n("69f3"), c = u.get, $ = u.enforce, s = String(String).split("String");
        (t2.exports = function(t3, e2, n2, a2) {
          var u2, c2 = !!a2 && !!a2.unsafe, f = !!a2 && !!a2.enumerable, l = !!a2 && !!a2.noTargetGet;
          "function" == typeof n2 && ("string" != typeof e2 || i(n2, "name") || d(n2, "name", e2), u2 = $(n2), u2.source || (u2.source = s.join("string" == typeof e2 ? e2 : ""))), t3 !== r ? (c2 ? !l && t3[e2] && (f = true) : delete t3[e2], f ? t3[e2] = n2 : d(t3, e2, n2)) : f ? t3[e2] = n2 : o(e2, n2);
        })(Function.prototype, "toString", function() {
          return "function" == typeof this && c(this).source || a(this);
        });
      }, 7156: function(t2, e, n) {
        var r = n("861d"), d = n("d2bb");
        t2.exports = function(t3, e2, n2) {
          var i, o;
          return d && "function" == typeof (i = e2.constructor) && i !== n2 && r(o = i.prototype) && o !== n2.prototype && d(t3, o), t3;
        };
      }, 7418: function(t2, e) {
        e.f = Object.getOwnPropertySymbols;
      }, "746f": function(t2, e, n) {
        var r = n("428f"), d = n("5135"), i = n("e538"), o = n("9bf2").f;
        t2.exports = function(t3) {
          var e2 = r.Symbol || (r.Symbol = {});
          d(e2, t3) || o(e2, t3, { value: i.f(t3) });
        };
      }, 7839: function(t2, e) {
        t2.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
      }, "7b0b": function(t2, e, n) {
        var r = n("1d80");
        t2.exports = function(t3) {
          return Object(r(t3));
        };
      }, "7c73": function(t2, e, n) {
        var r, d = n("825a"), i = n("37e8"), o = n("7839"), a = n("d012"), u = n("1be4"), c = n("cc12"), $ = n("f772"), s = ">", f = "<", l = "prototype", p = "script", h = $("IE_PROTO"), v = function() {
        }, y = function(t3) {
          return f + p + s + t3 + f + "/" + p + s;
        }, b = function(t3) {
          t3.write(y("")), t3.close();
          var e2 = t3.parentWindow.Object;
          return t3 = null, e2;
        }, g = function() {
          var t3, e2 = c("iframe"), n2 = "java" + p + ":";
          return e2.style.display = "none", u.appendChild(e2), e2.src = String(n2), t3 = e2.contentWindow.document, t3.open(), t3.write(y("document.F=Object")), t3.close(), t3.F;
        }, m = function() {
          try {
            r = document.domain && new ActiveXObject("htmlfile");
          } catch (e2) {
          }
          m = r ? b(r) : g();
          var t3 = o.length;
          while (t3--)
            delete m[l][o[t3]];
          return m();
        };
        a[h] = true, t2.exports = Object.create || function(t3, e2) {
          var n2;
          return null !== t3 ? (v[l] = d(t3), n2 = new v(), v[l] = null, n2[h] = t3) : n2 = m(), void 0 === e2 ? n2 : i(n2, e2);
        };
      }, "7db0": function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("b727").find, i = n("44d2"), o = n("ae40"), a = "find", u = true, c = o(a);
        a in [] && Array(1)[a](function() {
          u = false;
        }), r({ target: "Array", proto: true, forced: u || !c }, { find: function(t3) {
          return d(this, t3, arguments.length > 1 ? arguments[1] : void 0);
        } }), i(a);
      }, "7dd0": function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("9ed3"), i = n("e163"), o = n("d2bb"), a = n("d44e"), u = n("9112"), c = n("6eeb"), $ = n("b622"), s = n("c430"), f = n("3f8c"), l = n("ae93"), p = l.IteratorPrototype, h = l.BUGGY_SAFARI_ITERATORS, v = $("iterator"), y = "keys", b = "values", g = "entries", m = function() {
          return this;
        };
        t2.exports = function(t3, e2, n2, $2, l2, O, C) {
          d(n2, e2, $2);
          var x, w, S, E = function(t4) {
            if (t4 === l2 && T)
              return T;
            if (!h && t4 in N)
              return N[t4];
            switch (t4) {
              case y:
                return function() {
                  return new n2(this, t4);
                };
              case b:
                return function() {
                  return new n2(this, t4);
                };
              case g:
                return function() {
                  return new n2(this, t4);
                };
            }
            return function() {
              return new n2(this);
            };
          }, P = e2 + " Iterator", I = false, N = t3.prototype, j = N[v] || N["@@iterator"] || l2 && N[l2], T = !h && j || E(l2), A = "Array" == e2 && N.entries || j;
          if (A && (x = i(A.call(new t3())), p !== Object.prototype && x.next && (s || i(x) === p || (o ? o(x, p) : "function" != typeof x[v] && u(x, v, m)), a(x, P, true, true), s && (f[P] = m))), l2 == b && j && j.name !== b && (I = true, T = function() {
            return j.call(this);
          }), s && !C || N[v] === T || u(N, v, T), f[e2] = T, l2)
            if (w = { values: E(b), keys: O ? T : E(y), entries: E(g) }, C)
              for (S in w)
                (h || I || !(S in N)) && c(N, S, w[S]);
            else
              r({ target: e2, proto: true, forced: h || I }, w);
          return w;
        };
      }, "7f9a": function(t2, e, n) {
        var r = n("da84"), d = n("8925"), i = r.WeakMap;
        t2.exports = "function" === typeof i && /native code/.test(d(i));
      }, "821a": function(t2, e, n) {
      }, "825a": function(t2, e, n) {
        var r = n("861d");
        t2.exports = function(t3) {
          if (!r(t3))
            throw TypeError(String(t3) + " is not an object");
          return t3;
        };
      }, "83ab": function(t2, e, n) {
        var r = n("d039");
        t2.exports = !r(function() {
          return 7 != Object.defineProperty({}, 1, { get: function() {
            return 7;
          } })[1];
        });
      }, 8418: function(t2, e, n) {
        "use strict";
        var r = n("c04e"), d = n("9bf2"), i = n("5c6c");
        t2.exports = function(t3, e2, n2) {
          var o = r(e2);
          o in t3 ? d.f(t3, o, i(0, n2)) : t3[o] = n2;
        };
      }, "861d": function(t2, e) {
        t2.exports = function(t3) {
          return "object" === typeof t3 ? null !== t3 : "function" === typeof t3;
        };
      }, 8875: function(t2, e, n) {
        var r, d, i;
        (function(n2, o) {
          d = [], r = o, i = "function" === typeof r ? r.apply(e, d) : r, void 0 === i || (t2.exports = i);
        })("undefined" !== typeof self && self, function() {
          function t3() {
            var e2 = Object.getOwnPropertyDescriptor(document, "currentScript");
            if (!e2 && "currentScript" in document && document.currentScript)
              return document.currentScript;
            if (e2 && e2.get !== t3 && document.currentScript)
              return document.currentScript;
            try {
              throw new Error();
            } catch (l) {
              var n2, r2, d2, i2 = /.*at [^(]*\((.*):(.+):(.+)\)$/gi, o = /@([^@]*):(\d+):(\d+)\s*$/gi, a = i2.exec(l.stack) || o.exec(l.stack), u = a && a[1] || false, c = a && a[2] || false, $ = document.location.href.replace(document.location.hash, ""), s = document.getElementsByTagName("script");
              u === $ && (n2 = document.documentElement.outerHTML, r2 = new RegExp("(?:[^\\n]+?\\n){0," + (c - 2) + "}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*", "i"), d2 = n2.replace(r2, "$1").trim());
              for (var f = 0; f < s.length; f++) {
                if ("interactive" === s[f].readyState)
                  return s[f];
                if (s[f].src === u)
                  return s[f];
                if (u === $ && s[f].innerHTML && s[f].innerHTML.trim() === d2)
                  return s[f];
              }
              return null;
            }
          }
          return t3;
        });
      }, 8925: function(t2, e, n) {
        var r = n("c6cd"), d = Function.toString;
        "function" != typeof r.inspectSource && (r.inspectSource = function(t3) {
          return d.call(t3);
        }), t2.exports = r.inspectSource;
      }, "8aa5": function(t2, e, n) {
        "use strict";
        var r = n("6547").charAt;
        t2.exports = function(t3, e2, n2) {
          return e2 + (n2 ? r(t3, e2).length : 1);
        };
      }, "8bbf": function(e, n) {
        e.exports = t;
      }, "90e3": function(t2, e) {
        var n = 0, r = Math.random();
        t2.exports = function(t3) {
          return "Symbol(" + String(void 0 === t3 ? "" : t3) + ")_" + (++n + r).toString(36);
        };
      }, 9112: function(t2, e, n) {
        var r = n("83ab"), d = n("9bf2"), i = n("5c6c");
        t2.exports = r ? function(t3, e2, n2) {
          return d.f(t3, e2, i(1, n2));
        } : function(t3, e2, n2) {
          return t3[e2] = n2, t3;
        };
      }, 9263: function(t2, e, n) {
        "use strict";
        var r = n("ad6d"), d = n("9f7f"), i = RegExp.prototype.exec, o = String.prototype.replace, a = i, u = function() {
          var t3 = /a/, e2 = /b*/g;
          return i.call(t3, "a"), i.call(e2, "a"), 0 !== t3.lastIndex || 0 !== e2.lastIndex;
        }(), c = d.UNSUPPORTED_Y || d.BROKEN_CARET, $ = void 0 !== /()??/.exec("")[1], s = u || $ || c;
        s && (a = function(t3) {
          var e2, n2, d2, a2, s2 = this, f = c && s2.sticky, l = r.call(s2), p = s2.source, h = 0, v = t3;
          return f && (l = l.replace("y", ""), -1 === l.indexOf("g") && (l += "g"), v = String(t3).slice(s2.lastIndex), s2.lastIndex > 0 && (!s2.multiline || s2.multiline && "\n" !== t3[s2.lastIndex - 1]) && (p = "(?: " + p + ")", v = " " + v, h++), n2 = new RegExp("^(?:" + p + ")", l)), $ && (n2 = new RegExp("^" + p + "$(?!\\s)", l)), u && (e2 = s2.lastIndex), d2 = i.call(f ? n2 : s2, v), f ? d2 ? (d2.input = d2.input.slice(h), d2[0] = d2[0].slice(h), d2.index = s2.lastIndex, s2.lastIndex += d2[0].length) : s2.lastIndex = 0 : u && d2 && (s2.lastIndex = s2.global ? d2.index + d2[0].length : e2), $ && d2 && d2.length > 1 && o.call(d2[0], n2, function() {
            for (a2 = 1; a2 < arguments.length - 2; a2++)
              void 0 === arguments[a2] && (d2[a2] = void 0);
          }), d2;
        }), t2.exports = a;
      }, "94ca": function(t2, e, n) {
        var r = n("d039"), d = /#|\.prototype\./, i = function(t3, e2) {
          var n2 = a[o(t3)];
          return n2 == c || n2 != u && ("function" == typeof e2 ? r(e2) : !!e2);
        }, o = i.normalize = function(t3) {
          return String(t3).replace(d, ".").toLowerCase();
        }, a = i.data = {}, u = i.NATIVE = "N", c = i.POLYFILL = "P";
        t2.exports = i;
      }, "99af": function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("d039"), i = n("e8b5"), o = n("861d"), a = n("7b0b"), u = n("50c4"), c = n("8418"), $ = n("65f0"), s = n("1dde"), f = n("b622"), l = n("2d00"), p = f("isConcatSpreadable"), h = 9007199254740991, v = "Maximum allowed index exceeded", y = l >= 51 || !d(function() {
          var t3 = [];
          return t3[p] = false, t3.concat()[0] !== t3;
        }), b = s("concat"), g = function(t3) {
          if (!o(t3))
            return false;
          var e2 = t3[p];
          return void 0 !== e2 ? !!e2 : i(t3);
        }, m = !y || !b;
        r({ target: "Array", proto: true, forced: m }, { concat: function(t3) {
          var e2, n2, r2, d2, i2, o2 = a(this), s2 = $(o2, 0), f2 = 0;
          for (e2 = -1, r2 = arguments.length; e2 < r2; e2++)
            if (i2 = -1 === e2 ? o2 : arguments[e2], g(i2)) {
              if (d2 = u(i2.length), f2 + d2 > h)
                throw TypeError(v);
              for (n2 = 0; n2 < d2; n2++, f2++)
                n2 in i2 && c(s2, f2, i2[n2]);
            } else {
              if (f2 >= h)
                throw TypeError(v);
              c(s2, f2++, i2);
            }
          return s2.length = f2, s2;
        } });
      }, "9bdd": function(t2, e, n) {
        var r = n("825a"), d = n("2a62");
        t2.exports = function(t3, e2, n2, i) {
          try {
            return i ? e2(r(n2)[0], n2[1]) : e2(n2);
          } catch (o) {
            throw d(t3), o;
          }
        };
      }, "9bf2": function(t2, e, n) {
        var r = n("83ab"), d = n("0cfb"), i = n("825a"), o = n("c04e"), a = Object.defineProperty;
        e.f = r ? a : function(t3, e2, n2) {
          if (i(t3), e2 = o(e2, true), i(n2), d)
            try {
              return a(t3, e2, n2);
            } catch (r2) {
            }
          if ("get" in n2 || "set" in n2)
            throw TypeError("Accessors not supported");
          return "value" in n2 && (t3[e2] = n2.value), t3;
        };
      }, "9ed3": function(t2, e, n) {
        "use strict";
        var r = n("ae93").IteratorPrototype, d = n("7c73"), i = n("5c6c"), o = n("d44e"), a = n("3f8c"), u = function() {
          return this;
        };
        t2.exports = function(t3, e2, n2) {
          var c = e2 + " Iterator";
          return t3.prototype = d(r, { next: i(1, n2) }), o(t3, c, false, true), a[c] = u, t3;
        };
      }, "9f7f": function(t2, e, n) {
        "use strict";
        var r = n("d039");
        function d(t3, e2) {
          return RegExp(t3, e2);
        }
        e.UNSUPPORTED_Y = r(function() {
          var t3 = d("a", "y");
          return t3.lastIndex = 2, null != t3.exec("abcd");
        }), e.BROKEN_CARET = r(function() {
          var t3 = d("^r", "gy");
          return t3.lastIndex = 2, null != t3.exec("str");
        });
      }, a15b: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("44ad"), i = n("fc6a"), o = n("a640"), a = [].join, u = d != Object, c = o("join", ",");
        r({ target: "Array", proto: true, forced: u || !c }, { join: function(t3) {
          return a.call(i(this), void 0 === t3 ? "," : t3);
        } });
      }, a4d3: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("da84"), i = n("d066"), o = n("c430"), a = n("83ab"), u = n("4930"), c = n("fdbf"), $ = n("d039"), s = n("5135"), f = n("e8b5"), l = n("861d"), p = n("825a"), h = n("7b0b"), v = n("fc6a"), y = n("c04e"), b = n("5c6c"), g = n("7c73"), m = n("df75"), O = n("241c"), C = n("057f"), x = n("7418"), w = n("06cf"), S = n("9bf2"), E = n("d1e7"), P = n("9112"), I = n("6eeb"), N = n("5692"), j = n("f772"), T = n("d012"), A = n("90e3"), k = n("b622"), M = n("e538"), R = n("746f"), D = n("d44e"), L = n("69f3"), F = n("b727").forEach, B = j("hidden"), _ = "Symbol", G = "prototype", V = k("toPrimitive"), U = L.set, K = L.getterFor(_), H = Object[G], W = d.Symbol, z = i("JSON", "stringify"), Y = w.f, Z = S.f, q = C.f, J = E.f, X = N("symbols"), Q = N("op-symbols"), tt = N("string-to-symbol-registry"), et = N("symbol-to-string-registry"), nt = N("wks"), rt = d.QObject, dt = !rt || !rt[G] || !rt[G].findChild, it = a && $(function() {
          return 7 != g(Z({}, "a", { get: function() {
            return Z(this, "a", { value: 7 }).a;
          } })).a;
        }) ? function(t3, e2, n2) {
          var r2 = Y(H, e2);
          r2 && delete H[e2], Z(t3, e2, n2), r2 && t3 !== H && Z(H, e2, r2);
        } : Z, ot = function(t3, e2) {
          var n2 = X[t3] = g(W[G]);
          return U(n2, { type: _, tag: t3, description: e2 }), a || (n2.description = e2), n2;
        }, at = c ? function(t3) {
          return "symbol" == typeof t3;
        } : function(t3) {
          return Object(t3) instanceof W;
        }, ut = function(t3, e2, n2) {
          t3 === H && ut(Q, e2, n2), p(t3);
          var r2 = y(e2, true);
          return p(n2), s(X, r2) ? (n2.enumerable ? (s(t3, B) && t3[B][r2] && (t3[B][r2] = false), n2 = g(n2, { enumerable: b(0, false) })) : (s(t3, B) || Z(t3, B, b(1, {})), t3[B][r2] = true), it(t3, r2, n2)) : Z(t3, r2, n2);
        }, ct = function(t3, e2) {
          p(t3);
          var n2 = v(e2), r2 = m(n2).concat(pt(n2));
          return F(r2, function(e3) {
            a && !st.call(n2, e3) || ut(t3, e3, n2[e3]);
          }), t3;
        }, $t = function(t3, e2) {
          return void 0 === e2 ? g(t3) : ct(g(t3), e2);
        }, st = function(t3) {
          var e2 = y(t3, true), n2 = J.call(this, e2);
          return !(this === H && s(X, e2) && !s(Q, e2)) && (!(n2 || !s(this, e2) || !s(X, e2) || s(this, B) && this[B][e2]) || n2);
        }, ft = function(t3, e2) {
          var n2 = v(t3), r2 = y(e2, true);
          if (n2 !== H || !s(X, r2) || s(Q, r2)) {
            var d2 = Y(n2, r2);
            return !d2 || !s(X, r2) || s(n2, B) && n2[B][r2] || (d2.enumerable = true), d2;
          }
        }, lt = function(t3) {
          var e2 = q(v(t3)), n2 = [];
          return F(e2, function(t4) {
            s(X, t4) || s(T, t4) || n2.push(t4);
          }), n2;
        }, pt = function(t3) {
          var e2 = t3 === H, n2 = q(e2 ? Q : v(t3)), r2 = [];
          return F(n2, function(t4) {
            !s(X, t4) || e2 && !s(H, t4) || r2.push(X[t4]);
          }), r2;
        };
        if (u || (W = function() {
          if (this instanceof W)
            throw TypeError("Symbol is not a constructor");
          var t3 = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0, e2 = A(t3), n2 = function(t4) {
            this === H && n2.call(Q, t4), s(this, B) && s(this[B], e2) && (this[B][e2] = false), it(this, e2, b(1, t4));
          };
          return a && dt && it(H, e2, { configurable: true, set: n2 }), ot(e2, t3);
        }, I(W[G], "toString", function() {
          return K(this).tag;
        }), I(W, "withoutSetter", function(t3) {
          return ot(A(t3), t3);
        }), E.f = st, S.f = ut, w.f = ft, O.f = C.f = lt, x.f = pt, M.f = function(t3) {
          return ot(k(t3), t3);
        }, a && (Z(W[G], "description", { configurable: true, get: function() {
          return K(this).description;
        } }), o || I(H, "propertyIsEnumerable", st, { unsafe: true }))), r({ global: true, wrap: true, forced: !u, sham: !u }, { Symbol: W }), F(m(nt), function(t3) {
          R(t3);
        }), r({ target: _, stat: true, forced: !u }, { for: function(t3) {
          var e2 = String(t3);
          if (s(tt, e2))
            return tt[e2];
          var n2 = W(e2);
          return tt[e2] = n2, et[n2] = e2, n2;
        }, keyFor: function(t3) {
          if (!at(t3))
            throw TypeError(t3 + " is not a symbol");
          if (s(et, t3))
            return et[t3];
        }, useSetter: function() {
          dt = true;
        }, useSimple: function() {
          dt = false;
        } }), r({ target: "Object", stat: true, forced: !u, sham: !a }, { create: $t, defineProperty: ut, defineProperties: ct, getOwnPropertyDescriptor: ft }), r({ target: "Object", stat: true, forced: !u }, { getOwnPropertyNames: lt, getOwnPropertySymbols: pt }), r({ target: "Object", stat: true, forced: $(function() {
          x.f(1);
        }) }, { getOwnPropertySymbols: function(t3) {
          return x.f(h(t3));
        } }), z) {
          var ht = !u || $(function() {
            var t3 = W();
            return "[null]" != z([t3]) || "{}" != z({ a: t3 }) || "{}" != z(Object(t3));
          });
          r({ target: "JSON", stat: true, forced: ht }, { stringify: function(t3, e2, n2) {
            var r2, d2 = [t3], i2 = 1;
            while (arguments.length > i2)
              d2.push(arguments[i2++]);
            if (r2 = e2, (l(e2) || void 0 !== t3) && !at(t3))
              return f(e2) || (e2 = function(t4, e3) {
                if ("function" == typeof r2 && (e3 = r2.call(this, t4, e3)), !at(e3))
                  return e3;
              }), d2[1] = e2, z.apply(null, d2);
          } });
        }
        W[G][V] || P(W[G], V, W[G].valueOf), D(W, _), T[B] = true;
      }, a630: function(t2, e, n) {
        var r = n("23e7"), d = n("4df4"), i = n("1c7e"), o = !i(function(t3) {
          Array.from(t3);
        });
        r({ target: "Array", stat: true, forced: o }, { from: d });
      }, a640: function(t2, e, n) {
        "use strict";
        var r = n("d039");
        t2.exports = function(t3, e2) {
          var n2 = [][t3];
          return !!n2 && r(function() {
            n2.call(null, e2 || function() {
              throw 1;
            }, 1);
          });
        };
      }, a691: function(t2, e) {
        var n = Math.ceil, r = Math.floor;
        t2.exports = function(t3) {
          return isNaN(t3 = +t3) ? 0 : (t3 > 0 ? r : n)(t3);
        };
      }, a9e3: function(t2, e, n) {
        "use strict";
        var r = n("83ab"), d = n("da84"), i = n("94ca"), o = n("6eeb"), a = n("5135"), u = n("c6b6"), c = n("7156"), $ = n("c04e"), s = n("d039"), f = n("7c73"), l = n("241c").f, p = n("06cf").f, h = n("9bf2").f, v = n("58a8").trim, y = "Number", b = d[y], g = b.prototype, m = u(f(g)) == y, O = function(t3) {
          var e2, n2, r2, d2, i2, o2, a2, u2, c2 = $(t3, false);
          if ("string" == typeof c2 && c2.length > 2) {
            if (c2 = v(c2), e2 = c2.charCodeAt(0), 43 === e2 || 45 === e2) {
              if (n2 = c2.charCodeAt(2), 88 === n2 || 120 === n2)
                return NaN;
            } else if (48 === e2) {
              switch (c2.charCodeAt(1)) {
                case 66:
                case 98:
                  r2 = 2, d2 = 49;
                  break;
                case 79:
                case 111:
                  r2 = 8, d2 = 55;
                  break;
                default:
                  return +c2;
              }
              for (i2 = c2.slice(2), o2 = i2.length, a2 = 0; a2 < o2; a2++)
                if (u2 = i2.charCodeAt(a2), u2 < 48 || u2 > d2)
                  return NaN;
              return parseInt(i2, r2);
            }
          }
          return +c2;
        };
        if (i(y, !b(" 0o1") || !b("0b1") || b("+0x1"))) {
          for (var C, x = function(t3) {
            var e2 = arguments.length < 1 ? 0 : t3, n2 = this;
            return n2 instanceof x && (m ? s(function() {
              g.valueOf.call(n2);
            }) : u(n2) != y) ? c(new b(O(e2)), n2, x) : O(e2);
          }, w = r ? l(b) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","), S = 0; w.length > S; S++)
            a(b, C = w[S]) && !a(x, C) && h(x, C, p(b, C));
          x.prototype = g, g.constructor = x, o(d, y, x);
        }
      }, ab13: function(t2, e, n) {
        var r = n("b622"), d = r("match");
        t2.exports = function(t3) {
          var e2 = /./;
          try {
            "/./"[t3](e2);
          } catch (n2) {
            try {
              return e2[d] = false, "/./"[t3](e2);
            } catch (r2) {
            }
          }
          return false;
        };
      }, ac1f: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("9263");
        r({ target: "RegExp", proto: true, forced: /./.exec !== d }, { exec: d });
      }, ad6d: function(t2, e, n) {
        "use strict";
        var r = n("825a");
        t2.exports = function() {
          var t3 = r(this), e2 = "";
          return t3.global && (e2 += "g"), t3.ignoreCase && (e2 += "i"), t3.multiline && (e2 += "m"), t3.dotAll && (e2 += "s"), t3.unicode && (e2 += "u"), t3.sticky && (e2 += "y"), e2;
        };
      }, ade3: function(t2, e, n) {
        "use strict";
        function r(t3, e2, n2) {
          return e2 in t3 ? Object.defineProperty(t3, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t3[e2] = n2, t3;
        }
        n.d(e, "a", function() {
          return r;
        });
      }, ae40: function(t2, e, n) {
        var r = n("83ab"), d = n("d039"), i = n("5135"), o = Object.defineProperty, a = {}, u = function(t3) {
          throw t3;
        };
        t2.exports = function(t3, e2) {
          if (i(a, t3))
            return a[t3];
          e2 || (e2 = {});
          var n2 = [][t3], c = !!i(e2, "ACCESSORS") && e2.ACCESSORS, $ = i(e2, 0) ? e2[0] : u, s = i(e2, 1) ? e2[1] : void 0;
          return a[t3] = !!n2 && !d(function() {
            if (c && !r)
              return true;
            var t4 = { length: -1 };
            c ? o(t4, 1, { enumerable: true, get: u }) : t4[1] = 1, n2.call(t4, $, s);
          });
        };
      }, ae93: function(t2, e, n) {
        "use strict";
        var r, d, i, o = n("e163"), a = n("9112"), u = n("5135"), c = n("b622"), $ = n("c430"), s = c("iterator"), f = false, l = function() {
          return this;
        };
        [].keys && (i = [].keys(), "next" in i ? (d = o(o(i)), d !== Object.prototype && (r = d)) : f = true), void 0 == r && (r = {}), $ || u(r, s) || a(r, s, l), t2.exports = { IteratorPrototype: r, BUGGY_SAFARI_ITERATORS: f };
      }, b041: function(t2, e, n) {
        "use strict";
        var r = n("00ee"), d = n("f5df");
        t2.exports = r ? {}.toString : function() {
          return "[object " + d(this) + "]";
        };
      }, b0c0: function(t2, e, n) {
        var r = n("83ab"), d = n("9bf2").f, i = Function.prototype, o = i.toString, a = /^\s*function ([^ (]*)/, u = "name";
        r && !(u in i) && d(i, u, { configurable: true, get: function() {
          try {
            return o.call(this).match(a)[1];
          } catch (t3) {
            return "";
          }
        } });
      }, b575: function(t2, e, n) {
        var r, d, i, o, a, u, c, $, s = n("da84"), f = n("06cf").f, l = n("2cf4").set, p = n("1cdc"), h = n("605d"), v = s.MutationObserver || s.WebKitMutationObserver, y = s.document, b = s.process, g = s.Promise, m = f(s, "queueMicrotask"), O = m && m.value;
        O || (r = function() {
          var t3, e2;
          h && (t3 = b.domain) && t3.exit();
          while (d) {
            e2 = d.fn, d = d.next;
            try {
              e2();
            } catch (n2) {
              throw d ? o() : i = void 0, n2;
            }
          }
          i = void 0, t3 && t3.enter();
        }, !p && !h && v && y ? (a = true, u = y.createTextNode(""), new v(r).observe(u, { characterData: true }), o = function() {
          u.data = a = !a;
        }) : g && g.resolve ? (c = g.resolve(void 0), $ = c.then, o = function() {
          $.call(c, r);
        }) : o = h ? function() {
          b.nextTick(r);
        } : function() {
          l.call(s, r);
        }), t2.exports = O || function(t3) {
          var e2 = { fn: t3, next: void 0 };
          i && (i.next = e2), d || (d = e2, o()), i = e2;
        };
      }, b622: function(t2, e, n) {
        var r = n("da84"), d = n("5692"), i = n("5135"), o = n("90e3"), a = n("4930"), u = n("fdbf"), c = d("wks"), $ = r.Symbol, s = u ? $ : $ && $.withoutSetter || o;
        t2.exports = function(t3) {
          return i(c, t3) || (a && i($, t3) ? c[t3] = $[t3] : c[t3] = s("Symbol." + t3)), c[t3];
        };
      }, b635: function(t2, e, n) {
        "use strict";
        (function(t3) {
          n.d(e, "c", function() {
            return a;
          });
          var r = n("5530"), d = n("15fd"), i = n("025e"), o = n("e348");
          function a(t4) {
            var e2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (!a.installed) {
              a.installed = true;
              var n2 = e2.dropdownOptions, u2 = e2.inputOptions, c2 = Object(d["a"])(e2, ["dropdownOptions", "inputOptions"]), $ = i["b"].dropdownOptions, s = i["b"].inputOptions, f = Object(d["a"])(i["b"], ["dropdownOptions", "inputOptions"]);
              i["a"].options = Object(r["a"])(Object(r["a"])({ inputOptions: Object(r["a"])(Object(r["a"])({}, s), u2), dropdownOptions: Object(r["a"])(Object(r["a"])({}, $), n2) }, f), c2), t4.component("vue-tel-input", o["a"]);
            }
          }
          n.d(e, "a", function() {
            return o["a"];
          });
          var u = { install: a }, c = null;
          "undefined" !== typeof window ? c = window.Vue : "undefined" !== typeof t3 && (c = t3.Vue), c && c.use(u), e["b"] = u;
        }).call(this, n("c8ba"));
      }, b64b: function(t2, e, n) {
        var r = n("23e7"), d = n("7b0b"), i = n("df75"), o = n("d039"), a = o(function() {
          i(1);
        });
        r({ target: "Object", stat: true, forced: a }, { keys: function(t3) {
          return i(d(t3));
        } });
      }, b727: function(t2, e, n) {
        var r = n("0366"), d = n("44ad"), i = n("7b0b"), o = n("50c4"), a = n("65f0"), u = [].push, c = function(t3) {
          var e2 = 1 == t3, n2 = 2 == t3, c2 = 3 == t3, $ = 4 == t3, s = 6 == t3, f = 7 == t3, l = 5 == t3 || s;
          return function(p, h, v, y) {
            for (var b, g, m = i(p), O = d(m), C = r(h, v, 3), x = o(O.length), w = 0, S = y || a, E = e2 ? S(p, x) : n2 || f ? S(p, 0) : void 0; x > w; w++)
              if ((l || w in O) && (b = O[w], g = C(b, w, m), t3))
                if (e2)
                  E[w] = g;
                else if (g)
                  switch (t3) {
                    case 3:
                      return true;
                    case 5:
                      return b;
                    case 6:
                      return w;
                    case 2:
                      u.call(E, b);
                  }
                else
                  switch (t3) {
                    case 4:
                      return false;
                    case 7:
                      u.call(E, b);
                  }
            return s ? -1 : c2 || $ ? $ : E;
          };
        };
        t2.exports = { forEach: c(0), map: c(1), filter: c(2), some: c(3), every: c(4), find: c(5), findIndex: c(6), filterOut: c(7) };
      }, bfe1: function(t2, e, n) {
        "use strict";
        n("821a");
      }, c04e: function(t2, e, n) {
        var r = n("861d");
        t2.exports = function(t3, e2) {
          if (!r(t3))
            return t3;
          var n2, d;
          if (e2 && "function" == typeof (n2 = t3.toString) && !r(d = n2.call(t3)))
            return d;
          if ("function" == typeof (n2 = t3.valueOf) && !r(d = n2.call(t3)))
            return d;
          if (!e2 && "function" == typeof (n2 = t3.toString) && !r(d = n2.call(t3)))
            return d;
          throw TypeError("Can't convert object to primitive value");
        };
      }, c430: function(t2, e) {
        t2.exports = false;
      }, c6b6: function(t2, e) {
        var n = {}.toString;
        t2.exports = function(t3) {
          return n.call(t3).slice(8, -1);
        };
      }, c6cd: function(t2, e, n) {
        var r = n("da84"), d = n("ce4e"), i = "__core-js_shared__", o = r[i] || d(i, {});
        t2.exports = o;
      }, c740: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("b727").findIndex, i = n("44d2"), o = n("ae40"), a = "findIndex", u = true, c = o(a);
        a in [] && Array(1)[a](function() {
          u = false;
        }), r({ target: "Array", proto: true, forced: u || !c }, { findIndex: function(t3) {
          return d(this, t3, arguments.length > 1 ? arguments[1] : void 0);
        } }), i(a);
      }, c8ba: function(t2, e) {
        var n;
        n = function() {
          return this;
        }();
        try {
          n = n || new Function("return this")();
        } catch (r) {
          "object" === typeof window && (n = window);
        }
        t2.exports = n;
      }, c8d2: function(t2, e, n) {
        var r = n("d039"), d = n("5899"), i = "\u200B\x85\u180E";
        t2.exports = function(t3) {
          return r(function() {
            return !!d[t3]() || i[t3]() != i || d[t3].name !== t3;
          });
        };
      }, c975: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("4d64").indexOf, i = n("a640"), o = n("ae40"), a = [].indexOf, u = !!a && 1 / [1].indexOf(1, -0) < 0, c = i("indexOf"), $ = o("indexOf", { ACCESSORS: true, 1: 0 });
        r({ target: "Array", proto: true, forced: u || !c || !$ }, { indexOf: function(t3) {
          return u ? a.apply(this, arguments) || 0 : d(this, t3, arguments.length > 1 ? arguments[1] : void 0);
        } });
      }, ca84: function(t2, e, n) {
        var r = n("5135"), d = n("fc6a"), i = n("4d64").indexOf, o = n("d012");
        t2.exports = function(t3, e2) {
          var n2, a = d(t3), u = 0, c = [];
          for (n2 in a)
            !r(o, n2) && r(a, n2) && c.push(n2);
          while (e2.length > u)
            r(a, n2 = e2[u++]) && (~i(c, n2) || c.push(n2));
          return c;
        };
      }, caad: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("4d64").includes, i = n("44d2"), o = n("ae40"), a = o("indexOf", { ACCESSORS: true, 1: 0 });
        r({ target: "Array", proto: true, forced: !a }, { includes: function(t3) {
          return d(this, t3, arguments.length > 1 ? arguments[1] : void 0);
        } }), i("includes");
      }, cc12: function(t2, e, n) {
        var r = n("da84"), d = n("861d"), i = r.document, o = d(i) && d(i.createElement);
        t2.exports = function(t3) {
          return o ? i.createElement(t3) : {};
        };
      }, cca6: function(t2, e, n) {
        var r = n("23e7"), d = n("60da");
        r({ target: "Object", stat: true, forced: Object.assign !== d }, { assign: d });
      }, cdf9: function(t2, e, n) {
        var r = n("825a"), d = n("861d"), i = n("f069");
        t2.exports = function(t3, e2) {
          if (r(t3), d(e2) && e2.constructor === t3)
            return e2;
          var n2 = i.f(t3), o = n2.resolve;
          return o(e2), n2.promise;
        };
      }, ce4e: function(t2, e, n) {
        var r = n("da84"), d = n("9112");
        t2.exports = function(t3, e2) {
          try {
            d(r, t3, e2);
          } catch (n2) {
            r[t3] = e2;
          }
          return e2;
        };
      }, d012: function(t2, e) {
        t2.exports = {};
      }, d039: function(t2, e) {
        t2.exports = function(t3) {
          try {
            return !!t3();
          } catch (e2) {
            return true;
          }
        };
      }, d066: function(t2, e, n) {
        var r = n("428f"), d = n("da84"), i = function(t3) {
          return "function" == typeof t3 ? t3 : void 0;
        };
        t2.exports = function(t3, e2) {
          return arguments.length < 2 ? i(r[t3]) || i(d[t3]) : r[t3] && r[t3][e2] || d[t3] && d[t3][e2];
        };
      }, d1e7: function(t2, e, n) {
        "use strict";
        var r = {}.propertyIsEnumerable, d = Object.getOwnPropertyDescriptor, i = d && !r.call({ 1: 2 }, 1);
        e.f = i ? function(t3) {
          var e2 = d(this, t3);
          return !!e2 && e2.enumerable;
        } : r;
      }, d28b: function(t2, e, n) {
        var r = n("746f");
        r("iterator");
      }, d2bb: function(t2, e, n) {
        var r = n("825a"), d = n("3bbe");
        t2.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
          var t3, e2 = false, n2 = {};
          try {
            t3 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set, t3.call(n2, []), e2 = n2 instanceof Array;
          } catch (i) {
          }
          return function(n3, i) {
            return r(n3), d(i), e2 ? t3.call(n3, i) : n3.__proto__ = i, n3;
          };
        }() : void 0);
      }, d3b7: function(t2, e, n) {
        var r = n("00ee"), d = n("6eeb"), i = n("b041");
        r || d(Object.prototype, "toString", i, { unsafe: true });
      }, d44e: function(t2, e, n) {
        var r = n("9bf2").f, d = n("5135"), i = n("b622"), o = i("toStringTag");
        t2.exports = function(t3, e2, n2) {
          t3 && !d(t3 = n2 ? t3 : t3.prototype, o) && r(t3, o, { configurable: true, value: e2 });
        };
      }, d58f: function(t2, e, n) {
        var r = n("1c0b"), d = n("7b0b"), i = n("44ad"), o = n("50c4"), a = function(t3) {
          return function(e2, n2, a2, u) {
            r(n2);
            var c = d(e2), $ = i(c), s = o(c.length), f = t3 ? s - 1 : 0, l = t3 ? -1 : 1;
            if (a2 < 2)
              while (1) {
                if (f in $) {
                  u = $[f], f += l;
                  break;
                }
                if (f += l, t3 ? f < 0 : s <= f)
                  throw TypeError("Reduce of empty array with no initial value");
              }
            for (; t3 ? f >= 0 : s > f; f += l)
              f in $ && (u = n2(u, $[f], f, c));
            return u;
          };
        };
        t2.exports = { left: a(false), right: a(true) };
      }, d784: function(t2, e, n) {
        "use strict";
        n("ac1f");
        var r = n("6eeb"), d = n("d039"), i = n("b622"), o = n("9263"), a = n("9112"), u = i("species"), c = !d(function() {
          var t3 = /./;
          return t3.exec = function() {
            var t4 = [];
            return t4.groups = { a: "7" }, t4;
          }, "7" !== "".replace(t3, "$<a>");
        }), $ = function() {
          return "$0" === "a".replace(/./, "$0");
        }(), s = i("replace"), f = function() {
          return !!/./[s] && "" === /./[s]("a", "$0");
        }(), l = !d(function() {
          var t3 = /(?:)/, e2 = t3.exec;
          t3.exec = function() {
            return e2.apply(this, arguments);
          };
          var n2 = "ab".split(t3);
          return 2 !== n2.length || "a" !== n2[0] || "b" !== n2[1];
        });
        t2.exports = function(t3, e2, n2, s2) {
          var p = i(t3), h = !d(function() {
            var e3 = {};
            return e3[p] = function() {
              return 7;
            }, 7 != ""[t3](e3);
          }), v = h && !d(function() {
            var e3 = false, n3 = /a/;
            return "split" === t3 && (n3 = {}, n3.constructor = {}, n3.constructor[u] = function() {
              return n3;
            }, n3.flags = "", n3[p] = /./[p]), n3.exec = function() {
              return e3 = true, null;
            }, n3[p](""), !e3;
          });
          if (!h || !v || "replace" === t3 && (!c || !$ || f) || "split" === t3 && !l) {
            var y = /./[p], b = n2(p, ""[t3], function(t4, e3, n3, r2, d2) {
              return e3.exec === o ? h && !d2 ? { done: true, value: y.call(e3, n3, r2) } : { done: true, value: t4.call(n3, e3, r2) } : { done: false };
            }, { REPLACE_KEEPS_$0: $, REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: f }), g = b[0], m = b[1];
            r(String.prototype, t3, g), r(RegExp.prototype, p, 2 == e2 ? function(t4, e3) {
              return m.call(t4, this, e3);
            } : function(t4) {
              return m.call(t4, this);
            });
          }
          s2 && a(RegExp.prototype[p], "sham", true);
        };
      }, d81d: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("b727").map, i = n("1dde"), o = n("ae40"), a = i("map"), u = o("map");
        r({ target: "Array", proto: true, forced: !a || !u }, { map: function(t3) {
          return d(this, t3, arguments.length > 1 ? arguments[1] : void 0);
        } });
      }, da84: function(t2, e, n) {
        (function(e2) {
          var n2 = function(t3) {
            return t3 && t3.Math == Math && t3;
          };
          t2.exports = n2("object" == typeof globalThis && globalThis) || n2("object" == typeof window && window) || n2("object" == typeof self && self) || n2("object" == typeof e2 && e2) || function() {
            return this;
          }() || Function("return this")();
        }).call(this, n("c8ba"));
      }, dbb4: function(t2, e, n) {
        var r = n("23e7"), d = n("83ab"), i = n("56ef"), o = n("fc6a"), a = n("06cf"), u = n("8418");
        r({ target: "Object", stat: true, sham: !d }, { getOwnPropertyDescriptors: function(t3) {
          var e2, n2, r2 = o(t3), d2 = a.f, c = i(r2), $ = {}, s = 0;
          while (c.length > s)
            n2 = d2(r2, e2 = c[s++]), void 0 !== n2 && u($, e2, n2);
          return $;
        } });
      }, ddb0: function(t2, e, n) {
        var r = n("da84"), d = n("fdbc"), i = n("e260"), o = n("9112"), a = n("b622"), u = a("iterator"), c = a("toStringTag"), $ = i.values;
        for (var s in d) {
          var f = r[s], l = f && f.prototype;
          if (l) {
            if (l[u] !== $)
              try {
                o(l, u, $);
              } catch (h) {
                l[u] = $;
              }
            if (l[c] || o(l, c, s), d[s]) {
              for (var p in i)
                if (l[p] !== i[p])
                  try {
                    o(l, p, i[p]);
                  } catch (h) {
                    l[p] = i[p];
                  }
            }
          }
        }
      }, df75: function(t2, e, n) {
        var r = n("ca84"), d = n("7839");
        t2.exports = Object.keys || function(t3) {
          return r(t3, d);
        };
      }, e01a: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("83ab"), i = n("da84"), o = n("5135"), a = n("861d"), u = n("9bf2").f, c = n("e893"), $ = i.Symbol;
        if (d && "function" == typeof $ && (!("description" in $.prototype) || void 0 !== $().description)) {
          var s = {}, f = function() {
            var t3 = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]), e2 = this instanceof f ? new $(t3) : void 0 === t3 ? $() : $(t3);
            return "" === t3 && (s[e2] = true), e2;
          };
          c(f, $);
          var l = f.prototype = $.prototype;
          l.constructor = f;
          var p = l.toString, h = "Symbol(test)" == String($("test")), v = /^Symbol\((.*)\)[^)]+$/;
          u(l, "description", { configurable: true, get: function() {
            var t3 = a(this) ? this.valueOf() : this, e2 = p.call(t3);
            if (o(s, t3))
              return "";
            var n2 = h ? e2.slice(7, -1) : e2.replace(v, "$1");
            return "" === n2 ? void 0 : n2;
          } }), r({ global: true, forced: true }, { Symbol: f });
        }
      }, e103: function(t2, e, n) {
        "use strict";
        n("f3f2");
      }, e163: function(t2, e, n) {
        var r = n("5135"), d = n("7b0b"), i = n("f772"), o = n("e177"), a = i("IE_PROTO"), u = Object.prototype;
        t2.exports = o ? Object.getPrototypeOf : function(t3) {
          return t3 = d(t3), r(t3, a) ? t3[a] : "function" == typeof t3.constructor && t3 instanceof t3.constructor ? t3.constructor.prototype : t3 instanceof Object ? u : null;
        };
      }, e177: function(t2, e, n) {
        var r = n("d039");
        t2.exports = !r(function() {
          function t3() {
          }
          return t3.prototype.constructor = null, Object.getPrototypeOf(new t3()) !== t3.prototype;
        });
      }, e260: function(t2, e, n) {
        "use strict";
        var r = n("fc6a"), d = n("44d2"), i = n("3f8c"), o = n("69f3"), a = n("7dd0"), u = "Array Iterator", c = o.set, $ = o.getterFor(u);
        t2.exports = a(Array, "Array", function(t3, e2) {
          c(this, { type: u, target: r(t3), index: 0, kind: e2 });
        }, function() {
          var t3 = $(this), e2 = t3.target, n2 = t3.kind, r2 = t3.index++;
          return !e2 || r2 >= e2.length ? (t3.target = void 0, { value: void 0, done: true }) : "keys" == n2 ? { value: r2, done: false } : "values" == n2 ? { value: e2[r2], done: false } : { value: [r2, e2[r2]], done: false };
        }, "values"), i.Arguments = i.Array, d("keys"), d("values"), d("entries");
      }, e2cc: function(t2, e, n) {
        var r = n("6eeb");
        t2.exports = function(t3, e2, n2) {
          for (var d in e2)
            r(t3, d, e2[d], n2);
          return t3;
        };
      }, e348: function(t2, e, n) {
        "use strict";
        n("b0c0");
        var r = n("8bbf"), d = { class: "vti__selection" }, i = { key: 1, class: "vti__country-code" }, o = { class: "vti__dropdown-arrow" }, a = { key: 1 };
        function u(t3, e2, n2, u2, c2, $2) {
          var s2 = Object(r["resolveDirective"])("click-outside");
          return Object(r["openBlock"])(), Object(r["createBlock"])("div", { class: ["vue-tel-input", n2.styleClasses, { disabled: n2.disabled }] }, [Object(r["withDirectives"])(Object(r["createVNode"])("div", { class: ["vti__dropdown", { open: c2.open }], tabindex: n2.dropdownOptions.tabindex, onKeydown: [e2[1] || (e2[1] = function() {
            return $2.keyboardNav && $2.keyboardNav.apply($2, arguments);
          }), e2[3] || (e2[3] = Object(r["withKeys"])(function() {
            return $2.reset && $2.reset.apply($2, arguments);
          }, ["esc"]))], onClick: e2[2] || (e2[2] = function() {
            return $2.toggleDropdown && $2.toggleDropdown.apply($2, arguments);
          }) }, [Object(r["createVNode"])("span", d, [n2.dropdownOptions.showFlags ? (Object(r["openBlock"])(), Object(r["createBlock"])("div", { key: 0, class: ["vti__flag", c2.activeCountryCode.toLowerCase()] }, null, 2)) : Object(r["createCommentVNode"])("", true), n2.dropdownOptions.showDialCodeInSelection ? (Object(r["openBlock"])(), Object(r["createBlock"])("span", i, " +" + Object(r["toDisplayString"])($2.activeCountry && $2.activeCountry.dialCode), 1)) : Object(r["createCommentVNode"])("", true), Object(r["renderSlot"])(t3.$slots, "arrow-icon", { open: c2.open }, function() {
            return [Object(r["createVNode"])("span", o, Object(r["toDisplayString"])(c2.open ? "\u25B2" : "\u25BC"), 1)];
          })]), Object(r["withDirectives"])(Object(r["createVNode"])("ul", { ref: "list", class: ["vti__dropdown-list", c2.dropdownOpenDirection] }, [(Object(r["openBlock"])(true), Object(r["createBlock"])(r["Fragment"], null, Object(r["renderList"])($2.sortedCountries, function(t4, e3) {
            return Object(r["openBlock"])(), Object(r["createBlock"])("li", { class: ["vti__dropdown-item", $2.getItemClass(e3, t4.iso2)], key: t4.iso2 + (t4.preferred ? "-preferred" : ""), onClick: function(e4) {
              return $2.choose(t4);
            }, onMousemove: function(t5) {
              return c2.selectedIndex = e3;
            } }, [n2.dropdownOptions.showFlags ? (Object(r["openBlock"])(), Object(r["createBlock"])("div", { key: 0, class: ["vti__flag", t4.iso2.toLowerCase()] }, null, 2)) : Object(r["createCommentVNode"])("", true), Object(r["createVNode"])("strong", null, Object(r["toDisplayString"])(t4.name), 1), n2.dropdownOptions.showDialCodeInList ? (Object(r["openBlock"])(), Object(r["createBlock"])("span", a, " +" + Object(r["toDisplayString"])(t4.dialCode), 1)) : Object(r["createCommentVNode"])("", true)], 42, ["onClick", "onMousemove"]);
          }), 128))], 2), [[r["vShow"], c2.open]])], 42, ["tabindex"]), [[s2, $2.clickedOutside]]), Object(r["withDirectives"])(Object(r["createVNode"])("input", { "onUpdate:modelValue": e2[4] || (e2[4] = function(t4) {
            return c2.phone = t4;
          }), ref: "input", type: n2.inputOptions.type, autocomplete: n2.inputOptions.autocomplete, autofocus: n2.inputOptions.autofocus, class: ["vti__input", n2.inputOptions.styleClasses], disabled: n2.disabled, id: n2.inputOptions.id, maxlength: n2.inputOptions.maxlength, name: n2.inputOptions.name, placeholder: c2.parsedPlaceholder, readonly: n2.inputOptions.readonly, required: n2.inputOptions.required, tabindex: n2.inputOptions.tabindex, onBlur: e2[5] || (e2[5] = function() {
            return $2.onBlur && $2.onBlur.apply($2, arguments);
          }), onFocus: e2[6] || (e2[6] = function() {
            return $2.onFocus && $2.onFocus.apply($2, arguments);
          }), onInput: e2[7] || (e2[7] = function() {
            return $2.onInput && $2.onInput.apply($2, arguments);
          }), onKeyup: [e2[8] || (e2[8] = Object(r["withKeys"])(function() {
            return $2.onEnter && $2.onEnter.apply($2, arguments);
          }, ["enter"])), e2[9] || (e2[9] = Object(r["withKeys"])(function() {
            return $2.onSpace && $2.onSpace.apply($2, arguments);
          }, ["space"]))] }, null, 42, ["type", "autocomplete", "autofocus", "disabled", "id", "maxlength", "name", "placeholder", "readonly", "required", "tabindex"]), [[r["vModelDynamic"], c2.phone]])], 2);
        }
        n("99af"), n("4de4"), n("7db0"), n("c740"), n("caad"), n("c975"), n("a15b"), n("d81d"), n("fb6a"), n("45fc"), n("cca6"), n("d3b7"), n("e6cf"), n("4d63"), n("ac1f"), n("25f0"), n("2532"), n("466d"), n("2ca0"), n("498a");
        var c = n("15fd"), $ = n("6b75");
        function s(t3) {
          if (Array.isArray(t3))
            return Object($["a"])(t3);
        }
        n("a4d3"), n("e01a"), n("d28b"), n("a630"), n("e260"), n("3ca3"), n("ddb0");
        function f(t3) {
          if ("undefined" !== typeof Symbol && Symbol.iterator in Object(t3))
            return Array.from(t3);
        }
        var l = n("06c5");
        function p() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function h(t3) {
          return s(t3) || f(t3) || Object(l["a"])(t3) || p();
        }
        var v = n("5530"), y = { version: 4, country_calling_codes: { 1: ["US", "AG", "AI", "AS", "BB", "BM", "BS", "CA", "DM", "DO", "GD", "GU", "JM", "KN", "KY", "LC", "MP", "MS", "PR", "SX", "TC", "TT", "VC", "VG", "VI"], 7: ["RU", "KZ"], 20: ["EG"], 27: ["ZA"], 30: ["GR"], 31: ["NL"], 32: ["BE"], 33: ["FR"], 34: ["ES"], 36: ["HU"], 39: ["IT", "VA"], 40: ["RO"], 41: ["CH"], 43: ["AT"], 44: ["GB", "GG", "IM", "JE"], 45: ["DK"], 46: ["SE"], 47: ["NO", "SJ"], 48: ["PL"], 49: ["DE"], 51: ["PE"], 52: ["MX"], 53: ["CU"], 54: ["AR"], 55: ["BR"], 56: ["CL"], 57: ["CO"], 58: ["VE"], 60: ["MY"], 61: ["AU", "CC", "CX"], 62: ["ID"], 63: ["PH"], 64: ["NZ"], 65: ["SG"], 66: ["TH"], 81: ["JP"], 82: ["KR"], 84: ["VN"], 86: ["CN"], 90: ["TR"], 91: ["IN"], 92: ["PK"], 93: ["AF"], 94: ["LK"], 95: ["MM"], 98: ["IR"], 211: ["SS"], 212: ["MA", "EH"], 213: ["DZ"], 216: ["TN"], 218: ["LY"], 220: ["GM"], 221: ["SN"], 222: ["MR"], 223: ["ML"], 224: ["GN"], 225: ["CI"], 226: ["BF"], 227: ["NE"], 228: ["TG"], 229: ["BJ"], 230: ["MU"], 231: ["LR"], 232: ["SL"], 233: ["GH"], 234: ["NG"], 235: ["TD"], 236: ["CF"], 237: ["CM"], 238: ["CV"], 239: ["ST"], 240: ["GQ"], 241: ["GA"], 242: ["CG"], 243: ["CD"], 244: ["AO"], 245: ["GW"], 246: ["IO"], 247: ["AC"], 248: ["SC"], 249: ["SD"], 250: ["RW"], 251: ["ET"], 252: ["SO"], 253: ["DJ"], 254: ["KE"], 255: ["TZ"], 256: ["UG"], 257: ["BI"], 258: ["MZ"], 260: ["ZM"], 261: ["MG"], 262: ["RE", "YT"], 263: ["ZW"], 264: ["NA"], 265: ["MW"], 266: ["LS"], 267: ["BW"], 268: ["SZ"], 269: ["KM"], 290: ["SH", "TA"], 291: ["ER"], 297: ["AW"], 298: ["FO"], 299: ["GL"], 350: ["GI"], 351: ["PT"], 352: ["LU"], 353: ["IE"], 354: ["IS"], 355: ["AL"], 356: ["MT"], 357: ["CY"], 358: ["FI", "AX"], 359: ["BG"], 370: ["LT"], 371: ["LV"], 372: ["EE"], 373: ["MD"], 374: ["AM"], 375: ["BY"], 376: ["AD"], 377: ["MC"], 378: ["SM"], 380: ["UA"], 381: ["RS"], 382: ["ME"], 383: ["XK"], 385: ["HR"], 386: ["SI"], 387: ["BA"], 389: ["MK"], 420: ["CZ"], 421: ["SK"], 423: ["LI"], 500: ["FK"], 501: ["BZ"], 502: ["GT"], 503: ["SV"], 504: ["HN"], 505: ["NI"], 506: ["CR"], 507: ["PA"], 508: ["PM"], 509: ["HT"], 590: ["GP", "BL", "MF"], 591: ["BO"], 592: ["GY"], 593: ["EC"], 594: ["GF"], 595: ["PY"], 596: ["MQ"], 597: ["SR"], 598: ["UY"], 599: ["CW", "BQ"], 670: ["TL"], 672: ["NF"], 673: ["BN"], 674: ["NR"], 675: ["PG"], 676: ["TO"], 677: ["SB"], 678: ["VU"], 679: ["FJ"], 680: ["PW"], 681: ["WF"], 682: ["CK"], 683: ["NU"], 685: ["WS"], 686: ["KI"], 687: ["NC"], 688: ["TV"], 689: ["PF"], 690: ["TK"], 691: ["FM"], 692: ["MH"], 850: ["KP"], 852: ["HK"], 853: ["MO"], 855: ["KH"], 856: ["LA"], 880: ["BD"], 886: ["TW"], 960: ["MV"], 961: ["LB"], 962: ["JO"], 963: ["SY"], 964: ["IQ"], 965: ["KW"], 966: ["SA"], 967: ["YE"], 968: ["OM"], 970: ["PS"], 971: ["AE"], 972: ["IL"], 973: ["BH"], 974: ["QA"], 975: ["BT"], 976: ["MN"], 977: ["NP"], 992: ["TJ"], 993: ["TM"], 994: ["AZ"], 995: ["GE"], 996: ["KG"], 998: ["UZ"] }, countries: { AC: ["247", "00", "(?:[01589]\\d|[46])\\d{4}", [5, 6]], AD: ["376", "00", "(?:1|6\\d)\\d{7}|[135-9]\\d{5}", [6, 8, 9], [["(\\d{3})(\\d{3})", "$1 $2", ["[135-9]"]], ["(\\d{4})(\\d{4})", "$1 $2", ["1"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]]], AE: ["971", "00", "(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}", [5, 6, 7, 8, 9, 10, 11, 12], [["(\\d{3})(\\d{2,9})", "$1 $2", ["60|8"]], ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[236]|[479][2-8]"], "0$1"], ["(\\d{3})(\\d)(\\d{5})", "$1 $2 $3", ["[479]"]], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"]], "0"], AF: ["93", "00", "[2-7]\\d{8}", [9], [["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]], "0"], AG: ["1", "011", "(?:268|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([457]\\d{6})$", "268$1", 0, "268"], AI: ["1", "011", "(?:264|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2457]\\d{6})$", "264$1", 0, "264"], AL: ["355", "00", "(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}", [6, 7, 8, 9], [["(\\d{3})(\\d{3,4})", "$1 $2", ["80|9"], "0$1"], ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["4[2-6]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2358][2-5]|4"], "0$1"], ["(\\d{3})(\\d{5})", "$1 $2", ["[23578]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["6"], "0$1"]], "0"], AM: ["374", "00", "(?:[1-489]\\d|55|60|77)\\d{6}", [8], [["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[89]0"], "0 $1"], ["(\\d{3})(\\d{5})", "$1 $2", ["2|3[12]"], "(0$1)"], ["(\\d{2})(\\d{6})", "$1 $2", ["1|47"], "(0$1)"], ["(\\d{2})(\\d{6})", "$1 $2", ["[3-9]"], "0$1"]], "0"], AO: ["244", "00", "[29]\\d{8}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[29]"]]]], AR: ["54", "00", "11\\d{8}|(?:[2368]|9\\d)\\d{9}", [10, 11], [["(\\d{4})(\\d{2})(\\d{4})", "$1 $2-$3", ["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])", "2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1", 1], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["1"], "0$1", 1], ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1", 1], ["(\\d)(\\d{4})(\\d{2})(\\d{4})", "$2 15-$3-$4", ["9(?:2[2-469]|3[3-578])", "9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))", "9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1", 0, "$1 $2 $3-$4"], ["(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 15-$3-$4", ["91"], "0$1", 0, "$1 $2 $3-$4"], ["(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 15-$3-$4", ["9"], "0$1", 0, "$1 $2 $3-$4"]], "0", 0, "0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?", "9$1"], AS: ["1", "011", "(?:[58]\\d\\d|684|900)\\d{7}", [10], 0, "1", 0, "1|([267]\\d{6})$", "684$1", 0, "684"], AT: ["43", "00", "1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [["(\\d)(\\d{3,12})", "$1 $2", ["1(?:11|[2-9])"], "0$1"], ["(\\d{3})(\\d{2})", "$1 $2", ["517"], "0$1"], ["(\\d{2})(\\d{3,5})", "$1 $2", ["5[079]"], "0$1"], ["(\\d{3})(\\d{3,10})", "$1 $2", ["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"], "0$1"], ["(\\d{4})(\\d{3,9})", "$1 $2", ["[2-467]|5[2-6]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["5"], "0$1"], ["(\\d{2})(\\d{4})(\\d{4,7})", "$1 $2 $3", ["5"], "0$1"]], "0"], AU: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d{7,8}|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}", [5, 6, 7, 8, 9, 10], [["(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|4"], "0$1"], ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)"], ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]]], "0", 0, "0|(183[12])", 0, 0, 0, [["8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-7]|3[2-4]|[4-6]\\d))|91(?:[0-57-9]\\d|6[0135-9])\\d)\\d{3}|(?:2(?:[0-26-9]\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\d|2[0-8])|8(?:6[0-8]|[78]\\d|9[02-9]))\\d{6}", [9]], ["4(?:83[0-38]|93[0-4])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}", [9]], ["180(?:0\\d{3}|2)\\d{3}", [7, 10]], ["190[0-26]\\d{6}", [10]], 0, 0, 0, ["163\\d{2,6}", [5, 6, 7, 8, 9]], ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]], ["13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}", [6, 8, 10]]], "0011"], AW: ["297", "00", "(?:[25-79]\\d\\d|800)\\d{4}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["[25-9]"]]]], AX: ["358", "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}", [5, 6, 7, 8, 9, 10, 11, 12], 0, "0", 0, 0, 0, 0, "18", 0, "00"], AZ: ["994", "00", "365\\d{6}|(?:[124579]\\d|60|88)\\d{7}", [9], [["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["90"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[28]|2|365|46", "1[28]|2|365|46", "1[28]|2|365(?:[0-46-9]|5[0-35-9])|46"], "(0$1)"], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-9]"], "0$1"]], "0"], BA: ["387", "00", "6\\d{8}|(?:[35689]\\d|49|70)\\d{6}", [8, 9], [["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-3]|[7-9]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]|6[56]"], "0$1"], ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]], "0"], BB: ["1", "011", "(?:246|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "246$1", 0, "246"], BD: ["880", "00", "1\\d{9}|2\\d{7,8}|88\\d{4,6}|(?:8[0-79]|9\\d)\\d{4,8}|(?:[346]\\d|[57])\\d{5,8}", [6, 7, 8, 9, 10], [["(\\d{2})(\\d{4,6})", "$1-$2", ["31[5-8]|[459]1"], "0$1"], ["(\\d{3})(\\d{3,7})", "$1-$2", ["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"], "0$1"], ["(\\d{4})(\\d{3,6})", "$1-$2", ["[13-9]"], "0$1"], ["(\\d)(\\d{7,8})", "$1-$2", ["2"], "0$1"]], "0"], BE: ["32", "00", "4\\d{8}|[1-9]\\d{7}", [8, 9], [["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:80|9)0"], "0$1"], ["(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[239]|4[23]"], "0$1"], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[15-8]"], "0$1"], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4"], "0$1"]], "0"], BF: ["226", "00", "[025-7]\\d{7}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[025-7]"]]]], BG: ["359", "00", "[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}", [6, 7, 8, 9], [["(\\d)(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["2"], "0$1"], ["(\\d{3})(\\d{4})", "$1 $2", ["43[1-6]|70[1-9]"], "0$1"], ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"], "0$1"], ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:70|8)0"], "0$1"], ["(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["43[1-7]|7"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[48]|9[08]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]], "0"], BH: ["973", "00", "[136-9]\\d{7}", [8], [["(\\d{4})(\\d{4})", "$1 $2", ["[13679]|8[047]"]]]], BI: ["257", "00", "(?:[267]\\d|31)\\d{6}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2367]"]]]], BJ: ["229", "00", "(?:[2689]\\d|51)\\d{6}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[25689]"]]]], BL: ["590", "00", "(?:590|69\\d|976)\\d{6}", [9], 0, "0", 0, 0, 0, 0, 0, [["590(?:2[7-9]|5[12]|87)\\d{4}"], ["69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}"], 0, 0, 0, 0, 0, 0, ["976[01]\\d{5}"]]], BM: ["1", "011", "(?:441|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-8]\\d{6})$", "441$1", 0, "441"], BN: ["673", "00", "[2-578]\\d{6}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["[2-578]"]]]], BO: ["591", "00(?:1\\d)?", "(?:[2-467]\\d\\d|8001)\\d{5}", [8, 9], [["(\\d)(\\d{7})", "$1 $2", ["[23]|4[46]"]], ["(\\d{8})", "$1", ["[67]"]], ["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["8"]]], "0", 0, "0(1\\d)?"], BQ: ["599", "00", "(?:[34]1|7\\d)\\d{5}", [7], 0, 0, 0, 0, 0, 0, "[347]"], BR: ["55", "00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)", "(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-24679]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}", [8, 9, 10, 11], [["(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "4(?:02|37)0|[34]00"]], ["(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["(?:[358]|90)0"], "0$1"], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"], "($1)"], ["(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[16][1-9]|[2-57-9]"], "($1)"]], "0", 0, "(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?", "$2"], BS: ["1", "011", "(?:242|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([3-8]\\d{6})$", "242$1", 0, "242"], BT: ["975", "00", "[17]\\d{7}|[2-8]\\d{6}", [7, 8], [["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-68]|7[246]"]], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[67]|7"]]]], BW: ["267", "00", "90\\d{5}|(?:0800|[2-6]|7\\d)\\d{6}", [7, 8, 10], [["(\\d{2})(\\d{5})", "$1 $2", ["90"]], ["(\\d{3})(\\d{4})", "$1 $2", ["[2-6]"]], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"]], ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["0"]]]], BY: ["375", "810", "(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}", [6, 7, 8, 9, 10, 11], [["(\\d{3})(\\d{3})", "$1 $2", ["800"], "8 $1"], ["(\\d{3})(\\d{2})(\\d{2,4})", "$1 $2 $3", ["800"], "8 $1"], ["(\\d{4})(\\d{2})(\\d{3})", "$1 $2-$3", ["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])", "1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"], "8 0$1"], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["1(?:[56]|7[467])|2[1-3]"], "8 0$1"], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-4]"], "8 0$1"], ["(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[89]"], "8 $1"]], "8", 0, "0|80?", 0, 0, 0, 0, "8~10"], BZ: ["501", "00", "(?:0800\\d|[2-8])\\d{6}", [7, 11], [["(\\d{3})(\\d{4})", "$1-$2", ["[2-8]"]], ["(\\d)(\\d{3})(\\d{4})(\\d{3})", "$1-$2-$3-$4", ["0"]]]], CA: ["1", "011", "(?:[2-8]\\d|90)\\d{8}", [10], 0, "1", 0, 0, 0, 0, 0, [["(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|6[57])|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47|72)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}"], [""], ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"], ["900[2-9]\\d{6}"], ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:00|2[12]|33|44|66|77|88)|622)[2-9]\\d{6}"], 0, 0, 0, ["600[2-9]\\d{6}"]]], CC: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d|8[0-24-9])\\d{7}|[148]\\d{8}|1\\d{5,7}", [6, 7, 8, 9, 10], 0, "0", 0, "0|([59]\\d{7})$", "8$1", 0, 0, [["8(?:51(?:0(?:02|31|60|89)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}", [9]], ["4(?:83[0-38]|93[0-4])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}", [9]], ["180(?:0\\d{3}|2)\\d{3}", [7, 10]], ["190[0-26]\\d{6}", [10]], 0, 0, 0, 0, ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]], ["13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}", [6, 8, 10]]], "0011"], CD: ["243", "00", "[189]\\d{8}|[1-68]\\d{6}", [7, 9], [["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["88"], "0$1"], ["(\\d{2})(\\d{5})", "$1 $2", ["[1-6]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]"], "0$1"]], "0"], CF: ["236", "00", "(?:[27]\\d{3}|8776)\\d{4}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[278]"]]]], CG: ["242", "00", "222\\d{6}|(?:0\\d|80)\\d{7}", [9], [["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["801"]], ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["8"]], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[02]"]]]], CH: ["41", "00", "8\\d{11}|[2-9]\\d{8}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8[047]|90"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-79]|81"], "0$1"], ["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["8"], "0$1"]], "0"], CI: ["225", "00", "[02-9]\\d{7}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[02-9]"]]]], CK: ["682", "00", "[2-578]\\d{4}", [5], [["(\\d{2})(\\d{3})", "$1 $2", ["[2-578]"]]]], CL: ["56", "(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0", "12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}", [9, 10, 11], [["(\\d{5})(\\d{4})", "$1 $2", ["219", "2196"], "($1)"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]], ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2[1-3]"], "($1)"], ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"], "($1)"], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["60|8"]], ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]], ["(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["60"]]]], CM: ["237", "00", "(?:[26]\\d\\d|88)\\d{6}", [8, 9], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["88"]], ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]"]]]], CN: ["86", "00|1(?:[12]\\d|79)\\d\\d00", "1[127]\\d{8,9}|2\\d{9}(?:\\d{2})?|[12]\\d{6,7}|86\\d{6}|(?:1[03-689]\\d|6)\\d{7,9}|(?:[3-579]\\d|8[0-57-9])\\d{6,9}", [7, 8, 9, 10, 11, 12], [["(\\d{2})(\\d{5,6})", "$1 $2", ["(?:10|2[0-57-9])[19]", "(?:10|2[0-57-9])(?:10|9[56])", "(?:10|2[0-57-9])(?:100|9[56])"], "0$1"], ["(\\d{3})(\\d{5,6})", "$1 $2", ["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]", "(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]", "85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])", "85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["(?:4|80)0"]], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10|2(?:[02-57-9]|1[1-9])", "10|2(?:[02-57-9]|1[1-9])", "10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"], "0$1", 1], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"], "0$1", 1], ["(\\d{3})(\\d{7,8})", "$1 $2", ["9"]], ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["80"], "0$1", 1], ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[3-578]"], "0$1", 1], ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1[3-9]"]], ["(\\d{2})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["[12]"], "0$1", 1]], "0", 0, "0|(1(?:[12]\\d|79)\\d\\d)", 0, 0, 0, 0, "00"], CO: ["57", "00(?:4(?:[14]4|56)|[579])", "(?:1\\d|3)\\d{9}|[124-8]\\d{7}", [8, 10, 11], [["(\\d)(\\d{7})", "$1 $2", ["[14][2-9]|[25-8]"], "($1)"], ["(\\d{3})(\\d{7})", "$1 $2", ["3"]], ["(\\d)(\\d{3})(\\d{7})", "$1-$2-$3", ["1"], "0$1", 0, "$1 $2 $3"]], "0", 0, "0([3579]|4(?:[14]4|56))?"], CR: ["506", "00", "(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}", [8, 10], [["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[3-9]"]], ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[89]"]]], 0, 0, "(19(?:0[0-2468]|1[09]|20|66|77|99))"], CU: ["53", "119", "[27]\\d{6,7}|[34]\\d{5,7}|(?:5|8\\d\\d)\\d{7}", [6, 7, 8, 10], [["(\\d{2})(\\d{4,6})", "$1 $2", ["2[1-4]|[34]"], "(0$1)"], ["(\\d)(\\d{6,7})", "$1 $2", ["7"], "(0$1)"], ["(\\d)(\\d{7})", "$1 $2", ["5"], "0$1"], ["(\\d{3})(\\d{7})", "$1 $2", ["8"], "0$1"]], "0"], CV: ["238", "0", "(?:[2-59]\\d\\d|800)\\d{4}", [7], [["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[2-589]"]]]], CW: ["599", "00", "(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}", [7, 8], [["(\\d{3})(\\d{4})", "$1 $2", ["[3467]"]], ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["9[4-8]"]]], 0, 0, 0, 0, 0, "[69]"], CX: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d|8[0-24-9])\\d{7}|[148]\\d{8}|1\\d{5,7}", [6, 7, 8, 9, 10], 0, "0", 0, "0|([59]\\d{7})$", "8$1", 0, 0, [["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|235)|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}", [9]], ["4(?:83[0-38]|93[0-4])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[06-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}", [9]], ["180(?:0\\d{3}|2)\\d{3}", [7, 10]], ["190[0-26]\\d{6}", [10]], 0, 0, 0, 0, ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]], ["13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}", [6, 8, 10]]], "0011"], CY: ["357", "00", "(?:[279]\\d|[58]0)\\d{6}", [8], [["(\\d{2})(\\d{6})", "$1 $2", ["[257-9]"]]]], CZ: ["420", "00", "(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]|9[015-7]"]], ["(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]], ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]]], DE: ["49", "00", "[2579]\\d{5,14}|49(?:[05]\\d{10}|[46][1-8]\\d{4,9})|49(?:[0-25]\\d|3[1-689]|7[1-7])\\d{4,8}|49(?:[0-2579]\\d|[34][1-9]|6[0-8])\\d{3}|49\\d{3,4}|(?:1|[368]\\d|4[0-8])\\d{3,13}", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [["(\\d{2})(\\d{3,13})", "$1 $2", ["3[02]|40|[68]9"], "0$1"], ["(\\d{3})(\\d{3,12})", "$1 $2", ["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1", "2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"], "0$1"], ["(\\d{4})(\\d{2,11})", "$1 $2", ["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]", "[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"], "0$1"], ["(\\d{3})(\\d{4})", "$1 $2", ["138"], "0$1"], ["(\\d{5})(\\d{2,10})", "$1 $2", ["3"], "0$1"], ["(\\d{3})(\\d{5,11})", "$1 $2", ["181"], "0$1"], ["(\\d{3})(\\d)(\\d{4,10})", "$1 $2 $3", ["1(?:3|80)|9"], "0$1"], ["(\\d{3})(\\d{7,8})", "$1 $2", ["1[67]"], "0$1"], ["(\\d{3})(\\d{7,12})", "$1 $2", ["8"], "0$1"], ["(\\d{5})(\\d{6})", "$1 $2", ["185", "1850", "18500"], "0$1"], ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"], ["(\\d{4})(\\d{7})", "$1 $2", ["18[68]"], "0$1"], ["(\\d{5})(\\d{6})", "$1 $2", ["15[0568]"], "0$1"], ["(\\d{4})(\\d{7})", "$1 $2", ["15[1279]"], "0$1"], ["(\\d{3})(\\d{8})", "$1 $2", ["18"], "0$1"], ["(\\d{3})(\\d{2})(\\d{7,8})", "$1 $2 $3", ["1(?:6[023]|7)"], "0$1"], ["(\\d{4})(\\d{2})(\\d{7})", "$1 $2 $3", ["15[279]"], "0$1"], ["(\\d{3})(\\d{2})(\\d{8})", "$1 $2 $3", ["15"], "0$1"]], "0"], DJ: ["253", "00", "(?:2\\d|77)\\d{6}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[27]"]]]], DK: ["45", "00", "[2-9]\\d{7}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-9]"]]]], DM: ["1", "011", "(?:[58]\\d\\d|767|900)\\d{7}", [10], 0, "1", 0, "1|([2-7]\\d{6})$", "767$1", 0, "767"], DO: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "8[024]9"], DZ: ["213", "00", "(?:[1-4]|[5-79]\\d|80)\\d{7}", [8, 9], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-4]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["9"], "0$1"], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-8]"], "0$1"]], "0"], EC: ["593", "00", "1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}", [8, 9, 10, 11], [["(\\d)(\\d{3})(\\d{4})", "$1 $2-$3", ["[2-7]"], "(0$1)", 0, "$1-$2-$3"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"], ["(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]], "0"], EE: ["372", "00", "8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}", [7, 8, 10], [["(\\d{3})(\\d{4})", "$1 $2", ["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88", "[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]], ["(\\d{4})(\\d{3,4})", "$1 $2", ["[45]|8(?:00|[1-49])", "[45]|8(?:00[1-9]|[1-49])"]], ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["7"]], ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]]], EG: ["20", "00", "[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}", [8, 9, 10], [["(\\d)(\\d{7,8})", "$1 $2", ["[23]"], "0$1"], ["(\\d{2})(\\d{6,7})", "$1 $2", ["1[35]|[4-6]|8[2468]|9[235-7]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[189]"], "0$1"]], "0"], EH: ["212", "00", "[5-8]\\d{8}", [9], 0, "0", 0, 0, 0, 0, "528[89]"], ER: ["291", "00", "[178]\\d{6}", [7], [["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[178]"], "0$1"]], "0"], ES: ["34", "00", "[5-9]\\d{8}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]00"]], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-9]"]]]], ET: ["251", "00", "(?:11|[2-59]\\d)\\d{7}", [9], [["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-59]"], "0$1"]], "0"], FI: ["358", "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}", [5, 6, 7, 8, 9, 10, 11, 12], [["(\\d)(\\d{4,9})", "$1 $2", ["[2568][1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"], ["(\\d{3})(\\d{3,7})", "$1 $2", ["[12]00|[368]|70[07-9]"], "0$1"], ["(\\d{2})(\\d{4,8})", "$1 $2", ["[1245]|7[135]"], "0$1"], ["(\\d{2})(\\d{6,10})", "$1 $2", ["7"], "0$1"]], "0", 0, 0, 0, 0, "1[03-79]|[2-9]", 0, "00"], FJ: ["679", "0(?:0|52)", "45\\d{5}|(?:0800\\d|[235-9])\\d{6}", [7, 11], [["(\\d{3})(\\d{4})", "$1 $2", ["[235-9]|45"]], ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]]], 0, 0, 0, 0, 0, 0, 0, "00"], FK: ["500", "00", "[2-7]\\d{4}", [5]], FM: ["691", "00", "(?:[39]\\d\\d|820)\\d{4}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["[389]"]]]], FO: ["298", "00", "[2-9]\\d{5}", [6], [["(\\d{6})", "$1", ["[2-9]"]]], 0, 0, "(10(?:01|[12]0|88))"], FR: ["33", "00", "[1-9]\\d{8}", [9], [["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"], ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"]], "0"], GA: ["241", "00", "(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}", [7, 8], [["(\\d)(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-7]"], "0$1"], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["11|[67]"], "0$1"], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]]], 0, 0, "0(11\\d{6}|6[256]\\d{6}|7[47]\\d{6})", "$1"], GB: ["44", "00", "[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}", [7, 9, 10], [["(\\d{3})(\\d{4})", "$1 $2", ["800", "8001", "80011", "800111", "8001111"], "0$1"], ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["845", "8454", "84546", "845464"], "0$1"], ["(\\d{3})(\\d{6})", "$1 $2", ["800"], "0$1"], ["(\\d{5})(\\d{4,5})", "$1 $2", ["1(?:38|5[23]|69|76|94)", "1(?:(?:38|69)7|5(?:24|39)|768|946)", "1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"], "0$1"], ["(\\d{4})(\\d{5,6})", "$1 $2", ["1(?:[2-69][02-9]|[78])"], "0$1"], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[25]|7(?:0|6[02-9])", "[25]|7(?:0|6(?:[03-9]|2[356]))"], "0$1"], ["(\\d{4})(\\d{6})", "$1 $2", ["7"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1389]"], "0$1"]], "0", 0, 0, 0, 0, 0, [["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[03])|(?:4[0-5]|5[0-26-9]|6[0-4]|[78][0-49])\\d\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d|1(?:[0-7]\\d|8[02]))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d)\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}", [9, 10]], ["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}", [10]], ["80[08]\\d{7}|800\\d{6}|8001111"], ["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d", [7, 10]], ["70\\d{8}", [10]], 0, ["(?:3[0347]|55)\\d{8}", [10]], ["76(?:464|652)\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|81|9[139])\\d{6}", [10]], ["56\\d{8}", [10]]], 0, " x"], GD: ["1", "011", "(?:473|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "473$1", 0, "473"], GE: ["995", "00", "(?:[3-57]\\d\\d|800)\\d{6}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["32"], "0$1"], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[57]"]], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[348]"], "0$1"]], "0"], GF: ["594", "00", "(?:[56]94|976)\\d{6}", [9], [["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"]], "0"], GG: ["44", "00", "(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?", [7, 9, 10], 0, "0", 0, "0|([25-9]\\d{5})$", "1481$1", 0, 0, [["1481[25-9]\\d{5}", [10]], ["7(?:(?:781|839)\\d|911[17])\\d{5}", [10]], ["80[08]\\d{7}|800\\d{6}|8001111"], ["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d", [7, 10]], ["70\\d{8}", [10]], 0, ["(?:3[0347]|55)\\d{8}", [10]], ["76(?:464|652)\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|81|9[139])\\d{6}", [10]], ["56\\d{8}", [10]]]], GH: ["233", "00", "(?:[235]\\d{3}|800)\\d{5}", [8, 9], [["(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]], "0"], GI: ["350", "00", "[256]\\d{7}", [8], [["(\\d{3})(\\d{5})", "$1 $2", ["2"]]]], GL: ["299", "00", "(?:19|[2-689]\\d)\\d{4}", [6], [["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["19|[2-689]"]]]], GM: ["220", "00", "[2-9]\\d{6}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]]], GN: ["224", "00", "722\\d{6}|(?:3|6\\d)\\d{7}", [8, 9], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["3"]], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[67]"]]]], GP: ["590", "00", "(?:590|69\\d|976)\\d{6}", [9], [["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"]], "0", 0, 0, 0, 0, 0, [["590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\d)\\d{4}"], ["69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}"], 0, 0, 0, 0, 0, 0, ["976[01]\\d{5}"]]], GQ: ["240", "00", "222\\d{6}|(?:3\\d|55|[89]0)\\d{7}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235]"]], ["(\\d{3})(\\d{6})", "$1 $2", ["[89]"]]]], GR: ["30", "00", "5005000\\d{3}|(?:[2689]\\d|70)\\d{8}", [10], [["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["21|7"]], ["(\\d{4})(\\d{6})", "$1 $2", ["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2689]"]]]], GT: ["502", "00", "(?:1\\d{3}|[2-7])\\d{7}", [8, 11], [["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]"]], ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]]], GU: ["1", "011", "(?:[58]\\d\\d|671|900)\\d{7}", [10], 0, "1", 0, "1|([3-9]\\d{6})$", "671$1", 0, "671"], GW: ["245", "00", "[49]\\d{8}|4\\d{6}", [7, 9], [["(\\d{3})(\\d{4})", "$1 $2", ["40"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"]]]], GY: ["592", "001", "(?:862\\d|9008)\\d{3}|(?:[2-46]\\d|77)\\d{5}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["[2-46-9]"]]]], HK: ["852", "00(?:30|5[09]|[126-9]?)", "8[0-46-9]\\d{6,7}|9\\d{4}(?:\\d(?:\\d(?:\\d{4})?)?)?|(?:[235-79]\\d|46)\\d{6}", [5, 6, 7, 8, 9, 11], [["(\\d{3})(\\d{2,5})", "$1 $2", ["900", "9003"]], ["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]], ["(\\d{3})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]], 0, 0, 0, 0, 0, 0, 0, "00"], HN: ["504", "00", "8\\d{10}|[237-9]\\d{7}", [8, 11], [["(\\d{4})(\\d{4})", "$1-$2", ["[237-9]"]]]], HR: ["385", "00", "(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}", [6, 7, 8, 9], [["(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["6[01]"], "0$1"], ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["8"], "0$1"], ["(\\d)(\\d{4})(\\d{3})", "$1 $2 $3", ["1"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[67]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-5]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"]], "0"], HT: ["509", "00", "[2-489]\\d{7}", [8], [["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[2-489]"]]]], HU: ["36", "00", "[235-7]\\d{8}|[1-9]\\d{7}", [8, 9], [["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "(06 $1)"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"], "(06 $1)"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "06 $1"]], "06"], ID: ["62", "00[89]", "(?:(?:00[1-9]|8\\d)\\d{4}|[1-36])\\d{6}|00\\d{10}|[1-9]\\d{8,10}|[2-9]\\d{7}", [7, 8, 9, 10, 11, 12, 13], [["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["15"]], ["(\\d{2})(\\d{5,9})", "$1 $2", ["2[124]|[36]1"], "(0$1)"], ["(\\d{3})(\\d{5,7})", "$1 $2", ["800"], "0$1"], ["(\\d{3})(\\d{5,8})", "$1 $2", ["[2-79]"], "(0$1)"], ["(\\d{3})(\\d{3,4})(\\d{3})", "$1-$2-$3", ["8[1-35-9]"], "0$1"], ["(\\d{3})(\\d{6,8})", "$1 $2", ["1"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["804"], "0$1"], ["(\\d{3})(\\d)(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["80"], "0$1"], ["(\\d{3})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["8"], "0$1"]], "0"], IE: ["353", "00", "(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}", [7, 8, 9, 10], [["(\\d{2})(\\d{5})", "$1 $2", ["2[24-9]|47|58|6[237-9]|9[35-9]"], "(0$1)"], ["(\\d{3})(\\d{5})", "$1 $2", ["[45]0"], "(0$1)"], ["(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"], "(0$1)"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2569]|4[1-69]|7[14]"], "(0$1)"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["81"], "(0$1)"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[78]"], "0$1"], ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["4"], "(0$1)"], ["(\\d{2})(\\d)(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["8"], "0$1"]], "0"], IL: ["972", "0(?:0|1[2-9])", "1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}", [7, 8, 9, 10, 11, 12], [["(\\d{4})(\\d{3})", "$1-$2", ["125"]], ["(\\d{4})(\\d{2})(\\d{2})", "$1-$2-$3", ["121"]], ["(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-489]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"], ["(\\d{4})(\\d{3})(\\d{3})", "$1-$2-$3", ["12"]], ["(\\d{4})(\\d{6})", "$1-$2", ["159"]], ["(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3-$4", ["1[7-9]"]], ["(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})", "$1-$2 $3-$4", ["15"]]], "0"], IM: ["44", "00", "1624\\d{6}|(?:[3578]\\d|90)\\d{8}", [10], 0, "0", 0, "0|([5-8]\\d{5})$", "1624$1", 0, "74576|(?:16|7[56])24"], IN: ["91", "00", "(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}", [8, 9, 10, 11, 12, 13], [["(\\d{8})", "$1", ["5(?:0|2[23]|3[03]|[67]1|88)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"], 0, 1], ["(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"], 0, 1], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["140"], 0, 1], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["11|2[02]|33|4[04]|79[1-7]|80[2-46]", "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])", "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"], "0$1", 1], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"], "0$1", 1], ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807", "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]", "1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"], "0$1", 1], ["(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1", 1], ["(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"], 0, 1], ["(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["18"], 0, 1]], "0"], IO: ["246", "00", "3\\d{6}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["3"]]]], IQ: ["964", "00", "(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}", [8, 9, 10], [["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-6]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]], "0"], IR: ["98", "00", "[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}", [4, 5, 6, 7, 10], [["(\\d{4,5})", "$1", ["96"], "0$1"], ["(\\d{2})(\\d{4,5})", "$1 $2", ["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[1-8]"], "0$1"]], "0"], IS: ["354", "00|1(?:0(?:01|[12]0)|100)", "(?:38\\d|[4-9])\\d{6}", [7, 9], [["(\\d{3})(\\d{4})", "$1 $2", ["[4-9]"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["3"]]], 0, 0, 0, 0, 0, 0, 0, "00"], IT: ["39", "00", "0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}", [6, 7, 8, 9, 10, 11], [["(\\d{2})(\\d{4,6})", "$1 $2", ["0[26]"]], ["(\\d{3})(\\d{3,6})", "$1 $2", ["0[13-57-9][0159]|8(?:03|4[17]|9[245])", "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"]], ["(\\d{4})(\\d{2,6})", "$1 $2", ["0(?:[13-579][2-46-8]|8[236-8])"]], ["(\\d{4})(\\d{4})", "$1 $2", ["894"]], ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[26]|5"]], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1[4679]|[38]"]], ["(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[13-57-9][0159]"]], ["(\\d{2})(\\d{4})(\\d{5})", "$1 $2 $3", ["0[26]"]], ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]], ["(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["3"]]], 0, 0, 0, 0, 0, 0, [["0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}"], ["3[1-9]\\d{8}|3[2-9]\\d{7}", [9, 10]], ["80(?:0\\d{3}|3)\\d{3}", [6, 9]], ["(?:0878\\d\\d|89(?:2|4[5-9]\\d))\\d{3}|89[45][0-4]\\d\\d|(?:1(?:44|6[346])|89(?:5[5-9]|9))\\d{6}", [6, 8, 9, 10]], ["1(?:78\\d|99)\\d{6}", [9, 10]], 0, 0, 0, ["55\\d{8}", [10]], ["84(?:[08]\\d{3}|[17])\\d{3}", [6, 9]]]], JE: ["44", "00", "1534\\d{6}|(?:[3578]\\d|90)\\d{8}", [10], 0, "0", 0, "0|([0-24-8]\\d{5})$", "1534$1", 0, 0, [["1534[0-24-8]\\d{5}"], ["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}"], ["80(?:07(?:35|81)|8901)\\d{4}"], ["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"], ["701511\\d{4}"], 0, ["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"], ["76(?:464|652)\\d{5}|76(?:0[0-2]|2[356]|34|4[01347]|5[49]|6[0-369]|77|81|9[139])\\d{6}"], ["56\\d{8}"]]], JM: ["1", "011", "(?:[58]\\d\\d|658|900)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "658|876"], JO: ["962", "00", "(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}", [8, 9], [["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2356]|87"], "(0$1)"], ["(\\d{3})(\\d{5,6})", "$1 $2", ["[89]"], "0$1"], ["(\\d{2})(\\d{7})", "$1 $2", ["70"], "0$1"], ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]], "0"], JP: ["81", "010", "00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}", [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [["(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"], ["(\\d{4})(\\d)(\\d{4})", "$1-$2-$3", ["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:496|802|9(?:1[23]|69))|1(?:45|58)[67]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60"], "0$1"], ["(\\d)(\\d{4})(\\d{4})", "$1-$2-$3", ["[36]|4(?:2[09]|7[01])", "[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"], "0$1"], ["(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["[14]|[289][2-9]|5[3-9]|7[2-4679]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"], ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[257-9]"], "0$1"]], "0"], KE: ["254", "000", "(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}", [7, 8, 9, 10], [["(\\d{2})(\\d{5,7})", "$1 $2", ["[24-6]"], "0$1"], ["(\\d{3})(\\d{6})", "$1 $2", ["[17]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]], "0"], KG: ["996", "00", "8\\d{9}|(?:[235-8]\\d|99)\\d{7}", [9, 10], [["(\\d{4})(\\d{5})", "$1 $2", ["3(?:1[346]|[24-79])"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235-79]|88"], "0$1"], ["(\\d{3})(\\d{3})(\\d)(\\d{2,3})", "$1 $2 $3 $4", ["8"], "0$1"]], "0"], KH: ["855", "00[14-9]", "1\\d{9}|[1-9]\\d{7,8}", [8, 9, 10], [["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-9]"], "0$1"], ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]], "0"], KI: ["686", "00", "(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}", [5, 8], 0, "0"], KM: ["269", "00", "[3478]\\d{6}", [7], [["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[3478]"]]]], KN: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-7]\\d{6})$", "869$1", 0, "869"], KP: ["850", "00|99", "85\\d{6}|(?:19\\d|[2-7])\\d{7}", [8, 10], [["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"], ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"]], "0"], KR: ["82", "00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))", "00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}", [5, 6, 8, 9, 10, 11, 12, 13, 14], [["(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1"], ["(\\d{4})(\\d{4})", "$1-$2", ["1"]], ["(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60|8"], "0$1"], ["(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["[1346]|5[1-5]"], "0$1"], ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"], ["(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["5"], "0$1"]], "0", 0, "0(8(?:[1-46-8]|5\\d\\d))?"], KW: ["965", "00", "(?:18|[2569]\\d\\d)\\d{5}", [7, 8], [["(\\d{4})(\\d{3,4})", "$1 $2", ["[169]|2(?:[235]|4[1-35-9])|52"]], ["(\\d{3})(\\d{5})", "$1 $2", ["[25]"]]]], KY: ["1", "011", "(?:345|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "345$1", 0, "345"], KZ: ["7", "810", "33622\\d{5}|(?:7\\d|80)\\d{8}", [10], 0, "8", 0, 0, 0, 0, "33|7", 0, "8~10"], LA: ["856", "00", "[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}", [8, 9, 10], [["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2[13]|3[14]|[4-8]"], "0$1"], ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["30[013-9]"], "0$1"], ["(\\d{2})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[23]"], "0$1"]], "0"], LB: ["961", "00", "[7-9]\\d{7}|[13-9]\\d{6}", [7, 8], [["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"]]], "0"], LC: ["1", "011", "(?:[58]\\d\\d|758|900)\\d{7}", [10], 0, "1", 0, "1|([2-8]\\d{6})$", "758$1", 0, "758"], LI: ["423", "00", "90\\d{5}|(?:[2378]|6\\d\\d)\\d{6}", [7, 9], [["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[237-9]"]], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["69"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]], "0", 0, "0|(1001)"], LK: ["94", "00", "[1-9]\\d{8}", [9], [["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[1-689]"], "0$1"]], "0"], LR: ["231", "00", "(?:2|33|5\\d|77|88)\\d{7}|[4-6]\\d{6}", [7, 8, 9], [["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[4-6]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3578]"], "0$1"]], "0"], LS: ["266", "00", "(?:[256]\\d\\d|800)\\d{5}", [8], [["(\\d{4})(\\d{4})", "$1 $2", ["[2568]"]]]], LT: ["370", "00", "(?:[3469]\\d|52|[78]0)\\d{6}", [8], [["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["52[0-7]"], "(8-$1)", 1], ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[7-9]"], "8 $1", 1], ["(\\d{2})(\\d{6})", "$1 $2", ["37|4(?:[15]|6[1-8])"], "(8-$1)", 1], ["(\\d{3})(\\d{5})", "$1 $2", ["[3-6]"], "(8-$1)", 1]], "8", 0, "[08]"], LU: ["352", "00", "35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}", [4, 5, 6, 7, 8, 9, 10, 11], [["(\\d{2})(\\d{3})", "$1 $2", ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]], ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]], ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["20[2-689]"]], ["(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4", ["2(?:[0367]|4[3-8])"]], ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["80[01]|90[015]"]], ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["20"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4 $5", ["2(?:[0367]|4[3-8])"]], ["(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})", "$1 $2 $3 $4", ["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]], 0, 0, "(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)"], LV: ["371", "00", "(?:[268]\\d|90)\\d{6}", [8], [["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[269]|8[01]"]]]], LY: ["218", "00", "[2-9]\\d{8}", [9], [["(\\d{2})(\\d{7})", "$1-$2", ["[2-9]"], "0$1"]], "0"], MA: ["212", "00", "[5-8]\\d{8}", [9], [["(\\d{5})(\\d{4})", "$1-$2", ["5(?:29|38)", "5(?:29|38)[89]", "5(?:29|38)[89]0"], "0$1"], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5[45]"], "0$1"], ["(\\d{4})(\\d{5})", "$1-$2", ["5(?:2[2-489]|3[5-9]|9)|892", "5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892"], "0$1"], ["(\\d{2})(\\d{7})", "$1-$2", ["8"], "0$1"], ["(\\d{3})(\\d{6})", "$1-$2", ["[5-7]"], "0$1"]], "0", 0, 0, 0, 0, 0, [["5(?:29(?:[189][05]|2[29]|3[01])|38[89][05])\\d{4}|5(?:2(?:[015-7]\\d|2[02-9]|3[0-578]|4[02-46-8]|8[0235-7]|90)|3(?:[0-47]\\d|5[02-9]|6[02-8]|80|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"], ["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:0[0-8]|6[1267]|7[0-37]))\\d{6}"], ["80\\d{7}"], ["89\\d{7}"], 0, 0, 0, 0, ["592(?:4[0-2]|93)\\d{4}"]]], MC: ["377", "00", "870\\d{5}|(?:[349]|6\\d)\\d{7}", [8, 9], [["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[39]"]], ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]], "0"], MD: ["373", "00", "(?:[235-7]\\d|[89]0)\\d{6}", [8], [["(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["22|3"], "0$1"], ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[25-7]"], "0$1"]], "0"], ME: ["382", "00", "(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}", [8, 9], [["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "0$1"]], "0"], MF: ["590", "00", "(?:590|69\\d|976)\\d{6}", [9], 0, "0", 0, 0, 0, 0, 0, [["590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\d{4}"], ["69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}"], 0, 0, 0, 0, 0, 0, ["976[01]\\d{5}"]]], MG: ["261", "00", "[23]\\d{8}", [9], [["(\\d{2})(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["[23]"], "0$1"]], "0", 0, "0|([24-9]\\d{6})$", "20$1"], MH: ["692", "011", "329\\d{4}|(?:[256]\\d|45)\\d{5}", [7], [["(\\d{3})(\\d{4})", "$1-$2", ["[2-6]"]]], "1"], MK: ["389", "00", "[2-578]\\d{7}", [8], [["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[347]"], "0$1"], ["(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[58]"], "0$1"]], "0"], ML: ["223", "00", "[24-9]\\d{7}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-9]"]]]], MM: ["95", "00", "1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}", [6, 7, 8, 9, 10], [["(\\d)(\\d{2})(\\d{3})", "$1 $2 $3", ["16|2"], "0$1"], ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"], "0$1"], ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[4-7]|8[1-35]"], "0$1"], ["(\\d)(\\d{3})(\\d{4,6})", "$1 $2 $3", ["9(?:2[0-4]|[35-9]|4[137-9])"], "0$1"], ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"], ["(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["92"], "0$1"], ["(\\d)(\\d{5})(\\d{4})", "$1 $2 $3", ["9"], "0$1"]], "0"], MN: ["976", "001", "[12]\\d{7,9}|[57-9]\\d{7}", [8, 9, 10], [["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[12]1"], "0$1"], ["(\\d{4})(\\d{4})", "$1 $2", ["[57-9]"]], ["(\\d{3})(\\d{5,6})", "$1 $2", ["[12]2[1-3]"], "0$1"], ["(\\d{4})(\\d{5,6})", "$1 $2", ["[12](?:27|3[2-8]|4[2-68]|5[1-4689])", "[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"], "0$1"], ["(\\d{5})(\\d{4,5})", "$1 $2", ["[12]"], "0$1"]], "0"], MO: ["853", "00", "(?:28|[68]\\d)\\d{6}", [8], [["(\\d{4})(\\d{4})", "$1 $2", ["[268]"]]]], MP: ["1", "011", "[58]\\d{9}|(?:67|90)0\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "670$1", 0, "670"], MQ: ["596", "00", "69\\d{7}|(?:59|97)6\\d{6}", [9], [["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"]], "0"], MR: ["222", "00", "(?:[2-4]\\d\\d|800)\\d{5}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-48]"]]]], MS: ["1", "011", "(?:[58]\\d\\d|664|900)\\d{7}", [10], 0, "1", 0, "1|([34]\\d{6})$", "664$1", 0, "664"], MT: ["356", "00", "3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}", [8], [["(\\d{4})(\\d{4})", "$1 $2", ["[2357-9]"]]]], MU: ["230", "0(?:0|[24-7]0|3[03])", "(?:[2-468]|5\\d)\\d{6}", [7, 8], [["(\\d{3})(\\d{4})", "$1 $2", ["[2-46]|8[013]"]], ["(\\d{4})(\\d{4})", "$1 $2", ["5"]]], 0, 0, 0, 0, 0, 0, 0, "020"], MV: ["960", "0(?:0|19)", "(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}", [7, 10], [["(\\d{3})(\\d{4})", "$1-$2", ["[3467]|9[13-9]"]], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"]]], 0, 0, 0, 0, 0, 0, 0, "00"], MW: ["265", "00", "1\\d{6}(?:\\d{2})?|(?:[23]1|77|88|99)\\d{7}", [7, 9], [["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["1[2-9]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[137-9]"], "0$1"]], "0"], MX: ["52", "0[09]", "(?:1(?:[01467]\\d|[2359][1-9]|8[1-79])|[2-9]\\d)\\d{8}", [10, 11], [["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"], 0, 1], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"], 0, 1], ["(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 $3 $4", ["1(?:33|5[56]|81)"], 0, 1], ["(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 $3 $4", ["1"], 0, 1]], "01", 0, "0(?:[12]|4[45])|1", 0, 0, 0, 0, "00"], MY: ["60", "00", "1\\d{8,9}|(?:3\\d|[4-9])\\d{7}", [8, 9, 10], [["(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["[4-79]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1-$2 $3", ["1(?:[02469]|[378][1-9])|8"], "0$1"], ["(\\d)(\\d{4})(\\d{4})", "$1-$2 $3", ["3"], "0$1"], ["(\\d)(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3-$4", ["1[36-8]"]], ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2 $3", ["15"], "0$1"], ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2 $3", ["1"], "0$1"]], "0"], MZ: ["258", "00", "(?:2|8\\d)\\d{7}", [8, 9], [["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2|8[2-79]"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]]], NA: ["264", "00", "[68]\\d{7,8}", [8, 9], [["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["88"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["6"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["87"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]], "0"], NC: ["687", "00", "[2-57-9]\\d{5}", [6], [["(\\d{2})(\\d{2})(\\d{2})", "$1.$2.$3", ["[2-57-9]"]]]], NE: ["227", "00", "[027-9]\\d{7}", [8], [["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["08"]], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[089]|2[013]|7[04]"]]]], NF: ["672", "00", "[13]\\d{5}", [6], [["(\\d{2})(\\d{4})", "$1 $2", ["1[0-3]"]], ["(\\d)(\\d{5})", "$1 $2", ["[13]"]]], 0, 0, "([0-258]\\d{4})$", "3$1"], NG: ["234", "009", "(?:[124-7]|9\\d{3})\\d{6}|[1-9]\\d{7}|[78]\\d{9,13}", [7, 8, 10, 11, 12, 13, 14], [["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["78"], "0$1"], ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]|9(?:0[3-9]|[1-9])"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[3-7]|8[2-9]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[7-9]"], "0$1"], ["(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["[78]"], "0$1"], ["(\\d{3})(\\d{5})(\\d{5,6})", "$1 $2 $3", ["[78]"], "0$1"]], "0"], NI: ["505", "00", "(?:1800|[25-8]\\d{3})\\d{4}", [8], [["(\\d{4})(\\d{4})", "$1 $2", ["[125-8]"]]]], NL: ["31", "00", "(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|[89]\\d{6,9}|1\\d{4,5}", [5, 6, 7, 8, 9, 10], [["(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"], ["(\\d{2})(\\d{7})", "$1 $2", ["66"], "0$1"], ["(\\d)(\\d{8})", "$1 $2", ["6"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-57-9]"], "0$1"]], "0"], NO: ["47", "00", "(?:0|[2-9]\\d{3})\\d{4}", [5, 8], [["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[489]|5[89]"]], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[235-7]"]]], 0, 0, 0, 0, 0, "[02-689]|7[0-8]"], NP: ["977", "00", "(?:1\\d|9)\\d{9}|[1-9]\\d{7}", [8, 10, 11], [["(\\d)(\\d{7})", "$1-$2", ["1[2-6]"], "0$1"], ["(\\d{2})(\\d{6})", "$1-$2", ["1[01]|[2-8]|9(?:[1-579]|6[2-6])"], "0$1"], ["(\\d{3})(\\d{7})", "$1-$2", ["9"]]], "0"], NR: ["674", "00", "(?:444|(?:55|8\\d)\\d|666)\\d{4}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["[4-68]"]]]], NU: ["683", "00", "(?:[47]|888\\d)\\d{3}", [4, 7], [["(\\d{3})(\\d{4})", "$1 $2", ["8"]]]], NZ: ["64", "0(?:0|161)", "[29]\\d{7,9}|50\\d{5}(?:\\d{2,3})?|6[0-35-9]\\d{6}|7\\d{7,8}|8\\d{4,9}|(?:11\\d|[34])\\d{7}", [5, 6, 7, 8, 9, 10], [["(\\d{2})(\\d{3,8})", "$1 $2", ["8[1-579]"], "0$1"], ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["50[036-8]|[89]0", "50(?:[0367]|88)|[89]0"], "0$1"], ["(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["24|[346]|7[2-57-9]|9[2-9]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:10|74)|[59]|80"], "0$1"], ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1|2[028]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,5})", "$1 $2 $3", ["2(?:[169]|7[0-35-9])|7|86"], "0$1"]], "0", 0, 0, 0, 0, 0, 0, "00"], OM: ["968", "00", "(?:1505|[279]\\d{3}|500)\\d{4}|8007\\d{4,5}", [7, 8, 9], [["(\\d{3})(\\d{4,6})", "$1 $2", ["[58]"]], ["(\\d{2})(\\d{6})", "$1 $2", ["2"]], ["(\\d{4})(\\d{4})", "$1 $2", ["[179]"]]]], PA: ["507", "00", "8\\d{9}|[68]\\d{7}|[1-57-9]\\d{6}", [7, 8, 10], [["(\\d{3})(\\d{4})", "$1-$2", ["[1-57-9]"]], ["(\\d{4})(\\d{4})", "$1-$2", ["[68]"]], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]]], PE: ["51", "19(?:1[124]|77|90)00", "(?:[14-8]|9\\d)\\d{7}", [8, 9], [["(\\d{3})(\\d{5})", "$1 $2", ["80"], "(0$1)"], ["(\\d)(\\d{7})", "$1 $2", ["1"], "(0$1)"], ["(\\d{2})(\\d{6})", "$1 $2", ["[4-8]"], "(0$1)"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"]]], "0", 0, 0, 0, 0, 0, 0, 0, " Anexo "], PF: ["689", "00", "[48]\\d{7}|4\\d{5}", [6, 8], [["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["44"]], ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[48]"]]]], PG: ["675", "00|140[1-3]", "(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}", [7, 8], [["(\\d{3})(\\d{4})", "$1 $2", ["18|[2-69]|85"]], ["(\\d{4})(\\d{4})", "$1 $2", ["[78]"]]], 0, 0, 0, 0, 0, 0, 0, "00"], PH: ["63", "00", "1800\\d{7,9}|(?:2|[89]\\d{4})\\d{5}|[2-8]\\d{8}|[28]\\d{7}", [6, 8, 9, 10, 11, 12, 13], [["(\\d)(\\d{5})", "$1 $2", ["2"], "(0$1)"], ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "(0$1)"], ["(\\d{4})(\\d{4,6})", "$1 $2", ["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2", "3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"], "(0$1)"], ["(\\d{5})(\\d{4})", "$1 $2", ["346|4(?:27|9[35])|883", "3469|4(?:279|9(?:30|56))|8834"], "(0$1)"], ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "(0$1)"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-7]|8[2-8]"], "(0$1)"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"], ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]], ["(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["1"]]], "0"], PK: ["92", "00", "122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}", [8, 9, 10, 11, 12], [["(\\d{3})(\\d{3})(\\d{2,7})", "$1 $2 $3", ["[89]0"], "0$1"], ["(\\d{4})(\\d{5})", "$1 $2", ["1"]], ["(\\d{3})(\\d{6,7})", "$1 $2", ["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])", "9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"], "(0$1)"], ["(\\d{2})(\\d{7,8})", "$1 $2", ["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"], "(0$1)"], ["(\\d{5})(\\d{5})", "$1 $2", ["58"], "(0$1)"], ["(\\d{3})(\\d{7})", "$1 $2", ["3"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"], "(0$1)"], ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[24-9]"], "(0$1)"]], "0"], PL: ["48", "00", "6\\d{5}(?:\\d{2})?|8\\d{9}|[1-9]\\d{6}(?:\\d{2})?", [6, 7, 8, 9, 10], [["(\\d{5})", "$1", ["19"]], ["(\\d{3})(\\d{3})", "$1 $2", ["11|64"]], ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1", "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]], ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["64"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[2-8]|[2-7]|8[1-79]|9[145]"]], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["8"]]]], PM: ["508", "00", "[45]\\d{5}", [6], [["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[45]"], "0$1"]], "0"], PR: ["1", "011", "(?:[589]\\d\\d|787)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "787|939"], PS: ["970", "00", "[2489]2\\d{6}|(?:1\\d|5)\\d{8}", [8, 9, 10], [["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2489]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["5"], "0$1"], ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]], "0"], PT: ["351", "00", "(?:[26-9]\\d|30)\\d{7}", [9], [["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["2[12]"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[236-9]"]]]], PW: ["680", "01[12]", "(?:[24-8]\\d\\d|345|900)\\d{4}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]]], PY: ["595", "00", "59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}", [6, 7, 8, 9, 10, 11], [["(\\d{3})(\\d{3,6})", "$1 $2", ["[2-9]0"], "0$1"], ["(\\d{2})(\\d{5})", "$1 $2", ["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"], "(0$1)"], ["(\\d{3})(\\d{4,5})", "$1 $2", ["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"], "(0$1)"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"], "(0$1)"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["87"]], ["(\\d{3})(\\d{6})", "$1 $2", ["9(?:[5-79]|8[1-6])"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]"], "0$1"], ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"]]], "0"], QA: ["974", "00", "[2-7]\\d{7}|(?:2\\d\\d|800)\\d{4}", [7, 8], [["(\\d{3})(\\d{4})", "$1 $2", ["2[126]|8"]], ["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]"]]]], RE: ["262", "00", "9769\\d{5}|(?:26|[68]\\d)\\d{7}", [9], [["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2689]"], "0$1"]], "0", 0, 0, 0, 0, "26[23]|69|[89]"], RO: ["40", "00", "(?:[237]\\d|[89]0)\\d{7}|[23]\\d{5}", [6, 9], [["(\\d{3})(\\d{3})", "$1 $2", ["2[3-6]", "2[3-6]\\d9"], "0$1"], ["(\\d{2})(\\d{4})", "$1 $2", ["219|31"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[23]1"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[237-9]"], "0$1"]], "0", 0, 0, 0, 0, 0, 0, 0, " int "], RS: ["381", "00", "38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}", [6, 7, 8, 9, 10, 11, 12], [["(\\d{3})(\\d{3,9})", "$1 $2", ["(?:2[389]|39)0|[7-9]"], "0$1"], ["(\\d{2})(\\d{5,10})", "$1 $2", ["[1-36]"], "0$1"]], "0"], RU: ["7", "810", "[347-9]\\d{9}", [10], [["(\\d{4})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-8]|2[1-9])", "7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))", "7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"], "8 ($1)", 1], ["(\\d{5})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-68]|2[1-9])", "7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))", "7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"], "8 ($1)", 1], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", 1], ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[3489]"], "8 ($1)", 1]], "8", 0, 0, 0, 0, "3[04-689]|[489]", 0, "8~10"], RW: ["250", "00", "(?:06|[27]\\d\\d|[89]00)\\d{6}", [8, 9], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"]]], "0"], SA: ["966", "00", "92\\d{7}|(?:[15]|8\\d)\\d{8}", [9, 10], [["(\\d{4})(\\d{5})", "$1 $2", ["9"]], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["81"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]], "0"], SB: ["677", "0[01]", "(?:[1-6]|[7-9]\\d\\d)\\d{4}", [5, 7], [["(\\d{2})(\\d{5})", "$1 $2", ["7|8[4-9]|9(?:[1-8]|9[0-8])"]]]], SC: ["248", "010|0[0-2]", "8000\\d{3}|(?:[249]\\d|64)\\d{5}", [7], [["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[246]|9[57]"]]], 0, 0, 0, 0, 0, 0, 0, "00"], SD: ["249", "00", "[19]\\d{8}", [9], [["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[19]"], "0$1"]], "0"], SE: ["46", "00", "(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}", [6, 7, 8, 9, 10], [["(\\d{2})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["20"], "0$1", 0, "$1 $2 $3"], ["(\\d{3})(\\d{4})", "$1-$2", ["9(?:00|39|44)"], "0$1", 0, "$1 $2"], ["(\\d{2})(\\d{3})(\\d{2})", "$1-$2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"], "0$1", 0, "$1 $2 $3"], ["(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1", 0, "$1 $2 $3 $4"], ["(\\d{3})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1", 0, "$1 $2 $3"], ["(\\d{3})(\\d{2,3})(\\d{3})", "$1-$2 $3", ["9(?:00|39|44)"], "0$1", 0, "$1 $2 $3"], ["(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"], "0$1", 0, "$1 $2 $3 $4"], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["10|7"], "0$1", 0, "$1 $2 $3 $4"], ["(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1", 0, "$1 $2 $3 $4"], ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1", 0, "$1 $2 $3 $4"], ["(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1-$2 $3 $4", ["9"], "0$1", 0, "$1 $2 $3 $4"], ["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4 $5", ["[26]"], "0$1", 0, "$1 $2 $3 $4 $5"]], "0"], SG: ["65", "0[0-3]\\d", "(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}", [8, 10, 11], [["(\\d{4})(\\d{4})", "$1 $2", ["[369]|8(?:0[1-3]|[1-9])"]], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]], ["(\\d{4})(\\d{4})(\\d{3})", "$1 $2 $3", ["7"]], ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]]], SH: ["290", "00", "(?:[256]\\d|8)\\d{3}", [4, 5], 0, 0, 0, 0, 0, 0, "[256]"], SI: ["386", "00|10(?:22|66|88|99)", "[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}", [5, 6, 7, 8], [["(\\d{2})(\\d{3,6})", "$1 $2", ["8[09]|9"], "0$1"], ["(\\d{3})(\\d{5})", "$1 $2", ["59|8"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[37][01]|4[0139]|51|6"], "0$1"], ["(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-57]"], "(0$1)"]], "0", 0, 0, 0, 0, 0, 0, "00"], SJ: ["47", "00", "0\\d{4}|(?:[4589]\\d|79)\\d{6}", [5, 8], 0, 0, 0, 0, 0, 0, "79"], SK: ["421", "00", "[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}", [6, 7, 9], [["(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"], ["(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"], ["(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"]], "0"], SL: ["232", "00", "(?:[2378]\\d|66|99)\\d{6}", [8], [["(\\d{2})(\\d{6})", "$1 $2", ["[236-9]"], "(0$1)"]], "0"], SM: ["378", "00", "(?:0549|[5-7]\\d)\\d{6}", [8, 10], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]"]], ["(\\d{4})(\\d{6})", "$1 $2", ["0"]]], 0, 0, "([89]\\d{5})$", "0549$1"], SN: ["221", "00", "(?:[378]\\d{4}|93330)\\d{4}", [9], [["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[379]"]]]], SO: ["252", "00", "[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}", [6, 7, 8, 9], [["(\\d{2})(\\d{4})", "$1 $2", ["8[125]"]], ["(\\d{6})", "$1", ["[134]"]], ["(\\d)(\\d{6})", "$1 $2", ["[15]|2[0-79]|3[0-46-8]|4[0-7]"]], ["(\\d)(\\d{7})", "$1 $2", ["24|[67]"]], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3478]|64|90"]], ["(\\d{2})(\\d{5,7})", "$1 $2", ["1|28|6[1-35-9]|9[2-9]"]]], "0"], SR: ["597", "00", "(?:[2-5]|68|[78]\\d)\\d{5}", [6, 7], [["(\\d{2})(\\d{2})(\\d{2})", "$1-$2-$3", ["56"]], ["(\\d{3})(\\d{3})", "$1-$2", ["[2-5]"]], ["(\\d{3})(\\d{4})", "$1-$2", ["[6-8]"]]]], SS: ["211", "00", "[19]\\d{8}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[19]"], "0$1"]], "0"], ST: ["239", "00", "(?:22|9\\d)\\d{5}", [7], [["(\\d{3})(\\d{4})", "$1 $2", ["[29]"]]]], SV: ["503", "00", "[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?", [7, 8, 11], [["(\\d{3})(\\d{4})", "$1 $2", ["[89]"]], ["(\\d{4})(\\d{4})", "$1 $2", ["[267]"]], ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[89]"]]]], SX: ["1", "011", "7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|(5\\d{6})$", "721$1", 0, "721"], SY: ["963", "00", "[1-39]\\d{8}|[1-5]\\d{7}", [8, 9], [["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-5]"], "0$1", 1], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1", 1]], "0"], SZ: ["268", "00", "0800\\d{4}|(?:[237]\\d|900)\\d{6}", [8, 9], [["(\\d{4})(\\d{4})", "$1 $2", ["[0237]"]], ["(\\d{5})(\\d{4})", "$1 $2", ["9"]]]], TA: ["290", "00", "8\\d{3}", [4], 0, 0, 0, 0, 0, 0, "8"], TC: ["1", "011", "(?:[58]\\d\\d|649|900)\\d{7}", [10], 0, "1", 0, "1|([2-479]\\d{6})$", "649$1", 0, "649"], TD: ["235", "00|16", "(?:22|[69]\\d|77)\\d{6}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2679]"]]], 0, 0, 0, 0, 0, 0, 0, "00"], TG: ["228", "00", "[279]\\d{7}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[279]"]]]], TH: ["66", "00[1-9]", "1\\d{9}|[1689]\\d{8}|[1-57]\\d{7}", [8, 9, 10], [["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[13-9]"], "0$1"], ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]], "0"], TJ: ["992", "810", "(?:[02]0|11|[3-57-9]\\d)\\d{7}", [9], [["(\\d{6})(\\d)(\\d{2})", "$1 $2 $3", ["331", "3317"], 0, 1], ["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[34]7|91[78]"], 0, 1], ["(\\d{4})(\\d)(\\d{4})", "$1 $2 $3", ["3"], 0, 1], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[02457-9]|11"], 0, 1]], "8", 0, 0, 0, 0, 0, 0, "8~10"], TK: ["690", "00", "[2-47]\\d{3,6}", [4, 5, 6, 7]], TL: ["670", "00", "7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}", [7, 8], [["(\\d{3})(\\d{4})", "$1 $2", ["[2-489]|70"]], ["(\\d{4})(\\d{4})", "$1 $2", ["7"]]]], TM: ["993", "810", "[1-6]\\d{7}", [8], [["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["12"], "(8 $1)"], ["(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-5]"], "(8 $1)"], ["(\\d{2})(\\d{6})", "$1 $2", ["6"], "8 $1"]], "8", 0, 0, 0, 0, 0, 0, "8~10"], TN: ["216", "00", "[2-57-9]\\d{7}", [8], [["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-57-9]"]]]], TO: ["676", "00", "(?:0800|[5-8]\\d{3})\\d{3}|[2-8]\\d{4}", [5, 7], [["(\\d{2})(\\d{3})", "$1-$2", ["[2-4]|50|6[09]|7[0-24-69]|8[05]"]], ["(\\d{4})(\\d{3})", "$1 $2", ["0"]], ["(\\d{3})(\\d{4})", "$1 $2", ["[5-8]"]]]], TR: ["90", "00", "4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}", [7, 10, 12, 13], [["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|8[0589]|90"], "0$1", 1], ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5(?:[0-59]|61)", "5(?:[0-59]|616)", "5(?:[0-59]|6161)"], "0$1", 1], ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24][1-8]|3[1-9]"], "(0$1)", 1], ["(\\d{3})(\\d{3})(\\d{6,7})", "$1 $2 $3", ["80"], "0$1", 1]], "0"], TT: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-46-8]\\d{6})$", "868$1", 0, "868"], TV: ["688", "00", "(?:2|7\\d\\d|90)\\d{4}", [5, 6, 7], [["(\\d{2})(\\d{3})", "$1 $2", ["2"]], ["(\\d{2})(\\d{4})", "$1 $2", ["90"]], ["(\\d{2})(\\d{5})", "$1 $2", ["7"]]]], TW: ["886", "0(?:0[25-79]|19)", "[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}", [7, 8, 9, 10, 11], [["(\\d{2})(\\d)(\\d{4})", "$1 $2 $3", ["202"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[258]0"], "0$1"], ["(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]", "[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"], "0$1"], ["(\\d{2})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["7"], "0$1"]], "0", 0, 0, 0, 0, 0, 0, 0, "#"], TZ: ["255", "00[056]", "(?:[26-8]\\d|41|90)\\d{7}", [9], [["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[24]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[67]"], "0$1"]], "0"], UA: ["380", "00", "[89]\\d{9}|[3-9]\\d{8}", [9, 10], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]", "6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["4[45][0-5]|5(?:0|6[37])|6(?:[12][018]|[36-8])|7|89|9[1-9]|(?:48|57)[0137-9]", "4[45][0-5]|5(?:0|6(?:3[14-7]|7))|6(?:[12][018]|[36-8])|7|89|9[1-9]|(?:48|57)[0137-9]"], "0$1"], ["(\\d{4})(\\d{5})", "$1 $2", ["[3-6]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]], "0", 0, 0, 0, 0, 0, 0, "0~0"], UG: ["256", "00[057]", "800\\d{6}|(?:[29]0|[347]\\d)\\d{7}", [9], [["(\\d{4})(\\d{5})", "$1 $2", ["202", "2024"], "0$1"], ["(\\d{3})(\\d{6})", "$1 $2", ["[27-9]|4(?:6[45]|[7-9])"], "0$1"], ["(\\d{2})(\\d{7})", "$1 $2", ["[34]"], "0$1"]], "0"], US: ["1", "011", "[2-9]\\d{9}", [10], [["(\\d{3})(\\d{3})(\\d{4})", "($1) $2-$3", ["[2-9]"], 0, 1, "$1-$2-$3"]], "1", 0, 0, 0, 0, 0, [["(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[0179]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-289]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"], [""], ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"], ["900[2-9]\\d{6}"], ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}"]]], UY: ["598", "0(?:0|1[3-9]\\d)", "4\\d{9}|[249]\\d{7}|(?:[49]\\d|80)\\d{5}", [7, 8, 10], [["(\\d{3})(\\d{4})", "$1 $2", ["405|8|90"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"], ["(\\d{4})(\\d{4})", "$1 $2", ["[24]"]], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["4"], "0$1"]], "0", 0, 0, 0, 0, 0, 0, "00", " int. "], UZ: ["998", "810", "55501\\d{4}|(?:33|[679]\\d|88)\\d{7}", [9], [["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[35-9]"], "8 $1"]], "8", 0, 0, 0, 0, 0, 0, "8~10"], VA: ["39", "00", "0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}", [6, 7, 8, 9, 10, 11], 0, 0, 0, 0, 0, 0, "06698"], VC: ["1", "011", "(?:[58]\\d\\d|784|900)\\d{7}", [10], 0, "1", 0, "1|([2-7]\\d{6})$", "784$1", 0, "784"], VE: ["58", "00", "[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}", [10], [["(\\d{3})(\\d{7})", "$1-$2", ["[24-689]"], "0$1"]], "0"], VG: ["1", "011", "(?:284|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-578]\\d{6})$", "284$1", 0, "284"], VI: ["1", "011", "[58]\\d{9}|(?:34|90)0\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "340$1", 0, "340"], VN: ["84", "00", "[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}", [7, 8, 9, 10], [["(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1", 1], ["(\\d{4})(\\d{4,6})", "$1 $2", ["1"], 0, 1], ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[69]"], "0$1", 1], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3578]"], "0$1", 1], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1", 1], ["(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1", 1]], "0"], VU: ["678", "00", "(?:[23]\\d|[48]8)\\d{3}|(?:[57]\\d|90)\\d{5}", [5, 7], [["(\\d{3})(\\d{4})", "$1 $2", ["[579]"]]]], WF: ["681", "00", "(?:[45]0|68|72|8\\d)\\d{4}", [6], [["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[4-8]"]]]], WS: ["685", "0", "(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}", [5, 6, 7, 10], [["(\\d{5})", "$1", ["[2-5]|6[1-9]"]], ["(\\d{3})(\\d{3,7})", "$1 $2", ["[68]"]], ["(\\d{2})(\\d{5})", "$1 $2", ["7"]]]], XK: ["383", "00", "[23]\\d{7,8}|(?:4\\d\\d|[89]00)\\d{5}", [8, 9], [["(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-4]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[23]"], "0$1"]], "0"], YE: ["967", "00", "(?:1|7\\d)\\d{7}|[1-7]\\d{6}", [7, 8, 9], [["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-6]|7[24-68]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"], "0$1"]], "0"], YT: ["262", "00", "80\\d{7}|(?:26|63)9\\d{6}", [9], 0, "0", 0, 0, 0, 0, "269|63"], ZA: ["27", "00", "[1-79]\\d{8}|8\\d{4,9}", [5, 6, 7, 8, 9, 10], [["(\\d{2})(\\d{3,4})", "$1 $2", ["8[1-4]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["8[1-4]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["860"], "0$1"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-9]"], "0$1"], ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]], "0"], ZM: ["260", "00", "(?:63|80)0\\d{6}|(?:21|[79]\\d)\\d{7}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"], ["(\\d{2})(\\d{7})", "$1 $2", ["[79]"], "0$1"]], "0"], ZW: ["263", "00", "2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}", [5, 6, 7, 8, 9, 10], [["(\\d{3})(\\d{3,5})", "$1 $2", ["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"], "0$1"], ["(\\d)(\\d{3})(\\d{2,4})", "$1 $2 $3", ["[49]"], "0$1"], ["(\\d{3})(\\d{4})", "$1 $2", ["80"], "0$1"], ["(\\d{2})(\\d{7})", "$1 $2", ["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2", "2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"], "(0$1)"], ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"], ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)", "2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"], "0$1"], ["(\\d{4})(\\d{6})", "$1 $2", ["8"], "0$1"], ["(\\d{2})(\\d{3,5})", "$1 $2", ["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"], "0$1"], ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["29[013-9]|39|54"], "0$1"], ["(\\d{4})(\\d{3,5})", "$1 $2", ["(?:25|54)8", "258|5483"], "0$1"]], "0"] }, nonGeographic: { 800: ["800", 0, "[1-9]\\d{7}", [8], [["(\\d{4})(\\d{4})", "$1 $2", ["[1-9]"]]], 0, 0, 0, 0, 0, 0, [0, 0, ["[1-9]\\d{7}"]]], 808: ["808", 0, "[1-9]\\d{7}", [8], [["(\\d{4})(\\d{4})", "$1 $2", ["[1-9]"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, ["[1-9]\\d{7}"]]], 870: ["870", 0, "[35-7]\\d{8}", [9], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[35-7]"]]], 0, 0, 0, 0, 0, 0, [0, ["(?:[356]\\d|7[6-8])\\d{7}"]]], 878: ["878", 0, "10\\d{10}", [12], [["(\\d{2})(\\d{5})(\\d{5})", "$1 $2 $3", ["1"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, ["10\\d{10}"]]], 881: ["881", 0, "[0-36-9]\\d{8}", [9], [["(\\d)(\\d{3})(\\d{5})", "$1 $2 $3", ["[0-36-9]"]]], 0, 0, 0, 0, 0, 0, [0, ["[0-36-9]\\d{8}"]]], 882: ["882", 0, "[13]\\d{6}(?:\\d{2,5})?|285\\d{9}|[19]\\d{7}", [7, 8, 9, 10, 11, 12], [["(\\d{2})(\\d{5})", "$1 $2", ["16|342"]], ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[19]"]], ["(\\d{2})(\\d{4})(\\d{3})", "$1 $2 $3", ["3[23]"]], ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"]], ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["34[57]"]], ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["34"]], ["(\\d{2})(\\d{4,5})(\\d{5})", "$1 $2 $3", ["[1-3]"]]], 0, 0, 0, 0, 0, 0, [0, ["3(?:37\\d\\d|42)\\d{4}|3(?:2|47|7\\d{3})\\d{7}", [7, 9, 10, 12]], 0, 0, 0, 0, 0, 0, ["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:(?:285\\d\\d|3(?:45|[69]\\d{3}))\\d|9[89])\\d{6}"]]], 883: ["883", 0, "51\\d{7}(?:\\d{3})?", [9, 12], [["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["510"]], ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["510"]], ["(\\d{4})(\\d{4})(\\d{4})", "$1 $2 $3", ["5"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, ["51[013]0\\d{8}|5100\\d{5}"]]], 888: ["888", 0, "\\d{11}", [11], [["(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3"]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, ["\\d{11}"]]], 979: ["979", 0, "[1359]\\d{8}", [9], [["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[1359]"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, ["[1359]\\d{8}"]]] } };
        function b(t3, e2) {
          var n2 = Array.prototype.slice.call(e2);
          return n2.push(y), t3.apply(this, n2);
        }
        var g = 2, m = 17, O = 3, C = "0-9\uFF10-\uFF19\u0660-\u0669\u06F0-\u06F9", x = "-\u2010-\u2015\u2212\u30FC\uFF0D", w = "\uFF0F/", S = "\uFF0E.", E = " \xA0\xAD\u200B\u2060\u3000", P = "()\uFF08\uFF09\uFF3B\uFF3D\\[\\]", I = "~\u2053\u223C\uFF5E", N = "".concat(x).concat(w).concat(S).concat(E).concat(P).concat(I), j = "+\uFF0B";
        function T(t3, e2) {
          if (!(t3 instanceof e2))
            throw new TypeError("Cannot call a class as a function");
        }
        var A = function t3(e2) {
          T(this, t3), this.name = this.constructor.name, this.message = e2, this.stack = new Error(e2).stack;
        };
        A.prototype = Object.create(Error.prototype), A.prototype.constructor = A;
        var k = function(t3, e2) {
          t3 = t3.split("-"), e2 = e2.split("-");
          for (var n2 = t3[0].split("."), r2 = e2[0].split("."), d2 = 0; d2 < 3; d2++) {
            var i2 = Number(n2[d2]), o2 = Number(r2[d2]);
            if (i2 > o2)
              return 1;
            if (o2 > i2)
              return -1;
            if (!isNaN(i2) && isNaN(o2))
              return 1;
            if (isNaN(i2) && !isNaN(o2))
              return -1;
          }
          return t3[1] && e2[1] ? t3[1] > e2[1] ? 1 : t3[1] < e2[1] ? -1 : 0 : !t3[1] && e2[1] ? 1 : t3[1] && !e2[1] ? -1 : 0;
        };
        function M(t3) {
          return M = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" === typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, M(t3);
        }
        function R(t3, e2) {
          if (!(t3 instanceof e2))
            throw new TypeError("Cannot call a class as a function");
        }
        function D(t3, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var r2 = e2[n2];
            r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t3, r2.key, r2);
          }
        }
        function L(t3, e2, n2) {
          return e2 && D(t3.prototype, e2), n2 && D(t3, n2), t3;
        }
        var F = "1.2.0", B = "1.7.35", _ = " ext. ", G = /^\d+$/, V = function() {
          function t3(e2) {
            R(this, t3), Y(e2), this.metadata = e2, Q.call(this, e2);
          }
          return L(t3, [{ key: "getCountries", value: function() {
            return Object.keys(this.metadata.countries).filter(function(t4) {
              return "001" !== t4;
            });
          } }, { key: "getCountryMetadata", value: function(t4) {
            return this.metadata.countries[t4];
          } }, { key: "nonGeographic", value: function() {
            if (!(this.v1 || this.v2 || this.v3))
              return this.metadata.nonGeographic || this.metadata.nonGeographical;
          } }, { key: "hasCountry", value: function(t4) {
            return void 0 !== this.getCountryMetadata(t4);
          } }, { key: "hasCallingCode", value: function(t4) {
            if (this.getCountryCodesForCallingCode(t4))
              return true;
            if (this.nonGeographic()) {
              if (this.nonGeographic()[t4])
                return true;
            } else {
              var e2 = this.countryCallingCodes()[t4];
              if (e2 && 1 === e2.length && "001" === e2[0])
                return true;
            }
          } }, { key: "isNonGeographicCallingCode", value: function(t4) {
            return this.nonGeographic() ? !!this.nonGeographic()[t4] : !this.getCountryCodesForCallingCode(t4);
          } }, { key: "country", value: function(t4) {
            return this.selectNumberingPlan(t4);
          } }, { key: "selectNumberingPlan", value: function(t4, e2) {
            if (t4 && G.test(t4) && (e2 = t4, t4 = null), t4 && "001" !== t4) {
              if (!this.hasCountry(t4))
                throw new Error("Unknown country: ".concat(t4));
              this.numberingPlan = new U(this.getCountryMetadata(t4), this);
            } else if (e2) {
              if (!this.hasCallingCode(e2))
                throw new Error("Unknown calling code: ".concat(e2));
              this.numberingPlan = new U(this.getNumberingPlanMetadata(e2), this);
            } else
              this.numberingPlan = void 0;
            return this;
          } }, { key: "getCountryCodesForCallingCode", value: function(t4) {
            var e2 = this.countryCallingCodes()[t4];
            if (e2) {
              if (1 === e2.length && 3 === e2[0].length)
                return;
              return e2;
            }
          } }, { key: "getCountryCodeForCallingCode", value: function(t4) {
            var e2 = this.getCountryCodesForCallingCode(t4);
            if (e2)
              return e2[0];
          } }, { key: "getNumberingPlanMetadata", value: function(t4) {
            var e2 = this.getCountryCodeForCallingCode(t4);
            if (e2)
              return this.getCountryMetadata(e2);
            if (this.nonGeographic()) {
              var n2 = this.nonGeographic()[t4];
              if (n2)
                return n2;
            } else {
              var r2 = this.countryCallingCodes()[t4];
              if (r2 && 1 === r2.length && "001" === r2[0])
                return this.metadata.countries["001"];
            }
          } }, { key: "countryCallingCode", value: function() {
            return this.numberingPlan.callingCode();
          } }, { key: "IDDPrefix", value: function() {
            return this.numberingPlan.IDDPrefix();
          } }, { key: "defaultIDDPrefix", value: function() {
            return this.numberingPlan.defaultIDDPrefix();
          } }, { key: "nationalNumberPattern", value: function() {
            return this.numberingPlan.nationalNumberPattern();
          } }, { key: "possibleLengths", value: function() {
            return this.numberingPlan.possibleLengths();
          } }, { key: "formats", value: function() {
            return this.numberingPlan.formats();
          } }, { key: "nationalPrefixForParsing", value: function() {
            return this.numberingPlan.nationalPrefixForParsing();
          } }, { key: "nationalPrefixTransformRule", value: function() {
            return this.numberingPlan.nationalPrefixTransformRule();
          } }, { key: "leadingDigits", value: function() {
            return this.numberingPlan.leadingDigits();
          } }, { key: "hasTypes", value: function() {
            return this.numberingPlan.hasTypes();
          } }, { key: "type", value: function(t4) {
            return this.numberingPlan.type(t4);
          } }, { key: "ext", value: function() {
            return this.numberingPlan.ext();
          } }, { key: "countryCallingCodes", value: function() {
            return this.v1 ? this.metadata.country_phone_code_to_countries : this.metadata.country_calling_codes;
          } }, { key: "chooseCountryByCountryCallingCode", value: function(t4) {
            return this.selectNumberingPlan(t4);
          } }, { key: "hasSelectedNumberingPlan", value: function() {
            return void 0 !== this.numberingPlan;
          } }]), t3;
        }(), U = function() {
          function t3(e2, n2) {
            R(this, t3), this.globalMetadataObject = n2, this.metadata = e2, Q.call(this, n2.metadata);
          }
          return L(t3, [{ key: "callingCode", value: function() {
            return this.metadata[0];
          } }, { key: "getDefaultCountryMetadataForRegion", value: function() {
            return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());
          } }, { key: "IDDPrefix", value: function() {
            if (!this.v1 && !this.v2)
              return this.metadata[1];
          } }, { key: "defaultIDDPrefix", value: function() {
            if (!this.v1 && !this.v2)
              return this.metadata[12];
          } }, { key: "nationalNumberPattern", value: function() {
            return this.v1 || this.v2 ? this.metadata[1] : this.metadata[2];
          } }, { key: "possibleLengths", value: function() {
            if (!this.v1)
              return this.metadata[this.v2 ? 2 : 3];
          } }, { key: "_getFormats", value: function(t4) {
            return t4[this.v1 ? 2 : this.v2 ? 3 : 4];
          } }, { key: "formats", value: function() {
            var t4 = this, e2 = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];
            return e2.map(function(e3) {
              return new K(e3, t4);
            });
          } }, { key: "nationalPrefix", value: function() {
            return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];
          } }, { key: "_getNationalPrefixFormattingRule", value: function(t4) {
            return t4[this.v1 ? 4 : this.v2 ? 5 : 6];
          } }, { key: "nationalPrefixFormattingRule", value: function() {
            return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());
          } }, { key: "_nationalPrefixForParsing", value: function() {
            return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];
          } }, { key: "nationalPrefixForParsing", value: function() {
            return this._nationalPrefixForParsing() || this.nationalPrefix();
          } }, { key: "nationalPrefixTransformRule", value: function() {
            return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];
          } }, { key: "_getNationalPrefixIsOptionalWhenFormatting", value: function() {
            return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];
          } }, { key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat", value: function() {
            return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());
          } }, { key: "leadingDigits", value: function() {
            return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];
          } }, { key: "types", value: function() {
            return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];
          } }, { key: "hasTypes", value: function() {
            return (!this.types() || 0 !== this.types().length) && !!this.types();
          } }, { key: "type", value: function(t4) {
            if (this.hasTypes() && z(this.types(), t4))
              return new W(z(this.types(), t4), this);
          } }, { key: "ext", value: function() {
            return this.v1 || this.v2 ? _ : this.metadata[13] || _;
          } }]), t3;
        }(), K = function() {
          function t3(e2, n2) {
            R(this, t3), this._format = e2, this.metadata = n2;
          }
          return L(t3, [{ key: "pattern", value: function() {
            return this._format[0];
          } }, { key: "format", value: function() {
            return this._format[1];
          } }, { key: "leadingDigitsPatterns", value: function() {
            return this._format[2] || [];
          } }, { key: "nationalPrefixFormattingRule", value: function() {
            return this._format[3] || this.metadata.nationalPrefixFormattingRule();
          } }, { key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat", value: function() {
            return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();
          } }, { key: "nationalPrefixIsMandatoryWhenFormattingInNationalFormat", value: function() {
            return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();
          } }, { key: "usesNationalPrefix", value: function() {
            return !(!this.nationalPrefixFormattingRule() || H.test(this.nationalPrefixFormattingRule()));
          } }, { key: "internationalFormat", value: function() {
            return this._format[5] || this.format();
          } }]), t3;
        }(), H = /^\(?\$1\)?$/, W = function() {
          function t3(e2, n2) {
            R(this, t3), this.type = e2, this.metadata = n2;
          }
          return L(t3, [{ key: "pattern", value: function() {
            return this.metadata.v1 ? this.type : this.type[0];
          } }, { key: "possibleLengths", value: function() {
            if (!this.metadata.v1)
              return this.type[1] || this.metadata.possibleLengths();
          } }]), t3;
        }();
        function z(t3, e2) {
          switch (e2) {
            case "FIXED_LINE":
              return t3[0];
            case "MOBILE":
              return t3[1];
            case "TOLL_FREE":
              return t3[2];
            case "PREMIUM_RATE":
              return t3[3];
            case "PERSONAL_NUMBER":
              return t3[4];
            case "VOICEMAIL":
              return t3[5];
            case "UAN":
              return t3[6];
            case "PAGER":
              return t3[7];
            case "VOIP":
              return t3[8];
            case "SHARED_COST":
              return t3[9];
          }
        }
        function Y(t3) {
          if (!t3)
            throw new Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");
          if (!Z(t3) || !Z(t3.countries))
            throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat(Z(t3) ? "an object of shape: { " + Object.keys(t3).join(", ") + " }" : "a " + q(t3) + ": " + t3, "."));
        }
        var Z = function(t3) {
          return "object" === M(t3);
        }, q = function(t3) {
          return M(t3);
        };
        function J(t3, e2) {
          if (e2 = new V(e2), e2.hasCountry(t3))
            return e2.country(t3).countryCallingCode();
          throw new Error("Unknown country: ".concat(t3));
        }
        function X(t3, e2) {
          return void 0 !== e2.countries[t3];
        }
        function Q(t3) {
          var e2 = t3.version;
          "number" === typeof e2 ? (this.v1 = 1 === e2, this.v2 = 2 === e2, this.v3 = 3 === e2, this.v4 = 4 === e2) : e2 ? -1 === k(e2, F) ? this.v2 = true : -1 === k(e2, B) ? this.v3 = true : this.v4 = true : this.v1 = true;
        }
        var tt = ";ext=", et = function(t3) {
          return "([".concat(C, "]{1,").concat(t3, "})");
        };
        function nt(t3) {
          var e2 = "20", n2 = "15", r2 = "9", d2 = "6", i2 = "[ \xA0\\t,]*", o2 = "[:\\.\uFF0E]?[ \xA0\\t,-]*", a2 = "#?", u2 = "(?:e?xt(?:ensi(?:o\u0301?|\xF3))?n?|\uFF45?\uFF58\uFF54\uFF4E?|\u0434\u043E\u0431|anexo)", c2 = "(?:[x\uFF58#\uFF03~\uFF5E]|int|\uFF49\uFF4E\uFF54)", $2 = "[- ]+", s2 = "[ \xA0\\t]*", f2 = "(?:,{2}|;)", l2 = tt + et(e2), p2 = i2 + u2 + o2 + et(e2) + a2, h2 = i2 + c2 + o2 + et(r2) + a2, v2 = $2 + et(d2) + "#", y2 = s2 + f2 + o2 + et(n2) + a2, b2 = s2 + "(?:,)+" + o2 + et(r2) + a2;
          return l2 + "|" + p2 + "|" + h2 + "|" + v2 + "|" + y2 + "|" + b2;
        }
        var rt = "[" + C + "]{" + g + "}", dt = "[" + j + "]{0,1}(?:[" + N + "]*[" + C + "]){3,}[" + N + C + "]*", it = dt + "(?:" + nt() + ")?", ot = new RegExp("^" + rt + "$|^" + it + "$", "i");
        function at(t3) {
          return t3.length >= g && ot.test(t3);
        }
        var ut = new RegExp("(?:" + nt() + ")$", "i");
        function ct(t3) {
          var e2 = t3.search(ut);
          if (e2 < 0)
            return {};
          var n2 = t3.slice(0, e2), r2 = t3.match(ut), d2 = 1;
          while (d2 < r2.length) {
            if (r2[d2])
              return { number: n2, ext: r2[d2] };
            d2++;
          }
        }
        var $t = { 0: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", "\uFF10": "0", "\uFF11": "1", "\uFF12": "2", "\uFF13": "3", "\uFF14": "4", "\uFF15": "5", "\uFF16": "6", "\uFF17": "7", "\uFF18": "8", "\uFF19": "9", "\u0660": "0", "\u0661": "1", "\u0662": "2", "\u0663": "3", "\u0664": "4", "\u0665": "5", "\u0666": "6", "\u0667": "7", "\u0668": "8", "\u0669": "9", "\u06F0": "0", "\u06F1": "1", "\u06F2": "2", "\u06F3": "3", "\u06F4": "4", "\u06F5": "5", "\u06F6": "6", "\u06F7": "7", "\u06F8": "8", "\u06F9": "9" };
        function st(t3) {
          return $t[t3];
        }
        function ft(t3) {
          var e2 = "", n2 = t3.split(""), r2 = Array.isArray(n2), d2 = 0;
          for (n2 = r2 ? n2 : n2[Symbol.iterator](); ; ) {
            var i2;
            if (r2) {
              if (d2 >= n2.length)
                break;
              i2 = n2[d2++];
            } else {
              if (d2 = n2.next(), d2.done)
                break;
              i2 = d2.value;
            }
            var o2 = i2;
            e2 += lt(o2, e2) || "";
          }
          return e2;
        }
        function lt(t3, e2) {
          if ("+" === t3) {
            if (e2)
              return;
            return "+";
          }
          return st(t3);
        }
        function pt(t3, e2) {
          var n2 = t3.slice(), r2 = e2, d2 = Array.isArray(r2), i2 = 0;
          for (r2 = d2 ? r2 : r2[Symbol.iterator](); ; ) {
            var o2;
            if (d2) {
              if (i2 >= r2.length)
                break;
              o2 = r2[i2++];
            } else {
              if (i2 = r2.next(), i2.done)
                break;
              o2 = i2.value;
            }
            var a2 = o2;
            t3.indexOf(a2) < 0 && n2.push(a2);
          }
          return n2.sort(function(t4, e3) {
            return t4 - e3;
          });
        }
        function ht(t3, e2) {
          return vt(t3, void 0, e2);
        }
        function vt(t3, e2, n2) {
          var r2 = n2.type(e2), d2 = r2 && r2.possibleLengths() || n2.possibleLengths();
          if (!d2)
            return "IS_POSSIBLE";
          if ("FIXED_LINE_OR_MOBILE" === e2) {
            if (!n2.type("FIXED_LINE"))
              return vt(t3, "MOBILE", n2);
            var i2 = n2.type("MOBILE");
            i2 && (d2 = pt(d2, i2.possibleLengths()));
          } else if (e2 && !r2)
            return "INVALID_LENGTH";
          var o2 = t3.length, a2 = d2[0];
          return a2 === o2 ? "IS_POSSIBLE" : a2 > o2 ? "TOO_SHORT" : d2[d2.length - 1] < o2 ? "TOO_LONG" : d2.indexOf(o2, 1) >= 0 ? "IS_POSSIBLE" : "INVALID_LENGTH";
        }
        function yt(t3, e2, n2) {
          if (void 0 === e2 && (e2 = {}), n2 = new V(n2), e2.v2) {
            if (!t3.countryCallingCode)
              throw new Error("Invalid phone number object passed");
            n2.selectNumberingPlan(t3.countryCallingCode);
          } else {
            if (!t3.phone)
              return false;
            if (t3.country) {
              if (!n2.hasCountry(t3.country))
                throw new Error("Unknown country: ".concat(t3.country));
              n2.country(t3.country);
            } else {
              if (!t3.countryCallingCode)
                throw new Error("Invalid phone number object passed");
              n2.selectNumberingPlan(t3.countryCallingCode);
            }
          }
          if (n2.possibleLengths())
            return bt(t3.phone || t3.nationalNumber, n2);
          if (t3.countryCallingCode && n2.isNonGeographicCallingCode(t3.countryCallingCode))
            return true;
          throw new Error('Missing "possibleLengths" in metadata. Perhaps the metadata has been generated before v1.0.18.');
        }
        function bt(t3, e2) {
          switch (ht(t3, e2)) {
            case "IS_POSSIBLE":
              return true;
            default:
              return false;
          }
        }
        function gt(t3, e2) {
          return Ct(t3) || Ot(t3, e2) || mt();
        }
        function mt() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
        function Ot(t3, e2) {
          var n2 = [], r2 = true, d2 = false, i2 = void 0;
          try {
            for (var o2, a2 = t3[Symbol.iterator](); !(r2 = (o2 = a2.next()).done); r2 = true)
              if (n2.push(o2.value), e2 && n2.length === e2)
                break;
          } catch (u2) {
            d2 = true, i2 = u2;
          } finally {
            try {
              r2 || null == a2["return"] || a2["return"]();
            } finally {
              if (d2)
                throw i2;
            }
          }
          return n2;
        }
        function Ct(t3) {
          if (Array.isArray(t3))
            return t3;
        }
        function xt(t3) {
          var e2, n2;
          t3 = t3.replace(/^tel:/, "tel=");
          var r2 = t3.split(";"), d2 = Array.isArray(r2), i2 = 0;
          for (r2 = d2 ? r2 : r2[Symbol.iterator](); ; ) {
            var o2;
            if (d2) {
              if (i2 >= r2.length)
                break;
              o2 = r2[i2++];
            } else {
              if (i2 = r2.next(), i2.done)
                break;
              o2 = i2.value;
            }
            var a2 = o2, u2 = a2.split("="), c2 = gt(u2, 2), $2 = c2[0], s2 = c2[1];
            switch ($2) {
              case "tel":
                e2 = s2;
                break;
              case "ext":
                n2 = s2;
                break;
              case "phone-context":
                "+" === s2[0] && (e2 = s2 + e2);
                break;
            }
          }
          if (!at(e2))
            return {};
          var f2 = { number: e2 };
          return n2 && (f2.ext = n2), f2;
        }
        function wt(t3) {
          var e2 = t3.number, n2 = t3.ext;
          if (!e2)
            return "";
          if ("+" !== e2[0])
            throw new Error('"formatRFC3966()" expects "number" to be in E.164 format.');
          return "tel:".concat(e2).concat(n2 ? ";ext=" + n2 : "");
        }
        function St(t3, e2) {
          return t3 = t3 || "", new RegExp("^(?:" + e2 + ")$").test(t3);
        }
        var Et = ["MOBILE", "PREMIUM_RATE", "TOLL_FREE", "SHARED_COST", "VOIP", "PERSONAL_NUMBER", "PAGER", "UAN", "VOICEMAIL"];
        function Pt(t3, e2, n2) {
          if (e2 = e2 || {}, t3.country) {
            n2 = new V(n2), n2.selectNumberingPlan(t3.country, t3.countryCallingCode);
            var r2 = e2.v2 ? t3.nationalNumber : t3.phone;
            if (St(r2, n2.nationalNumberPattern())) {
              if (It(r2, "FIXED_LINE", n2))
                return n2.type("MOBILE") && "" === n2.type("MOBILE").pattern() ? "FIXED_LINE_OR_MOBILE" : n2.type("MOBILE") ? It(r2, "MOBILE", n2) ? "FIXED_LINE_OR_MOBILE" : "FIXED_LINE" : "FIXED_LINE_OR_MOBILE";
              for (var d2 = 0, i2 = Et; d2 < i2.length; d2++) {
                var o2 = i2[d2];
                if (It(r2, o2, n2))
                  return o2;
              }
            }
          }
        }
        function It(t3, e2, n2) {
          return e2 = n2.type(e2), !(!e2 || !e2.pattern()) && (!(e2.possibleLengths() && e2.possibleLengths().indexOf(t3.length) < 0) && St(t3, e2.pattern()));
        }
        function Nt(t3, e2, n2) {
          if (e2 = e2 || {}, n2 = new V(n2), !t3.country)
            return false;
          if (n2.selectNumberingPlan(t3.country, t3.countryCallingCode), n2.hasTypes())
            return void 0 !== Pt(t3, e2, n2.metadata);
          var r2 = e2.v2 ? t3.nationalNumber : t3.phone;
          return St(r2, n2.nationalNumberPattern());
        }
        function jt(t3) {
          return t3.replace(new RegExp("[".concat(N, "]+"), "g"), " ").trim();
        }
        var Tt = /(\$\d)/;
        function At(t3, e2, n2) {
          var r2 = n2.useInternationalFormat, d2 = n2.withNationalPrefix, i2 = (n2.carrierCode, n2.metadata, t3.replace(new RegExp(e2.pattern()), r2 ? e2.internationalFormat() : d2 && e2.nationalPrefixFormattingRule() ? e2.format().replace(Tt, e2.nationalPrefixFormattingRule()) : e2.format()));
          return r2 ? jt(i2) : i2;
        }
        var kt = /^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/;
        function Mt(t3, e2, n2) {
          var r2 = new V(n2);
          return r2.selectNumberingPlan(t3, e2), kt.test(r2.IDDPrefix()) ? r2.IDDPrefix() : r2.defaultIDDPrefix();
        }
        function Rt(t3) {
          for (var e2 = 1; e2 < arguments.length; e2++) {
            var n2 = null != arguments[e2] ? arguments[e2] : {}, r2 = Object.keys(n2);
            "function" === typeof Object.getOwnPropertySymbols && (r2 = r2.concat(Object.getOwnPropertySymbols(n2).filter(function(t4) {
              return Object.getOwnPropertyDescriptor(n2, t4).enumerable;
            }))), r2.forEach(function(e3) {
              Dt(t3, e3, n2[e3]);
            });
          }
          return t3;
        }
        function Dt(t3, e2, n2) {
          return e2 in t3 ? Object.defineProperty(t3, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t3[e2] = n2, t3;
        }
        var Lt = { formatExtension: function(t3, e2, n2) {
          return "".concat(t3).concat(n2.ext()).concat(e2);
        } };
        function Ft(t3, e2, n2, r2) {
          if (n2 = n2 ? Rt({}, Lt, n2) : Lt, r2 = new V(r2), t3.country && "001" !== t3.country) {
            if (!r2.hasCountry(t3.country))
              throw new Error("Unknown country: ".concat(t3.country));
            r2.country(t3.country);
          } else {
            if (!t3.countryCallingCode)
              return t3.phone || "";
            r2.selectNumberingPlan(t3.countryCallingCode);
          }
          var d2, i2 = r2.countryCallingCode(), o2 = n2.v2 ? t3.nationalNumber : t3.phone;
          switch (e2) {
            case "NATIONAL":
              return o2 ? (d2 = Bt(o2, t3.carrierCode, "NATIONAL", r2, n2), Gt(d2, t3.ext, r2, n2.formatExtension)) : "";
            case "INTERNATIONAL":
              return o2 ? (d2 = Bt(o2, null, "INTERNATIONAL", r2, n2), d2 = "+".concat(i2, " ").concat(d2), Gt(d2, t3.ext, r2, n2.formatExtension)) : "+".concat(i2);
            case "E.164":
              return "+".concat(i2).concat(o2);
            case "RFC3966":
              return wt({ number: "+".concat(i2).concat(o2), ext: t3.ext });
            case "IDD":
              if (!n2.fromCountry)
                return;
              var a2 = Vt(o2, t3.carrierCode, i2, n2.fromCountry, r2);
              return Gt(a2, t3.ext, r2, n2.formatExtension);
            default:
              throw new Error('Unknown "format" argument passed to "formatNumber()": "'.concat(e2, '"'));
          }
        }
        function Bt(t3, e2, n2, r2, d2) {
          var i2 = _t(r2.formats(), t3);
          return i2 ? At(t3, i2, { useInternationalFormat: "INTERNATIONAL" === n2, withNationalPrefix: !i2.nationalPrefixIsOptionalWhenFormattingInNationalFormat() || !d2 || false !== d2.nationalPrefix, carrierCode: e2, metadata: r2 }) : t3;
        }
        function _t(t3, e2) {
          var n2 = t3, r2 = Array.isArray(n2), d2 = 0;
          for (n2 = r2 ? n2 : n2[Symbol.iterator](); ; ) {
            var i2;
            if (r2) {
              if (d2 >= n2.length)
                break;
              i2 = n2[d2++];
            } else {
              if (d2 = n2.next(), d2.done)
                break;
              i2 = d2.value;
            }
            var o2 = i2;
            if (o2.leadingDigitsPatterns().length > 0) {
              var a2 = o2.leadingDigitsPatterns()[o2.leadingDigitsPatterns().length - 1];
              if (0 !== e2.search(a2))
                continue;
            }
            if (St(e2, o2.pattern()))
              return o2;
          }
        }
        function Gt(t3, e2, n2, r2) {
          return e2 ? r2(t3, e2, n2) : t3;
        }
        function Vt(t3, e2, n2, r2, d2) {
          var i2 = J(r2, d2.metadata);
          if (i2 === n2) {
            var o2 = Bt(t3, e2, "NATIONAL", d2);
            return "1" === n2 ? n2 + " " + o2 : o2;
          }
          var a2 = Mt(r2, void 0, d2.metadata);
          if (a2)
            return "".concat(a2, " ").concat(n2, " ").concat(Bt(t3, null, "INTERNATIONAL", d2));
        }
        function Ut(t3) {
          for (var e2 = 1; e2 < arguments.length; e2++) {
            var n2 = null != arguments[e2] ? arguments[e2] : {}, r2 = Object.keys(n2);
            "function" === typeof Object.getOwnPropertySymbols && (r2 = r2.concat(Object.getOwnPropertySymbols(n2).filter(function(t4) {
              return Object.getOwnPropertyDescriptor(n2, t4).enumerable;
            }))), r2.forEach(function(e3) {
              Kt(t3, e3, n2[e3]);
            });
          }
          return t3;
        }
        function Kt(t3, e2, n2) {
          return e2 in t3 ? Object.defineProperty(t3, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t3[e2] = n2, t3;
        }
        function Ht(t3, e2) {
          if (!(t3 instanceof e2))
            throw new TypeError("Cannot call a class as a function");
        }
        function Wt(t3, e2) {
          for (var n2 = 0; n2 < e2.length; n2++) {
            var r2 = e2[n2];
            r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t3, r2.key, r2);
          }
        }
        function zt(t3, e2, n2) {
          return e2 && Wt(t3.prototype, e2), n2 && Wt(t3, n2), t3;
        }
        var Yt = false, Zt = function() {
          function t3(e2, n2, r2) {
            if (Ht(this, t3), !e2)
              throw new TypeError("`country` or `countryCallingCode` not passed");
            if (!n2)
              throw new TypeError("`nationalNumber` not passed");
            var d2 = new V(r2);
            qt(e2) ? (this.country = e2, d2.country(e2), e2 = d2.countryCallingCode()) : Yt && d2.isNonGeographicCallingCode(e2) && (this.country = "001"), this.countryCallingCode = e2, this.nationalNumber = n2, this.number = "+" + this.countryCallingCode + this.nationalNumber, this.metadata = r2;
          }
          return zt(t3, [{ key: "isPossible", value: function() {
            return yt(this, { v2: true }, this.metadata);
          } }, { key: "isValid", value: function() {
            return Nt(this, { v2: true }, this.metadata);
          } }, { key: "isNonGeographic", value: function() {
            var t4 = new V(this.metadata);
            return t4.isNonGeographicCallingCode(this.countryCallingCode);
          } }, { key: "isEqual", value: function(t4) {
            return this.number === t4.number && this.ext === t4.ext;
          } }, { key: "getType", value: function() {
            return Pt(this, { v2: true }, this.metadata);
          } }, { key: "format", value: function(t4, e2) {
            return Ft(this, t4, e2 ? Ut({}, e2, { v2: true }) : { v2: true }, this.metadata);
          } }, { key: "formatNational", value: function(t4) {
            return this.format("NATIONAL", t4);
          } }, { key: "formatInternational", value: function(t4) {
            return this.format("INTERNATIONAL", t4);
          } }, { key: "getURI", value: function(t4) {
            return this.format("RFC3966", t4);
          } }]), t3;
        }(), qt = function(t3) {
          return /^[A-Z]{2}$/.test(t3);
        }, Jt = new RegExp("([" + C + "])");
        function Xt(t3, e2, n2, r2) {
          if (e2) {
            var d2 = new V(r2);
            d2.selectNumberingPlan(e2, n2);
            var i2 = new RegExp(d2.IDDPrefix());
            if (0 === t3.search(i2)) {
              t3 = t3.slice(t3.match(i2)[0].length);
              var o2 = t3.match(Jt);
              if (!(o2 && null != o2[1] && o2[1].length > 0 && "0" === o2[1]))
                return t3;
            }
          }
        }
        function Qt(t3, e2) {
          if (t3 && e2.numberingPlan.nationalPrefixForParsing()) {
            var n2 = new RegExp("^(?:" + e2.numberingPlan.nationalPrefixForParsing() + ")"), r2 = n2.exec(t3);
            if (r2) {
              var d2, i2, o2, a2 = r2.length - 1, u2 = a2 > 0 && r2[a2];
              if (e2.nationalPrefixTransformRule() && u2)
                d2 = t3.replace(n2, e2.nationalPrefixTransformRule()), a2 > 1 && (i2 = r2[1]);
              else {
                var c2 = r2[0];
                d2 = t3.slice(c2.length), u2 && (i2 = r2[1]);
              }
              if (u2) {
                var $2 = t3.indexOf(r2[1]), s2 = t3.slice(0, $2);
                s2 === e2.numberingPlan.nationalPrefix() && (o2 = e2.numberingPlan.nationalPrefix());
              } else
                o2 = r2[0];
              return { nationalNumber: d2, nationalPrefix: o2, carrierCode: i2 };
            }
          }
          return { nationalNumber: t3 };
        }
        function te(t3, e2) {
          var n2 = Qt(t3, e2), r2 = n2.nationalNumber, d2 = n2.carrierCode;
          if (!ee(t3, r2, e2))
            return { nationalNumber: t3 };
          if (t3.length !== r2.length + (d2 ? d2.length : 0) && e2.possibleLengths())
            switch (ht(r2, e2)) {
              case "TOO_SHORT":
              case "INVALID_LENGTH":
                return { nationalNumber: t3 };
            }
          return { nationalNumber: r2, carrierCode: d2 };
        }
        function ee(t3, e2, n2) {
          return !(St(t3, n2.nationalNumberPattern()) && !St(e2, n2.nationalNumberPattern()));
        }
        function ne(t3, e2, n2, r2) {
          var d2 = e2 ? J(e2, r2) : n2;
          if (0 === t3.indexOf(d2)) {
            r2 = new V(r2), r2.selectNumberingPlan(e2, n2);
            var i2 = t3.slice(d2.length), o2 = te(i2, r2), a2 = o2.nationalNumber, u2 = te(t3, r2), c2 = u2.nationalNumber;
            if (!St(c2, r2.nationalNumberPattern()) && St(a2, r2.nationalNumberPattern()) || "TOO_LONG" === ht(c2, r2))
              return { countryCallingCode: d2, number: i2 };
          }
          return { number: t3 };
        }
        function re(t3, e2, n2, r2) {
          if (!t3)
            return {};
          if ("+" !== t3[0]) {
            var d2 = Xt(t3, e2, n2, r2);
            if (!d2 || d2 === t3) {
              if (e2 || n2) {
                var i2 = ne(t3, e2, n2, r2), o2 = i2.countryCallingCode, a2 = i2.number;
                if (o2)
                  return { countryCallingCode: o2, number: a2 };
              }
              return { number: t3 };
            }
            t3 = "+" + d2;
          }
          if ("0" === t3[1])
            return {};
          r2 = new V(r2);
          var u2 = 2;
          while (u2 - 1 <= O && u2 <= t3.length) {
            var c2 = t3.slice(1, u2);
            if (r2.hasCallingCode(c2))
              return r2.selectNumberingPlan(c2), { countryCallingCode: c2, number: t3.slice(u2) };
            u2++;
          }
          return {};
        }
        var de = false;
        function ie(t3, e2, n2) {
          if (de && n2.isNonGeographicCallingCode(t3))
            return "001";
          var r2 = n2.getCountryCodesForCallingCode(t3);
          return r2 ? 1 === r2.length ? r2[0] : oe(r2, e2, n2.metadata) : void 0;
        }
        function oe(t3, e2, n2) {
          n2 = new V(n2);
          var r2 = t3, d2 = Array.isArray(r2), i2 = 0;
          for (r2 = d2 ? r2 : r2[Symbol.iterator](); ; ) {
            var o2;
            if (d2) {
              if (i2 >= r2.length)
                break;
              o2 = r2[i2++];
            } else {
              if (i2 = r2.next(), i2.done)
                break;
              o2 = i2.value;
            }
            var a2 = o2;
            if (n2.country(a2), n2.leadingDigits()) {
              if (e2 && 0 === e2.search(n2.leadingDigits()))
                return a2;
            } else if (Pt({ phone: e2, country: a2 }, void 0, n2.metadata))
              return a2;
          }
        }
        var ae = 250, ue = new RegExp("[" + j + C + "]"), ce = new RegExp("[^" + C + "#]+$"), $e = false;
        function se(t3, e2, n2) {
          if (e2 = e2 || {}, n2 = new V(n2), e2.defaultCountry && !n2.hasCountry(e2.defaultCountry)) {
            if (e2.v2)
              throw new A("INVALID_COUNTRY");
            throw new Error("Unknown country: ".concat(e2.defaultCountry));
          }
          var r2 = le(t3, e2.v2), d2 = r2.number, i2 = r2.ext;
          if (!d2) {
            if (e2.v2)
              throw new A("NOT_A_NUMBER");
            return {};
          }
          var o2 = he(d2, e2.defaultCountry, e2.defaultCallingCode, n2), a2 = o2.country, u2 = o2.nationalNumber, c2 = o2.countryCallingCode, $2 = o2.carrierCode;
          if (!n2.hasSelectedNumberingPlan()) {
            if (e2.v2)
              throw new A("INVALID_COUNTRY");
            return {};
          }
          if (!u2 || u2.length < g) {
            if (e2.v2)
              throw new A("TOO_SHORT");
            return {};
          }
          if (u2.length > m) {
            if (e2.v2)
              throw new A("TOO_LONG");
            return {};
          }
          if (e2.v2) {
            var s2 = new Zt(c2, u2, n2.metadata);
            return a2 && (s2.country = a2), $2 && (s2.carrierCode = $2), i2 && (s2.ext = i2), s2;
          }
          var f2 = !!(e2.extended ? n2.hasSelectedNumberingPlan() : a2) && St(u2, n2.nationalNumberPattern());
          return e2.extended ? { country: a2, countryCallingCode: c2, carrierCode: $2, valid: f2, possible: !!f2 || !(true !== e2.extended || !n2.possibleLengths() || !bt(u2, n2)), phone: u2, ext: i2 } : f2 ? pe(a2, u2, i2) : {};
        }
        function fe(t3, e2) {
          if (t3)
            if (t3.length > ae) {
              if (e2)
                throw new A("TOO_LONG");
            } else {
              var n2 = t3.search(ue);
              if (!(n2 < 0))
                return t3.slice(n2).replace(ce, "");
            }
        }
        function le(t3, e2) {
          if (t3 && 0 === t3.indexOf("tel:"))
            return xt(t3);
          var n2 = fe(t3, e2);
          if (!n2 || !at(n2))
            return {};
          var r2 = ct(n2);
          return r2.ext ? r2 : { number: n2 };
        }
        function pe(t3, e2, n2) {
          var r2 = { country: t3, phone: e2 };
          return n2 && (r2.ext = n2), r2;
        }
        function he(t3, e2, n2, r2) {
          var d2, i2 = re(ft(t3), e2, n2, r2.metadata), o2 = i2.countryCallingCode, a2 = i2.number;
          if (o2)
            r2.selectNumberingPlan(o2);
          else {
            if (!a2 || !e2 && !n2)
              return {};
            r2.selectNumberingPlan(e2, n2), e2 ? d2 = e2 : $e && r2.isNonGeographicCallingCode(n2) && (d2 = "001"), o2 = n2 || J(e2, r2.metadata);
          }
          if (!a2)
            return { countryCallingCode: o2 };
          var u2 = te(ft(a2), r2), c2 = u2.nationalNumber, $2 = u2.carrierCode, s2 = ie(o2, c2, r2);
          return s2 && (d2 = s2, "001" === s2 || r2.country(d2)), { country: d2, countryCallingCode: o2, nationalNumber: c2, carrierCode: $2 };
        }
        function ve(t3) {
          for (var e2 = 1; e2 < arguments.length; e2++) {
            var n2 = null != arguments[e2] ? arguments[e2] : {}, r2 = Object.keys(n2);
            "function" === typeof Object.getOwnPropertySymbols && (r2 = r2.concat(Object.getOwnPropertySymbols(n2).filter(function(t4) {
              return Object.getOwnPropertyDescriptor(n2, t4).enumerable;
            }))), r2.forEach(function(e3) {
              ye(t3, e3, n2[e3]);
            });
          }
          return t3;
        }
        function ye(t3, e2, n2) {
          return e2 in t3 ? Object.defineProperty(t3, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t3[e2] = n2, t3;
        }
        function be(t3, e2, n2) {
          return se(t3, ve({}, e2, { v2: true }), n2);
        }
        function ge(t3) {
          return ge = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(t4) {
            return typeof t4;
          } : function(t4) {
            return t4 && "function" === typeof Symbol && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
          }, ge(t3);
        }
        function me(t3) {
          for (var e2 = 1; e2 < arguments.length; e2++) {
            var n2 = null != arguments[e2] ? arguments[e2] : {}, r2 = Object.keys(n2);
            "function" === typeof Object.getOwnPropertySymbols && (r2 = r2.concat(Object.getOwnPropertySymbols(n2).filter(function(t4) {
              return Object.getOwnPropertyDescriptor(n2, t4).enumerable;
            }))), r2.forEach(function(e3) {
              Oe(t3, e3, n2[e3]);
            });
          }
          return t3;
        }
        function Oe(t3, e2, n2) {
          return e2 in t3 ? Object.defineProperty(t3, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t3[e2] = n2, t3;
        }
        function Ce(t3, e2) {
          return Se(t3) || we(t3, e2) || xe();
        }
        function xe() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
        function we(t3, e2) {
          var n2 = [], r2 = true, d2 = false, i2 = void 0;
          try {
            for (var o2, a2 = t3[Symbol.iterator](); !(r2 = (o2 = a2.next()).done); r2 = true)
              if (n2.push(o2.value), e2 && n2.length === e2)
                break;
          } catch (u2) {
            d2 = true, i2 = u2;
          } finally {
            try {
              r2 || null == a2["return"] || a2["return"]();
            } finally {
              if (d2)
                throw i2;
            }
          }
          return n2;
        }
        function Se(t3) {
          if (Array.isArray(t3))
            return t3;
        }
        function Ee(t3) {
          var e2, n2, r2, d2 = Array.prototype.slice.call(t3), i2 = Ce(d2, 4), o2 = i2[0], a2 = i2[1], u2 = i2[2], c2 = i2[3];
          if ("string" !== typeof o2)
            throw new TypeError("A text for parsing must be a string.");
          if (e2 = o2, a2 && "string" !== typeof a2) {
            if (!Pe(a2))
              throw new Error("Invalid second argument: ".concat(a2));
            u2 ? (n2 = a2, r2 = u2) : r2 = a2;
          } else
            c2 ? (n2 = u2, r2 = c2) : (n2 = void 0, r2 = u2), a2 && (n2 = me({ defaultCountry: a2 }, n2));
          return { text: e2, options: n2, metadata: r2 };
        }
        var Pe = function(t3) {
          return "object" === ge(t3);
        };
        function Ie(t3) {
          for (var e2 = 1; e2 < arguments.length; e2++) {
            var n2 = null != arguments[e2] ? arguments[e2] : {}, r2 = Object.keys(n2);
            "function" === typeof Object.getOwnPropertySymbols && (r2 = r2.concat(Object.getOwnPropertySymbols(n2).filter(function(t4) {
              return Object.getOwnPropertyDescriptor(n2, t4).enumerable;
            }))), r2.forEach(function(e3) {
              Ne(t3, e3, n2[e3]);
            });
          }
          return t3;
        }
        function Ne(t3, e2, n2) {
          return e2 in t3 ? Object.defineProperty(t3, e2, { value: n2, enumerable: true, configurable: true, writable: true }) : t3[e2] = n2, t3;
        }
        function je(t3, e2, n2) {
          e2 && e2.defaultCountry && !X(e2.defaultCountry, n2) && (e2 = Ie({}, e2, { defaultCountry: void 0 }));
          try {
            return be(t3, e2, n2);
          } catch (r2) {
            if (!(r2 instanceof A))
              throw r2;
          }
        }
        function Te() {
          var t3 = Ee(arguments), e2 = t3.text, n2 = t3.options, r2 = t3.metadata;
          return je(e2, n2, r2);
        }
        function Ae() {
          return b(Te, arguments);
        }
        var ke = n("025e"), Me = { beforeMount: function(t3, e2, n2) {
          if ("function" !== typeof e2.value) {
            var r2 = n2.context.name, d2 = "[Vue-click-outside:] provided expression ".concat(e2.expression, "\n      is not a function, but has to be");
            r2 && (d2 += "Found in component ".concat(r2)), console.warn(d2);
          }
          t3.clickOutsideEvent = function(n3) {
            t3 === n3.target || t3.contains(n3.target) || e2.value(n3, t3);
          }, document.body.addEventListener("click", t3.clickOutsideEvent);
        }, unmounted: function(t3) {
          document.body.removeEventListener("click", t3.clickOutsideEvent);
        } };
        function Re(t3) {
          var e2 = ke["a"].options[t3];
          return "undefined" === typeof e2 ? ke["a"].options[t3] : e2;
        }
        var De = { name: "VueTelInput", directives: { clickOutside: Me }, props: { value: { type: String, default: "" }, allCountries: { type: Array, default: function() {
          return Re("allCountries");
        } }, autoFormat: { type: Boolean, default: function() {
          return Re("autoFormat");
        } }, customValidate: { type: [Boolean, RegExp], default: function() {
          return Re("customValidate");
        } }, defaultCountry: { type: String, default: function() {
          return Re("defaultCountry");
        } }, disabled: { type: Boolean, default: function() {
          return Re("disabled");
        } }, autoDefaultCountry: { type: Boolean, default: function() {
          return Re("autoDefaultCountry");
        } }, dropdownOptions: { type: Object, default: function() {
          return Re("dropdownOptions");
        } }, ignoredCountries: { type: Array, default: function() {
          return Re("ignoredCountries");
        } }, inputOptions: { type: Object, default: function() {
          return Re("inputOptions");
        } }, invalidMsg: { type: String, default: function() {
          return Re("invalidMsg");
        } }, mode: { type: String, default: function() {
          return Re("mode");
        } }, onlyCountries: { type: Array, default: function() {
          return Re("onlyCountries");
        } }, preferredCountries: { type: Array, default: function() {
          return Re("preferredCountries");
        } }, validCharactersOnly: { type: Boolean, default: function() {
          return Re("validCharactersOnly");
        } }, styleClasses: { type: [String, Array, Object], default: function() {
          return Re("styleClasses");
        } } }, data: function() {
          return { phone: "", activeCountryCode: "", open: false, finishMounted: false, selectedIndex: null, typeToFindInput: "", typeToFindTimer: null, dropdownOpenDirection: "below", parsedPlaceholder: this.inputOptions.placeholder };
        }, computed: { activeCountry: function() {
          return this.findCountry(this.activeCountryCode);
        }, parsedMode: function() {
          return "auto" === this.mode ? this.phone && "+" === this.phone[0] ? "international" : "national" : ["international", "national"].includes(this.mode) ? this.mode : (console.error('Invalid value of prop "mode"'), "international");
        }, filteredCountries: function() {
          var t3 = this;
          return this.onlyCountries.length ? this.allCountries.filter(function(e2) {
            var n2 = e2.iso2;
            return t3.onlyCountries.some(function(t4) {
              return t4.toUpperCase() === n2;
            });
          }) : this.ignoredCountries.length ? this.allCountries.filter(function(e2) {
            var n2 = e2.iso2;
            return !t3.ignoredCountries.includes(n2.toUpperCase()) && !t3.ignoredCountries.includes(n2.toLowerCase());
          }) : this.allCountries;
        }, sortedCountries: function() {
          var t3 = this.getCountries(this.preferredCountries).map(function(t4) {
            return Object(v["a"])(Object(v["a"])({}, t4), {}, { preferred: true });
          });
          return [].concat(h(t3), h(this.filteredCountries));
        }, phoneObject: function() {
          var t3, e2, n2, r2;
          r2 = "+" === (null === (t3 = this.phone) || void 0 === t3 ? void 0 : t3[0]) ? Ae(this.phone) || {} : Ae(this.phone, this.activeCountryCode) || {};
          var d2, i2, o2 = r2, a2 = (o2.metadata, Object(c["a"])(o2, ["metadata"])), u2 = null === (e2 = (n2 = r2).isValid) || void 0 === e2 ? void 0 : e2.call(n2), $2 = this.phone;
          u2 && ($2 = null === (d2 = (i2 = r2).format) || void 0 === d2 ? void 0 : d2.call(i2, this.parsedMode.toUpperCase()));
          return r2.country && (this.ignoredCountries.length || this.onlyCountries.length) && (this.findCountry(r2.country) || (u2 = false, Object.assign(r2, { country: null }))), Object.assign(a2, { countryCode: r2.country, valid: u2, country: this.activeCountry, formatted: $2 }), a2;
        } }, watch: { activeCountry: function(t3, e2) {
          t3 || null === e2 || void 0 === e2 || !e2.iso2 ? null !== t3 && void 0 !== t3 && t3.iso2 && this.$emit("country-changed", t3) : this.activeCountryCode = e2.iso2;
        }, "phoneObject.countryCode": function(t3) {
          this.activeCountryCode = t3;
        }, "phoneObject.valid": function() {
          this.$emit("validate", this.phoneObject);
        }, "phoneObject.formatted": function(t3) {
          var e2 = this;
          this.autoFormat && !this.customValidate && (this.emitInput(t3), this.$nextTick(function() {
            t3 && !e2.value && (e2.phone = t3);
          }));
        }, "inputOptions.placeholder": function() {
          this.resetPlaceholder();
        }, value: function(t3, e2) {
          var n2 = this;
          this.testCharacters() ? this.phone = t3 : this.$nextTick(function() {
            n2.phone = e2, n2.onInput();
          });
        }, open: function(t3) {
          t3 ? (this.setDropdownPosition(), this.$emit("open")) : this.$emit("close");
        } }, mounted: function() {
          var t3 = this;
          this.value && (this.phone = this.value.trim()), this.cleanInvalidCharacters(), this.initializeCountry().then(function() {
            var e2;
            !t3.phone && null !== (e2 = t3.inputOptions) && void 0 !== e2 && e2.showDialCode && t3.activeCountryCode && (t3.phone = "+".concat(t3.activeCountryCode)), t3.$emit("validate", t3.phoneObject);
          }).catch(console.error).then(function() {
            t3.finishMounted = true;
          });
        }, methods: { resetPlaceholder: function() {
          this.parsedPlaceholder = this.inputOptions.placeholder;
        }, initializeCountry: function() {
          var t3 = this;
          return new Promise(function(e2) {
            var n2;
            if ("+" !== (null === (n2 = t3.phone) || void 0 === n2 ? void 0 : n2[0])) {
              if (t3.defaultCountry)
                return t3.choose(t3.defaultCountry), void e2();
              var r2 = t3.preferredCountries[0] || t3.filteredCountries[0];
              t3.autoDefaultCountry ? Object(ke["c"])().then(function(e3) {
                t3.choose(e3 || t3.activeCountryCode);
              }).catch(function(e3) {
                console.warn(e3), t3.choose(r2);
              }).then(function() {
                e2();
              }) : (t3.choose(r2), e2());
            } else
              e2();
          });
        }, getCountries: function() {
          var t3 = this, e2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
          return e2.map(function(e3) {
            return t3.findCountry(e3);
          }).filter(Boolean);
        }, findCountry: function() {
          var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
          return this.filteredCountries.find(function(e2) {
            return e2.iso2 === t3.toUpperCase();
          });
        }, getItemClass: function(t3, e2) {
          var n2 = this.selectedIndex === t3, r2 = t3 === this.preferredCountries.length - 1, d2 = this.preferredCountries.some(function(t4) {
            return t4.toUpperCase() === e2;
          });
          return { highlighted: n2, "last-preferred": r2, preferred: d2 };
        }, choose: function(t3) {
          var e2, n2, r2 = t3;
          if ("string" === typeof r2 && (r2 = this.findCountry(r2)), r2)
            return "+" === (null === (e2 = this.phone) || void 0 === e2 ? void 0 : e2[0]) && r2.iso2 && this.phoneObject.nationalNumber ? (this.activeCountryCode = r2.iso2, void (this.phone = Ae(this.phoneObject.nationalNumber, r2.iso2).formatInternational())) : void (null !== (n2 = this.inputOptions) && void 0 !== n2 && n2.showDialCode && r2 ? this.phone = "+".concat(r2.dialCode) : (this.activeCountryCode = r2.iso2, this.emitInput(this.phone)));
        }, cleanInvalidCharacters: function() {
          var t3 = this.phone;
          if (this.validCharactersOnly) {
            var e2 = this.phone.match(/[()\-+0-9\s]*/g);
            this.phone = e2.join("");
          }
          if (this.customValidate && this.customValidate instanceof RegExp) {
            var n2 = this.phone.match(this.customValidate);
            this.phone = n2.join("");
          }
          t3 !== this.phone && this.emitInput(this.phone);
        }, testCharacters: function() {
          if (this.validCharactersOnly) {
            var t3 = /^[()\-+0-9\s]*$/.test(this.phone);
            if (!t3)
              return false;
          }
          return !this.customValidate || this.testCustomValidate();
        }, testCustomValidate: function() {
          return this.customValidate instanceof RegExp && this.customValidate.test(this.phone);
        }, onInput: function() {
          this.$refs.input.setCustomValidity(this.phoneObject.valid ? "" : this.invalidMsg), this.emitInput(this.phone);
        }, emitInput: function(t3) {
          this.$emit("input", t3, this.phoneObject, this.$refs.input);
        }, onBlur: function() {
          this.$emit("blur");
        }, onFocus: function() {
          Object(ke["d"])(this.$refs.input, this.phone.length), this.$emit("focus");
        }, onEnter: function() {
          this.$emit("enter");
        }, onSpace: function() {
          this.$emit("space");
        }, focus: function() {
          this.$refs.input.focus();
        }, toggleDropdown: function() {
          this.disabled || (this.open = !this.open);
        }, clickedOutside: function() {
          this.open = false;
        }, keyboardNav: function(t3) {
          var e2 = this;
          if (40 === t3.keyCode) {
            t3.preventDefault(), this.open = true, null === this.selectedIndex ? this.selectedIndex = 0 : this.selectedIndex = Math.min(this.sortedCountries.length - 1, this.selectedIndex + 1);
            var n2 = this.$refs.list.children[this.selectedIndex];
            n2.offsetTop + n2.clientHeight > this.$refs.list.scrollTop + this.$refs.list.clientHeight && (this.$refs.list.scrollTop = n2.offsetTop - this.$refs.list.clientHeight + n2.clientHeight);
          } else if (38 === t3.keyCode) {
            t3.preventDefault(), this.open = true, null === this.selectedIndex ? this.selectedIndex = this.sortedCountries.length - 1 : this.selectedIndex = Math.max(0, this.selectedIndex - 1);
            var r2 = this.$refs.list.children[this.selectedIndex];
            r2.offsetTop < this.$refs.list.scrollTop && (this.$refs.list.scrollTop = r2.offsetTop);
          } else if (13 === t3.keyCode)
            null !== this.selectedIndex && this.choose(this.sortedCountries[this.selectedIndex]), this.open = !this.open;
          else {
            this.typeToFindInput += t3.key, clearTimeout(this.typeToFindTimer), this.typeToFindTimer = setTimeout(function() {
              e2.typeToFindInput = "";
            }, 700);
            var d2 = this.sortedCountries.slice(this.preferredCountries.length).findIndex(function(t4) {
              return t4.name.toLowerCase().startsWith(e2.typeToFindInput);
            });
            if (d2 >= 0) {
              this.selectedIndex = this.preferredCountries.length + d2;
              var i2 = this.$refs.list.children[this.selectedIndex], o2 = i2.offsetTop < this.$refs.list.scrollTop, a2 = i2.offsetTop + i2.clientHeight > this.$refs.list.scrollTop + this.$refs.list.clientHeight;
              (o2 || a2) && (this.$refs.list.scrollTop = i2.offsetTop - this.$refs.list.clientHeight / 2);
            }
          }
        }, reset: function() {
          this.selectedIndex = this.sortedCountries.map(function(t3) {
            return t3.iso2;
          }).indexOf(this.activeCountryCode), this.open = false;
        }, setDropdownPosition: function() {
          var t3 = window.innerHeight - this.$el.getBoundingClientRect().bottom, e2 = t3 > 200;
          this.dropdownOpenDirection = e2 ? "below" : "above";
        } } };
        n("bfe1"), n("e103");
        De.render = u;
        e["a"] = De;
      }, e439: function(t2, e, n) {
        var r = n("23e7"), d = n("d039"), i = n("fc6a"), o = n("06cf").f, a = n("83ab"), u = d(function() {
          o(1);
        }), c = !a || u;
        r({ target: "Object", stat: true, forced: c, sham: !a }, { getOwnPropertyDescriptor: function(t3, e2) {
          return o(i(t3), e2);
        } });
      }, e538: function(t2, e, n) {
        var r = n("b622");
        e.f = r;
      }, e667: function(t2, e) {
        t2.exports = function(t3) {
          try {
            return { error: false, value: t3() };
          } catch (e2) {
            return { error: true, value: e2 };
          }
        };
      }, e6cf: function(t2, e, n) {
        "use strict";
        var r, d, i, o, a = n("23e7"), u = n("c430"), c = n("da84"), $ = n("d066"), s = n("fea9"), f = n("6eeb"), l = n("e2cc"), p = n("d44e"), h = n("2626"), v = n("861d"), y = n("1c0b"), b = n("19aa"), g = n("8925"), m = n("2266"), O = n("1c7e"), C = n("4840"), x = n("2cf4").set, w = n("b575"), S = n("cdf9"), E = n("44de"), P = n("f069"), I = n("e667"), N = n("69f3"), j = n("94ca"), T = n("b622"), A = n("605d"), k = n("2d00"), M = T("species"), R = "Promise", D = N.get, L = N.set, F = N.getterFor(R), B = s, _ = c.TypeError, G = c.document, V = c.process, U = $("fetch"), K = P.f, H = K, W = !!(G && G.createEvent && c.dispatchEvent), z = "function" == typeof PromiseRejectionEvent, Y = "unhandledrejection", Z = "rejectionhandled", q = 0, J = 1, X = 2, Q = 1, tt = 2, et = j(R, function() {
          var t3 = g(B) !== String(B);
          if (!t3) {
            if (66 === k)
              return true;
            if (!A && !z)
              return true;
          }
          if (u && !B.prototype["finally"])
            return true;
          if (k >= 51 && /native code/.test(B))
            return false;
          var e2 = B.resolve(1), n2 = function(t4) {
            t4(function() {
            }, function() {
            });
          }, r2 = e2.constructor = {};
          return r2[M] = n2, !(e2.then(function() {
          }) instanceof n2);
        }), nt = et || !O(function(t3) {
          B.all(t3)["catch"](function() {
          });
        }), rt = function(t3) {
          var e2;
          return !(!v(t3) || "function" != typeof (e2 = t3.then)) && e2;
        }, dt = function(t3, e2) {
          if (!t3.notified) {
            t3.notified = true;
            var n2 = t3.reactions;
            w(function() {
              var r2 = t3.value, d2 = t3.state == J, i2 = 0;
              while (n2.length > i2) {
                var o2, a2, u2, c2 = n2[i2++], $2 = d2 ? c2.ok : c2.fail, s2 = c2.resolve, f2 = c2.reject, l2 = c2.domain;
                try {
                  $2 ? (d2 || (t3.rejection === tt && ut(t3), t3.rejection = Q), true === $2 ? o2 = r2 : (l2 && l2.enter(), o2 = $2(r2), l2 && (l2.exit(), u2 = true)), o2 === c2.promise ? f2(_("Promise-chain cycle")) : (a2 = rt(o2)) ? a2.call(o2, s2, f2) : s2(o2)) : f2(r2);
                } catch (p2) {
                  l2 && !u2 && l2.exit(), f2(p2);
                }
              }
              t3.reactions = [], t3.notified = false, e2 && !t3.rejection && ot(t3);
            });
          }
        }, it = function(t3, e2, n2) {
          var r2, d2;
          W ? (r2 = G.createEvent("Event"), r2.promise = e2, r2.reason = n2, r2.initEvent(t3, false, true), c.dispatchEvent(r2)) : r2 = { promise: e2, reason: n2 }, !z && (d2 = c["on" + t3]) ? d2(r2) : t3 === Y && E("Unhandled promise rejection", n2);
        }, ot = function(t3) {
          x.call(c, function() {
            var e2, n2 = t3.facade, r2 = t3.value, d2 = at(t3);
            if (d2 && (e2 = I(function() {
              A ? V.emit("unhandledRejection", r2, n2) : it(Y, n2, r2);
            }), t3.rejection = A || at(t3) ? tt : Q, e2.error))
              throw e2.value;
          });
        }, at = function(t3) {
          return t3.rejection !== Q && !t3.parent;
        }, ut = function(t3) {
          x.call(c, function() {
            var e2 = t3.facade;
            A ? V.emit("rejectionHandled", e2) : it(Z, e2, t3.value);
          });
        }, ct = function(t3, e2, n2) {
          return function(r2) {
            t3(e2, r2, n2);
          };
        }, $t = function(t3, e2, n2) {
          t3.done || (t3.done = true, n2 && (t3 = n2), t3.value = e2, t3.state = X, dt(t3, true));
        }, st = function(t3, e2, n2) {
          if (!t3.done) {
            t3.done = true, n2 && (t3 = n2);
            try {
              if (t3.facade === e2)
                throw _("Promise can't be resolved itself");
              var r2 = rt(e2);
              r2 ? w(function() {
                var n3 = { done: false };
                try {
                  r2.call(e2, ct(st, n3, t3), ct($t, n3, t3));
                } catch (d2) {
                  $t(n3, d2, t3);
                }
              }) : (t3.value = e2, t3.state = J, dt(t3, false));
            } catch (d2) {
              $t({ done: false }, d2, t3);
            }
          }
        };
        et && (B = function(t3) {
          b(this, B, R), y(t3), r.call(this);
          var e2 = D(this);
          try {
            t3(ct(st, e2), ct($t, e2));
          } catch (n2) {
            $t(e2, n2);
          }
        }, r = function(t3) {
          L(this, { type: R, done: false, notified: false, parent: false, reactions: [], rejection: false, state: q, value: void 0 });
        }, r.prototype = l(B.prototype, { then: function(t3, e2) {
          var n2 = F(this), r2 = K(C(this, B));
          return r2.ok = "function" != typeof t3 || t3, r2.fail = "function" == typeof e2 && e2, r2.domain = A ? V.domain : void 0, n2.parent = true, n2.reactions.push(r2), n2.state != q && dt(n2, false), r2.promise;
        }, catch: function(t3) {
          return this.then(void 0, t3);
        } }), d = function() {
          var t3 = new r(), e2 = D(t3);
          this.promise = t3, this.resolve = ct(st, e2), this.reject = ct($t, e2);
        }, P.f = K = function(t3) {
          return t3 === B || t3 === i ? new d(t3) : H(t3);
        }, u || "function" != typeof s || (o = s.prototype.then, f(s.prototype, "then", function(t3, e2) {
          var n2 = this;
          return new B(function(t4, e3) {
            o.call(n2, t4, e3);
          }).then(t3, e2);
        }, { unsafe: true }), "function" == typeof U && a({ global: true, enumerable: true, forced: true }, { fetch: function(t3) {
          return S(B, U.apply(c, arguments));
        } }))), a({ global: true, wrap: true, forced: et }, { Promise: B }), p(B, R, false, true), h(R), i = $(R), a({ target: R, stat: true, forced: et }, { reject: function(t3) {
          var e2 = K(this);
          return e2.reject.call(void 0, t3), e2.promise;
        } }), a({ target: R, stat: true, forced: u || et }, { resolve: function(t3) {
          return S(u && this === i ? B : this, t3);
        } }), a({ target: R, stat: true, forced: nt }, { all: function(t3) {
          var e2 = this, n2 = K(e2), r2 = n2.resolve, d2 = n2.reject, i2 = I(function() {
            var n3 = y(e2.resolve), i3 = [], o2 = 0, a2 = 1;
            m(t3, function(t4) {
              var u2 = o2++, c2 = false;
              i3.push(void 0), a2++, n3.call(e2, t4).then(function(t5) {
                c2 || (c2 = true, i3[u2] = t5, --a2 || r2(i3));
              }, d2);
            }), --a2 || r2(i3);
          });
          return i2.error && d2(i2.value), n2.promise;
        }, race: function(t3) {
          var e2 = this, n2 = K(e2), r2 = n2.reject, d2 = I(function() {
            var d3 = y(e2.resolve);
            m(t3, function(t4) {
              d3.call(e2, t4).then(n2.resolve, r2);
            });
          });
          return d2.error && r2(d2.value), n2.promise;
        } });
      }, e893: function(t2, e, n) {
        var r = n("5135"), d = n("56ef"), i = n("06cf"), o = n("9bf2");
        t2.exports = function(t3, e2) {
          for (var n2 = d(e2), a = o.f, u = i.f, c = 0; c < n2.length; c++) {
            var $ = n2[c];
            r(t3, $) || a(t3, $, u(e2, $));
          }
        };
      }, e8b5: function(t2, e, n) {
        var r = n("c6b6");
        t2.exports = Array.isArray || function(t3) {
          return "Array" == r(t3);
        };
      }, e95a: function(t2, e, n) {
        var r = n("b622"), d = n("3f8c"), i = r("iterator"), o = Array.prototype;
        t2.exports = function(t3) {
          return void 0 !== t3 && (d.Array === t3 || o[i] === t3);
        };
      }, f069: function(t2, e, n) {
        "use strict";
        var r = n("1c0b"), d = function(t3) {
          var e2, n2;
          this.promise = new t3(function(t4, r2) {
            if (void 0 !== e2 || void 0 !== n2)
              throw TypeError("Bad Promise constructor");
            e2 = t4, n2 = r2;
          }), this.resolve = r(e2), this.reject = r(n2);
        };
        t2.exports.f = function(t3) {
          return new d(t3);
        };
      }, f3f2: function(t2, e, n) {
      }, f5df: function(t2, e, n) {
        var r = n("00ee"), d = n("c6b6"), i = n("b622"), o = i("toStringTag"), a = "Arguments" == d(function() {
          return arguments;
        }()), u = function(t3, e2) {
          try {
            return t3[e2];
          } catch (n2) {
          }
        };
        t2.exports = r ? d : function(t3) {
          var e2, n2, r2;
          return void 0 === t3 ? "Undefined" : null === t3 ? "Null" : "string" == typeof (n2 = u(e2 = Object(t3), o)) ? n2 : a ? d(e2) : "Object" == (r2 = d(e2)) && "function" == typeof e2.callee ? "Arguments" : r2;
        };
      }, f772: function(t2, e, n) {
        var r = n("5692"), d = n("90e3"), i = r("keys");
        t2.exports = function(t3) {
          return i[t3] || (i[t3] = d(t3));
        };
      }, fb15: function(t2, e, n) {
        "use strict";
        if (n.r(e), n.d(e, "install", function() {
          return o["c"];
        }), n.d(e, "VueTelInput", function() {
          return o["a"];
        }), "undefined" !== typeof window) {
          var r = window.document.currentScript, d = n("8875");
          r = d(), "currentScript" in document || Object.defineProperty(document, "currentScript", { get: d });
          var i = r && r.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
          i && (n.p = i[1]);
        }
        var o = n("b635");
        e["default"] = o["b"];
      }, fb6a: function(t2, e, n) {
        "use strict";
        var r = n("23e7"), d = n("861d"), i = n("e8b5"), o = n("23cb"), a = n("50c4"), u = n("fc6a"), c = n("8418"), $ = n("b622"), s = n("1dde"), f = n("ae40"), l = s("slice"), p = f("slice", { ACCESSORS: true, 0: 0, 1: 2 }), h = $("species"), v = [].slice, y = Math.max;
        r({ target: "Array", proto: true, forced: !l || !p }, { slice: function(t3, e2) {
          var n2, r2, $2, s2 = u(this), f2 = a(s2.length), l2 = o(t3, f2), p2 = o(void 0 === e2 ? f2 : e2, f2);
          if (i(s2) && (n2 = s2.constructor, "function" != typeof n2 || n2 !== Array && !i(n2.prototype) ? d(n2) && (n2 = n2[h], null === n2 && (n2 = void 0)) : n2 = void 0, n2 === Array || void 0 === n2))
            return v.call(s2, l2, p2);
          for (r2 = new (void 0 === n2 ? Array : n2)(y(p2 - l2, 0)), $2 = 0; l2 < p2; l2++, $2++)
            l2 in s2 && c(r2, $2, s2[l2]);
          return r2.length = $2, r2;
        } });
      }, fc6a: function(t2, e, n) {
        var r = n("44ad"), d = n("1d80");
        t2.exports = function(t3) {
          return r(d(t3));
        };
      }, fdbc: function(t2, e) {
        t2.exports = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 };
      }, fdbf: function(t2, e, n) {
        var r = n("4930");
        t2.exports = r && !Symbol.sham && "symbol" == typeof Symbol.iterator;
      }, fea9: function(t2, e, n) {
        var r = n("da84");
        t2.exports = r.Promise;
      } });
    });
  }
});

// dep:vue3-tel-input
var vue3_tel_input_default = require_vue3_tel_input_umd_min();
export {
  vue3_tel_input_default as default
};
//# sourceMappingURL=vue3-tel-input.js.map
