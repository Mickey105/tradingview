{
  "version": 3,
  "sources": ["../../format-date-time/index.js", "dep:format-date-time"],
  "sourcesContent": ["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.DateTimeFormat = factory());\n}(this, (function () { 'use strict';\n\nfunction formatKeys(key) {\n    return {\n        YYYY: ['getFullYear', 4],\n        YY: ['getFullYear', 2],\n        // extra increment field for getMonth\n        MM: ['getMonth', 2, 1],\n        DD: ['getDate', 2],\n        HH: ['getHours', 2],\n        mm: ['getMinutes', 2],\n        ss: ['getSeconds', 2],\n        ms: ['getMilliseconds', 3]\n    }[key];\n}\n\nvar utils = {\n    formatKeys: formatKeys\n};\n\nfunction Formatter(constructorFormat) {\n    var globalFormat = void 0;\n    var output = void 0;\n\n    if (typeof constructorFormat !== 'string') {\n        globalFormat = 'HH:mm:ss (YYYY-MM-DD)';\n    } else {\n        globalFormat = constructorFormat;\n    }\n\n    function parseNext(dateObject, parseToFormat) {\n        var regex = /(?=(YYYY|YY|MM|DD|HH|mm|ss|ms))\\1([:/]*)/;\n        var match = regex.exec(parseToFormat);\n        var date = dateObject || new Date();\n\n        if (match) {\n            var keyProps = utils.formatKeys(match[1]);\n            var paddedPatternValue = '00' + (date[keyProps[0]]() + (keyProps[2] || 0)).toString();\n            var cleanPatternValue = paddedPatternValue.slice(-keyProps[1]) + (match[2] || '');\n            var format = parseToFormat.replace(match[0], cleanPatternValue);\n\n            parseNext(date, format);\n        } else {\n            output = parseToFormat;\n        }\n\n        return output;\n    }\n\n    this.now = function (format) {\n        var outputFormat = void 0;\n\n        if (typeof format !== 'string') {\n            outputFormat = globalFormat;\n        } else {\n            outputFormat = format;\n        }\n\n        return parseNext(new Date(), outputFormat);\n    };\n\n    this.parse = function parse(date, format) {\n        var dateObj = void 0;\n        var outputFormat = void 0;\n\n        if (!date || Number.isNaN(new Date(date).getDate())) {\n            dateObj = new Date();\n        } else {\n            dateObj = new Date(date);\n        }\n\n        if (typeof format !== 'string') {\n            outputFormat = globalFormat;\n        } else {\n            outputFormat = format;\n        }\n\n        return parseNext(dateObj, outputFormat);\n    };\n\n    return this;\n}\n\nreturn Formatter;\n\n})));\n", "export default require(\"./node_modules/format-date-time/index.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,KAAC,SAAU,QAAQ,SAAS;AAC3B,aAAO,YAAY,YAAY,OAAO,WAAW,cAAc,OAAO,UAAU,QAAQ,IACxF,OAAO,WAAW,cAAc,OAAO,MAAM,OAAO,OAAO,IAC1D,OAAO,iBAAiB,QAAQ;AAAA,IAClC,GAAE,SAAO,WAAY;AAAE;AAEvB,eAAS,WAAW,KAAK;AACrB,eAAO;AAAA,UACH,MAAM,CAAC,eAAe,CAAC;AAAA,UACvB,IAAI,CAAC,eAAe,CAAC;AAAA,UAErB,IAAI,CAAC,YAAY,GAAG,CAAC;AAAA,UACrB,IAAI,CAAC,WAAW,CAAC;AAAA,UACjB,IAAI,CAAC,YAAY,CAAC;AAAA,UAClB,IAAI,CAAC,cAAc,CAAC;AAAA,UACpB,IAAI,CAAC,cAAc,CAAC;AAAA,UACpB,IAAI,CAAC,mBAAmB,CAAC;AAAA,QAC7B,EAAE;AAAA,MACN;AAEA,UAAI,QAAQ;AAAA,QACR;AAAA,MACJ;AAEA,eAAS,UAAU,mBAAmB;AAClC,YAAI,eAAe;AACnB,YAAI,SAAS;AAEb,YAAI,OAAO,sBAAsB,UAAU;AACvC,yBAAe;AAAA,QACnB,OAAO;AACH,yBAAe;AAAA,QACnB;AAEA,iBAAS,UAAU,YAAY,eAAe;AAC1C,cAAI,QAAQ;AACZ,cAAI,QAAQ,MAAM,KAAK,aAAa;AACpC,cAAI,OAAO,cAAc,IAAI,KAAK;AAElC,cAAI,OAAO;AACP,gBAAI,WAAW,MAAM,WAAW,MAAM,EAAE;AACxC,gBAAI,qBAAqB,QAAQ,KAAK,SAAS,IAAI,KAAK,SAAS,MAAM,IAAI,SAAS;AACpF,gBAAI,oBAAoB,mBAAmB,MAAM,CAAC,SAAS,EAAE,KAAK,MAAM,MAAM;AAC9E,gBAAI,SAAS,cAAc,QAAQ,MAAM,IAAI,iBAAiB;AAE9D,sBAAU,MAAM,MAAM;AAAA,UAC1B,OAAO;AACH,qBAAS;AAAA,UACb;AAEA,iBAAO;AAAA,QACX;AAEA,aAAK,MAAM,SAAU,QAAQ;AACzB,cAAI,eAAe;AAEnB,cAAI,OAAO,WAAW,UAAU;AAC5B,2BAAe;AAAA,UACnB,OAAO;AACH,2BAAe;AAAA,UACnB;AAEA,iBAAO,UAAU,IAAI,KAAK,GAAG,YAAY;AAAA,QAC7C;AAEA,aAAK,QAAQ,SAAS,MAAM,MAAM,QAAQ;AACtC,cAAI,UAAU;AACd,cAAI,eAAe;AAEnB,cAAI,CAAC,QAAQ,OAAO,MAAM,IAAI,KAAK,IAAI,EAAE,QAAQ,CAAC,GAAG;AACjD,sBAAU,IAAI,KAAK;AAAA,UACvB,OAAO;AACH,sBAAU,IAAI,KAAK,IAAI;AAAA,UAC3B;AAEA,cAAI,OAAO,WAAW,UAAU;AAC5B,2BAAe;AAAA,UACnB,OAAO;AACH,2BAAe;AAAA,UACnB;AAEA,iBAAO,UAAU,SAAS,YAAY;AAAA,QAC1C;AAEA,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IAEP,CAAE;AAAA;AAAA;;;ACzFF,IAAO,2BAAQ;",
  "names": []
}
